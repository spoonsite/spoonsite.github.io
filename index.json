[
{
	"uri": "/dev/developersguide/",
	"title": "Developer Setup Guide",
	"tags": [],
	"description": "Developer Setup Guide",
	"content": "This guide describes various issues developers would be concerned with, such as how to set up their IDE (integrated development environment), what libraries are used, etc. See Server Code Standard, and Front-end Code Standards for Coding and Style guides.\nDev Environment Set up with NetBeans  Install openjdk 8\n Windows: https://github.com/ojdkbuild/ojdkbuild Linux: sudo apt install openjdk-8-jdk  Install Netbeans 8.2 Java EE version from https://netbeans.org/downloads/8.2/\n Run the installer, and during install don\u0026rsquo;t check either server box (glassfish or tomcat) Point Netbeans to the Openjdk 8 installation path  Windows: C:\\Program Files\\ojdkbuild\\java-1.8.0-openjdk-1.8.0.222-2 Linux: /usr/lib/jvm/java-8-openjdk-amd64/   Download Tomcat 7.0.96 binaries from https://tomcat.apache.org/download-70.cgi\n Unpack Tomcat  Download Elasticsearch 7.2.1 from https://www.elastic.co/downloads/past-releases/elasticsearch-7-2-1\n Once it is downloaded, unpack Elasticsearch Once unpacked, find the executable for elasticsearch in elasticsearch/bin/  It is a .bat file for Windows For Linux is is a shell file  Set the JAVA_HOME environment variable at the top of the elasticsearch executable  Windows: set JAVA_HOME=C:\\Program Files\\ojdkbuild\\java-1.8.0-openjdk-1.8.0.222-2 Linux: JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64  Start Elasticsearch by double-clicking the file that was just modified  Download the latest Maven 3.6 binaries from https://maven.apache.org/download.cgi\n Unpack Maven  Clone the SPOON project\n If you are using git: git clone https://github.com/spoonsite/SPOON.git  Start and configure Netbeans\n Netbeans \u0026gt; tools \u0026gt; options \u0026gt; Java \u0026gt; Maven \u0026gt; Maven Home \u0026gt; \u0026ldquo;Point to maven folder downloaded from above\u0026rdquo; \u0026gt; apply \u0026gt; OK Netbeans \u0026gt; services \u0026gt; servers \u0026gt; add server \u0026gt; Apache Tomcat or TomEE \u0026gt; next \u0026gt; \u0026ldquo;Point to downloaded tomcat\u0026rdquo; \u0026gt; \u0026ldquo;Set user name and password = 1\u0026rdquo; \u0026gt; finish Netbeans \u0026gt; services \u0026gt; \u0026ldquo;just created server\u0026rdquo; \u0026gt; properties \u0026gt; Platform \u0026gt; VM Options \u0026gt; -Xms8G -Dapplication.datadir=E:/SPOON_PROJECT_DATA Netbeans \u0026gt; File \u0026gt; open project \u0026gt; \u0026ldquo;cloned project\u0026rdquo; \u0026gt; Open Project \u0026gt; spoon_Directory=\u0026gt;server_Directory=\u0026gt;openstorefront \u0026gt; Open Required Projects \u0026gt; Open Project Resolve Problems \u0026gt; \u0026ldquo;Resolve each problem until all green.\u0026rdquo; \u0026gt; Close  Clean the project in Netbeans\n Clean the top-level openstorefront project (right-click and select clean) Build with dependencies (right-click and select build with dependencies, NOTE: this may take a long time as it has to download many packages) Run the openstorefront-web project (right-click and select run)  Open a web browser to localhost:8080/openstorefront\n Login as an admin Go to local Admin -\u0026gt; Admin Tools Application Management -\u0026gt; System Search Control -\u0026gt; Re-Index Listings (this may take a while and may fail the first time, if it does, just run the indexer again)  Start the dev server for Vue.js for developing front-end code\n In a terminal navigate to the spoon project and step into the client=\u0026gt;desktop folder Run: npm install Then run: npm run serve (openstorefront-login uses the command npm run dev)  "
},
{
	"uri": "/user/howtoregister/",
	"title": "How to Register an Account with Spoon",
	"tags": [],
	"description": "",
	"content": " And Troubleshooting  Registering for an account on Spoon is free and open to anyone regardless of nationality. Spoon only supports English, however.  Sign up, if you haven\u0026rsquo;t already. You will need to fill in your information first, then select \u0026ldquo;GET VERIFICATION CODE\u0026rdquo;, which will create your account and send a confirmation email to your stated email address. You will not be able to login to Spoon until you click the confirmation link sent in the email. If you did not receive an email, then your email\u0026rsquo;s spam box. You can click \u0026ldquo;GET VERIFICATION CODE\u0026rdquo; repeatedly to get another confirmation email if you did not find the first one. If you still cannot find the email, you must send a message to the Spoon support team through Spoon\u0026rsquo;s Contact Us form. See below for more details.  If you cannot receive the confirmation email then you must contact the Spoon support team via the on-site Contact Us form, in order to work around any potential issues that might have arisen due an email connection problem. Spoon Support will attempt to contact you back via email to help you setup an account on Spoon.   "
},
{
	"uri": "/user/userguide/",
	"title": "User Guide",
	"tags": [],
	"description": "",
	"content": "This is a guide to help users use SPOON. Basic Searching A basic keyword search is available on the landing page. Enter the text you want to search on and press \u0026lsquo;enter\u0026rsquo; or click the magnifying glass to the right of the search bar. If you would like to see all of our parts just click the magnifying glass without typing anything in the search bar.\nFiltering a Basic Search In order to help narrow down the parts you are looking for you can use filters.\nSearch Options Search options are available on the landing page as well as the Search Results page. If you click the arrow to the left of the search bar, you will see a drop down menu. The top part of the menu allows you to choose which fields the keyword search works on. For example, if you just wanted parts with blue in the title, you could type blue in the search bar and select only the \u0026lsquo;Name\u0026rsquo; search option.\nEntry Types If you are looking for a certain entry types, you can select one in the drop down menu. If you click the arrow to the right of the search bar, you will see the bottom section of the drop down is titled \u0026lsquo;Entry Types\u0026rsquo;. These are all of the types of satellite parts we have. You can search for a specific type by selecting one and then typing something into the search bar.\nFiltering Search Results Once you do a search, you will be redirected to the Search Results page. This page lets you see the results of your search as well as view individual parts, filter your results, and do new searches. In order to filter your search, click the funnel button on the top left of the page. A sidebar will become visible. This will allow you to pick a certain category, tag, organization or attribute. Filtering on any of these fields will return parts that match all of selected filters exactly.\nContact Us You can contact SPOON support through the menu on the top right of the window. Click the menu button (the three horizontal lines) and select \u0026lsquo;Contact\u0026rsquo;. This will take you to a screen that will allow you to send SPOON support a message. Support will get back to you as soon as they can!\n"
},
{
	"uri": "/dev/mongosetupguide/",
	"title": "MongoDB Setup Guide",
	"tags": [],
	"description": "MongoDB Setup Guide",
	"content": "This guide describes how to setup MongoDB in a docker container for development. Method #1: Build a Docker Container with a Dockerfile Create a \u0026quot;Dockerfile\u0026quot; with the following contents:\nFROMmongo:4.2.0-bionicRUN mkdir -p /etc/mongoRUN echo \u0026#34;net:\\n bindIp: 0.0.0.0\\n port: 27017\u0026#34; \u0026gt; /etc/mongo/mongod.conf Don't make a mongod.conf like this for production. bindIp: 0.0.0.0 allows connections from anywhere and is not secure.\n This docker file must be all by itself inside of its own directory.\nNow in the directory containing this file we need to run the following:\ndocker build -t spoon-mongo . docker run -it --name some-mongo -p 27017:27017 spoon-mongo --config /etc/mongo/mongod.conf Finally you need to change some property lines inside of the openstorefront.properties file of your database directory. For example, the openstorefront.properties file might be found in: C:\\dev\\SPOON_DATA\\config The following properties need to be added near the top of the file.\ndb.use.mongo=true mongo.database=storefront Now that you have performed all the above steps, you just need to shutdown your tomcat server and restart it along with elasticsearch. After a few minutes your spoonsite instance should be up and running along all the data found in the aforementioned directory.\nMethod #2: Mount the mongod.conf file into the container First you need to make a mongod.conf file and give it the following contents:\n# mongod.conf net: bindIp: 0.0.0.0 port: 27017 Now that you have that file made, you need to take note of its parent directory location on disk. For example, the directory containing the file could be at C:\\dev\\tempdir\\.\nNow you need to run the following command:\ndocker run --name some-mongo -v C:\\dev\\tempdir\\:/etc/mongo -d mongo --config /etc/mongo/mongod.conf You may have to resolve the issues with the choice of forward slashes and/or backslashes.\nAlso remember you will still need to modify the openstorefront.properties file as mentioned above. Further you may need to add an additional property to the file:\ndb.use.mongo=true mongo.connection.url=mongodb://\u0026lt;your ip address\u0026gt; mongo.database=storefront Further a Mongo inspector tool is nice to have, the following have been tested and work:\n Robo 3T NoSQLBooster for MonogDB  Finally, should you want for more documentation see https://docs.docker.com/samples/library/mongo/\nRestore data to the database You should have a backup of the database.\nmkdir mongo-backup mongodump --db storefront --out mongo-backup/`date +\u0026#34;%m-%d-%y\u0026#34;` And then put that data inside the running docker container.\n# copy the backup to the container docker cp 01-08-20/. \u0026lt;mongo container\u0026gt;:/home # get a shell to the running container docker exec -it \u0026lt;mongo container\u0026gt; bash # now the shell is inside the docker container cd /home # restore the backup \u0026#34;storefront\u0026#34; database mongorestore --db \u0026lt;restored database\u0026gt; --drop storefront See the Mongo data migration guide\n"
},
{
	"uri": "/systemadmin/setup/",
	"title": "Setup",
	"tags": [],
	"description": "These are instructions on how to get production instance of SPOON set up on a VM.",
	"content": "These are instructions on how to get production instance of SPOON set up on a VM.\n\nWalkthrough This documentation will walk you through setting up a production server to serve SPOON.\n Prerequisites OpenJDK Elasticsearch MongoDB Tomcat Deployment  Prerequisites Required Hardware (can be run on a VM or dedicated hardware)  Suggested:\n CPUs: 4 RAM: 8GB DISK: 40GB (Increase, if storing a lot of media and resources locally)  Minimum:\n CPUs: 1 RAM: 2GB (Application should be set to use 1GB) DISK: 20GB   Required Software  OpenJDK 8 Elasticsearch 7.2.1 MongoDB 4.2.0 Tomcat 7.0.96  Server Setup Install CentOS 7 onto a VM using the following options:\n Set up correct time zone Ensure keyboard is in the correct language (if using English make sure the ~ works) Software Selection:  Minimal install Compatibility Libraries Development Tools Security Tools System Administrator Tools   Once CentOS has finished installing connect the VM to the internet and run yum update.\nWARING: Some commands may need to be run with sudo.\nOpenJDK  Install openjdk-8\nyum install java-1.8.0-openjdk -y java -version Verify that the openjdk version is \u0026quot;1.8.0_***\u0026quot;\n  Elasticsearch  Get and install Elasticsearch\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.1-x86_64.rpm wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.2.1-x86_64.rpm.sha512 sha512sum -c elasticsearch-7.2.1-x86_64.rpm.sha512 rpm --install elasticsearch-7.2.1-x86_64.rpm Enable Elasticsearch as a service and start Elasticsearch\nsystemctl enable elasticsearch service elasticsearch start service elasticsearch status Verify that Elasticsearch is running, the last command from above should output something similar to:\n● elasticsearch.service - Elasticsearch Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; enabled; vendor preset: disabled) Active: active (running) since ... Docs: http://www.elastic.co ...  MongoDB  Add the MongoDB yum repository\nsudo vi /etc/yum.repos.d/mongodb.repo Add the following to the file\n[MongoDB] name=MongoDB Repository baseurl=http://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.2/x86_64/ gpgcheck=0 enabled=1 Install MongoDB\nyum install mongodb-org Start Mongo and set up as a service\nsystemctl enable mongod.service systemctl start mongod.service Verify that MongoDB is installed and started\nmongod --version You should get something like\ndb version v4.2.1 git version: edf6d45851c0b9ee15548f0f847df141764a317e OpenSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013 allocator: tcmalloc modules: none build environment: distmod: rhel70 distarch: x86_64 target_arch: x86_64  Tomcat  Install Tomcat\nyum install tomcat Update the Tomcat configuration to use a specific data directory\nPaste the following line into /usr/share/tomcat/conf/tomcat.conf.\nJAVA_OPTS=\u0026#34;-Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true -Dapplication.datadir=/var/spoon -Xmx4g -XX:+UseConcMarkSweepGC\u0026#34; Add an admin user to the Tomcat server (this is only for the tomcat server and not the SPOON application)\nUncomment out the second-to-last line and change the admin password\nsudo vim /etc/share/tomcat/conf/tomcat-users.xml Set up Tomcat as a service to start on boot and start Tomcat\nsystemctl enable tomcat.service systemctl start tomcat.service systemctl status tomcat.service Ensure Tomcat is running\ntomcat version You should get something like:\nServer version: Apache Tomcat/7.0.76 Server built: Mar 12 2019 10:11:36 UTC Server number: 7.0.76.0 OS Name: Linux OS Version: 3.10.0-1062.4.1.el7.x86_64 Architecture: amd64 JVM Version: 1.8.0_232-b09 JVM Vendor: Oracle Corporation  Deployment  Copy the war file to the VM (run this command on your local machine)\nscp openstorefront.war username@vm-hostname:~/openstorefront.war Change the permissions of the war (run this command on the VM)\nchmod 777 ~/openstorefront.war chown tomcat:tomcat ~/openstorefront.war Remove any old SPOON applications\nsystemctl stop tomcat rm -rf /usr/share/tomcat/webapps/openstorefront /usr/share/tomcat/webapps/openstorefront.war systemctl start tomcat Deploy the new SPOON application\nIf you already have data, see Add data to the application, before doing this step.\nmv ~/openstorefront.war /usr/share/tomcat/webapps/ Navigate to localhost:8080/openstorefront/ to view SPOON\n If something has gone wrong and you are unable to view SPOON, use journalctl to debug the issue\njournalctl -u tomcat -f  Add data to the application The application will create some base data for you, but if you have data from a previous instance, you can use it with the application using these steps.\n Create the data directory (SPOON will automatically create data if data is not found)\nmkdir /var/spoon Copy the data from your local machine to the VM (should be run on your local machine)\nscp spoon-data.tar.gz username@VM-address:~/spoon-data.tar.gz Unpack the data and change permissions to allow Tomcat to access it (should be run on the VM)\ntar -zxf ~/spoon-data.tar.gz -C /var/spoon mv /var/spoon/spoon/* /var/spoon rm -rf /var/spoon/spoon chown -R root:tomcat /var/spoon chmod 777 -R /var/spoon "
},
{
	"uri": "/systemadmin/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": "Information on running SPOON in a Docker container.\n\nThe SPOON application contains multiple Dockerfiles in order to build Docker images. There are two Dockerfiles in the repo. One is for development which is used by Jenkins to deploy the application for testing of new features. The other Dockerfile is for the release build. These can be found in the repo on GitHub.\nDevelopment Docker Container To build the container you will need:\n a zip of a SPOON database the startup.sh the tomcat-users.xml  The startup.sh and tomcat-users.xml can be found at GitHub. To obtain the database take the database folder from a previous running instance of Storefront and zip the folder. Place all three items in the same directory as the Dockerfile when building the image. To build the image run:\ndocker build -t some-tag . To run the container you will need a war file to mount to the container.\nRun the container as a detached process with:\ndocker run -d \\ -v $(pwd)/openstorefront.war:/usr/local/tomcat/webapps/openstorefront.war \\ -p 8081:8080 \\ openstorefront Since there is already a dataset built into the container, in order to run the application on an empty database, point the database location to a different location with:\ndocker run -d \\ -v $(pwd)/openstorefront.war:/usr/local/tomcat/webapps/openstorefront.war \\ -p 8081:8080 \\ --env CATALINA_OPTS=\u0026#34;-Xmx2048m -Dapplication.datadir=/var/selenium\u0026#34; \\ openstorefront"
},
{
	"uri": "/dev/codestandards/front-end-code-standard/",
	"title": "Front-end Code Standards",
	"tags": [],
	"description": "",
	"content": "These are the code standards for this project. Style Currently supporting Edge, Chrome, Firefox (latest LTS release)\nSafari, Opera, IE 11 or others should work but we are not testing for them\nVueJS There are two VueJS single page applications being used for SPOON. These can be found in /client/login and /client/desktop.\nThe projects were generated with the Vue CLI. See the Vue CLI documentation for more information about the structure of the SPA.\nDevelopers should follow the linting rules defined inside the application. Run npm run lint or use your IDE\u0026rsquo;s plugin system to integrate eslint.\nLegacy ExtJS SPOON is currently in the process of updating it\u0026rsquo;s UI to VueJS. There are still old pages in ExtJS. The following were the code standard for this code.\nProject Specific  Use the Ext.js docs. Look at them first for utility functions as they are normalize for the browser (format, string manipulation, etc.) When making reusable components don\u0026rsquo;t use \u0026ldquo;ID\u0026rdquo;s properties. \u0026ldquo;ID\u0026rdquo;s are OK on individual pages; must be unique; \u0026ldquo;ID\u0026rdquo; properties are Global Match validation from server, to make it easier for the user to get the right values. Provide friendly but direct messages Pack related components (notification panel, notification) into a single script file to reduce loading time Avoid deeply nested component definitions as it is easier to read fewer layers Avoid ES 6 features until browsers\u0026rsquo; support is consistent (mainly IE 11) A { should be on the end of the line  Example:\nfunction demo(){ return 0; } "
},
{
	"uri": "/dev/architecture/",
	"title": "Project Architecture",
	"tags": [],
	"description": "",
	"content": "This guide describes the high-level design of the server and client architecture. Client Architecture   Client Architecture Diagram   Client Details The client core structure is based on Ext.js which provides UI components and utilities. This significantly reduces third-party dependencies which in turn reduces maintenance, shortens the learning curve, and improves quality and consistency.\nIn addition, there are application-specific overrides and high-level components created to facilitate reuse. The application is composed by stripes layouts with a top-level page and fragment tool pages.\nServer Architecture   Server Architecture Diagram   Server Details Component definitions are as follows:\n Security - Authentication and authorization is delegated to OpenAM. This is configured through a custom realm using the Apache Shiro library. All requests are passed through this filter. REST API - The REST API is the component that handles the data interaction between the clients and provides the interface through which the clients can communicate. The REST API (application programming interface) is broken into two sections: resources and services. Resources handle the CRUD (create, reade, update, and delete) operations on the data. Services handle operations across data sets. This provides a clean and clear API for integrators. API Docs - The API docs are generated live based on the currently running code. This keeps the documents always current and reduces maintenance. Other system-related call-backs (e.g., retrieving binary resources, login handling, etc.) are handled through the Stripes framework. Business Layer - Handles all rules applied to the data as well transaction support. Managers - The role of the manager class is to handle the interaction with a resource. This enables clean initialization and shutdown of resources and provides centralized access. Services - Each service is in charge of handling a specific group of Entity models. Services provide transaction support and business logic handling. All services are accessed through a service proxy class. The service proxy class provides auto transaction and service interception support. Models - The entity models represent the data in the system and provide the bridge from the application to the underlying storage. Import / Export - Provides a mechanism for loading and transferring data from one system to another.  The server build environment relies on the following platforms/tools:\n Java - Core language and platform Maven - Used for the project structure, building, and dependency management  Storage Details   Storage Diagram   File System - Holds configuration, resources, media, imports, reports and plugins. By default, under /var/openstorefront it can be changed by setting the system property -Dapplication.datadir=\u0026lt;directory\u0026gt; on the command line.\nElasticsearch - Used to perform fuzzy index searches across the entries. It is kept in sync by the application.\nDatabase - Holds all entry data and application data.\nRuntime Environment   Runtime Environment Diagram   Runtime Details The runtime environment relies upon the following applications:\n Proxy Server - This is an external system that proxies requests to the application server. Tomcat 7 - Tomcat is the web container used to host the storefront application. Java 8 - Is the runtime platform that runs Tomcat. OS/VM - Is the host machines operating system. OpenAM - OpenAM runs externally and a policy agent in Tomcat ensures the site is secure.  Runtime Component Integration Vectors   Runtime Component Integration Vectors   Component Integration Vectors Details The component integration vectors (CIV) are shown below.\n   Source Component Class Target Component Notes     openstorefront C Elasticsearch    openstorefront C OpenAM OpenAM with their policy agent requires a hard tie to the application and server   openstorefront B Elasticsearch JEE Application Server currently configured to deploy on Tomcat   JEE Application Server A OS/VM Currently targeted for CentOS    The CIVs represent an integration activity involving a source, Component A, and a target, Component B.\nThe CIVs, as defined by the DI2E PMO, are as follows:\n Class A: A-deployed On-B. Component B is the underlying environment (providing resources) for A; B does not actively manage A (e.g., OS, VM).\n Class B: A-contained In-B. Component \u0026ldquo;lives in\u0026rdquo; B; B manages the lifecycle of A, from cradle to grave. (e.g., Widget in OWF; EJB in JEE server; OSGi bundle in Karaf; SCA).\n Class C: A-interfaces With-B. Component A initiates communication with B via API(s). (e.g., JDBC, JMS, REST/SOAP call, legacy communications).\n Class D: A-indirectly Consumes-B. Component A has a dependency o.n data/functionality of B even though it doesn\u0026rsquo;t interface with B. (e.g., subscriber/publisher relationship; A integrates with another component that offers data from B).\n  Ports The applicable ports are shown below:\n   Port (Default) Description Type     8080 Tomcat HTTP Inbound   8009 Tomcat AJP Inbound (Open if not using 8080)   9200 Elasticsearch (Accepts JSON) Outbound (Does not need to be exposed outside the system)   9300 Elasticsearch (Accepts Binary) Outbound (Does not need to be exposed outside the system)    All ports are configurable via configuration for the respected applications. Additional ports maybe be used depending on configuration.\n"
},
{
	"uri": "/systemadmin/administratorguide/",
	"title": "Administrator Guide",
	"tags": [],
	"description": "",
	"content": "This article gives further instructions on setting up and configuring the web application.\n\nRelated Documentation Architecture\nSetup\nApplication Properties Configure in: /var/openstorefront/config/openstorefront.properties\n   Property Description Default     Database     db.connectionpool.min DB min pool size 5   db.connectionpool.max DB max pool size 40   db.user Should match orientdb-server-config.xml app   db.pw Should match orientdb-server-config.xml aPpw0rd!   db.use.mongo If the application should use MongoDB instead of OrientDB true   mongo.database The name of the database in MongoDB storefront   errorticket.max Max amount of ticket to hold (culls the oldest records upon filling) 5000   trackingrecords.max.age.days Max age of tracking records 365   external.usermanager Specifies manager for external user management (LdapUserManager) IniRealmManager   external.sync.activate Set to true to run the sync false   search.server The search server that the application uses (must use Elasticsearch) Elasticsearch   elastic.server.host The hostname of the machine hosting Elasticsearch localhost   elastic.server.port The port that Elasticseach is using 9200        Security Header Not in use for SPOON    openam.url http:/…/openam (Full URL to OpenAM instance)    logout.url http:/…/openam/UI/Logout (Full URL to logout)    openam.header.username HTTP Header for Username sAMAccountName   openam.header.firstname HTTP Header for Firstname givenname   openam.header.lastname HTTP Header for Lastname sn   openam.header.email HTTP Header for email mail   openam.header.phone HTTP Header for group telephonenumber   openam.header.group HTTP Header for ldapguid memberOf   openam.header.ldapguid HTTP Header for organization memberid   openam.header.organization  company   openam.header.admingroupname HTTP Header for Admin Group Name *Handles multiple values STOREFRONT-Admin        Security     role.admin Name of the Admin Role STOREFRONT-Admin        Dev Tools Login Not in use for SPOON    tools.login.user     tools.login.pw          Jira Integration Deprecated    jira.connectionpool.size  20   jira.connection.wait.seconds  60   jira.server.url  https://jira.di2e.net        Job management     job.working.state.override.minutes Max job running time, used for Integrations 30   task.complete.expireminutes  5   task.error.expireminutes  4320   report.lifetime How long will this report be in the system? 180        Email Support     mail.smtp.url Login Credentials for Integrations (currently just for Jira) localhost   mail.server.user Login Credentials for mail server    mail.server.pw Login Credentials for mail server    mail.smtp.port Mail Port (25 common)    mail.use.ssl Set to true if server requires it    mail.use.tls Set to true if server requires it    mail.from.name From Name Storefront Notification   mail.from.address From Email Address donotreply@storefront.net   mail.reply.name Reply name (usually display at the bottom of the message)    mail.reply.address Reply email (usually display at the bottom of the message)    mail.attach.file Set to true or false indicating if emails should contain attached files 0   message.archive.days User message max age of archives 30   message.queue.minmintues User message queue time or the time the message waits before sending 10   message.maxretires Max times the user message will try to send if unable to deliver 5   message.recentchanges.days Time between “recent changes” messages from being sent 28        General     app.title Title of the application. Used in emails but, also other places Storefront   websockets.enabled Enables the use of websockets for server notifications false   userreview.autoapprove Allows user submitted info to be automatically approved (reviews, ect.) true   max.post.size Maximum file size for files being saved to the system (in MB) 2000        LDAP Manager Not in use for SPOON    ldapmanager.url Full URL to the LDAP    ldapmanager.userDnTemplate uid={0},ou=users,dc=mycompany,dc=com; Reserved, not currently used    ldapmanager.authenticationMechanism NONE, SIMPLE, DIGEST-MD5, etc. SIMPLE   ldapmanager.security.sasl.realm May be needed for SASL authentication    ldapmanager.binddn The LDAP user to use in the connection (Full DN name)    ldapmanager.pw     ldapmanager.connectionTimeout  15000   ldapmanager.contextRoot Root to directory to search    ldapmanager.attribute.username Attribute to map to username sAMAccountName   ldapmanager.attribute.email Attribute to map to email mail   ldapmanager.attribute.phone Attribute to map to phone number telephonenumber   ldapmanager.attribute.fullname Attribute to map to fullname name   ldapmanager.attribute.organization Attribute to map to organization company   ldapmanager.attribute.guid Attribute to map to GUID objectGUID        Help     help.url The URL that hosts this documentation https://spoonsite.github.io/    Configuration This section contains information on how to configure LDAP and OpenAM for SPOON. These features are currently inactive on SPOON, but could be activated in the future.\nLDAP Configuration LDAP is currently not in use on SPOON.\n Configure in /var/openstorefront/config/shiro.ini\n[main] ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm ldapRealm.userDnTemplate = uid={0},ou=users,dc=mycompany,dc=com ldapRealm.contextFactory.url = ldap://ldapHost:389 ldapRealm.contextFactory.authenticationMechanism = DIGEST-MD5 ldapRealm.contextFactory.environment[some.obscure.jndi.key] = some value Database See Configure JDBC Realm for how to configure JDBCRealm to obtain its DataSource from JNDI.\n[main] dataSource = org.apache.shiro.jndi.JndiObjectFactory dataSource.resourceName = java://app/jdbc/myDataSource jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm jdbcRealm.permissionsLookupEnabled = true jdbcRealm.dataSource = $dataSource # you can customize the authenticationQuery, userRolesQuery and permissionsQuery, if needed. securityManager.realms = $realm OPENAM (Request Header) OpenAM is currently not in use on SPOON.\n OpenAM configuration\n[main] #Also, remember to comment out the users and roles to remove the INIRealm headerRealm = edu.usu.sdl.openstorefront.security.HeaderRealm securityManager.realms = $headerRealm Integration with OpenAM  Adjust the OpenAM agent filter\nChange:\n\u0026lt;filter-mapping\u0026gt; \u0026lt;filter-name\u0026gt;Agent\u0026lt;/filter-name\u0026gt; \u0026lt;url-pattern\u0026gt;/*\u0026lt;/url-pattern\u0026gt; \u0026lt;dispatcher\u0026gt;REQUEST\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;INCLUDE\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;FORWARD\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;ERROR\u0026lt;/dispatcher\u0026gt; \u0026lt;/filter-mapping\u0026gt; To\n\u0026lt;filter-mapping\u0026gt; \u0026lt;filter-name\u0026gt;Agent\u0026lt;/filter-name\u0026gt; \u0026lt;url-pattern\u0026gt;/*\u0026lt;/url-pattern\u0026gt; \u0026lt;dispatcher\u0026gt;REQUEST\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;ERROR\u0026lt;/dispatcher\u0026gt; \u0026lt;/filter-mapping\u0026gt; Update system properties configurations\nSee Security Header in Application Properties\n  User Types The user types are defined as based on the roles they belong to.\nIf using the built-in security, the system will create default roles for default users, admins and evaluators. It will also create a default admin user: (admin / Secret1@).\nYou should change the admin password after login.\n Pre-defined groups:\nDefault - Allows Searching, tagging, watching, and submitting entries\nGuest -Permissions for guest user. (Only applies if security is setup for that)\nAdmin - All administration permissions. There may be some optional features for which the admin doesn\u0026rsquo;t have permission by default.\nLibrarian -Data management permissions.\nEvaluators - Allows user to edit unpublished evaluations.\nAn admin can define new groups as needed.\nAll users are part of the Default group.\n Database Management The application handles all database interaction transparently, so direct database access and manipulation is not needed.\nRefreshing the Database This will wipe out all data in the application. Data, such as User profiles, cannot be recovered. Component user data can be preserved by performing an export from the component admin tool.\n Make a backup by copying all of the files in the /var/openstorefront/db directory or use the following console tools steps:\n Stop the Tomcat server (e.g. service tomcat stop)\n Remove the folder /var/openstorefront/db\nrm -rf /var/openstorefront/db Start the Tomcat server\n  When the application loads it will create a new database and populate the data from whatever is currently in the import folders (lookups only; attributes, component, articles will need to be manually triggered or uploaded via the Admin Tools UI).\nThe initial load of the application may take a few minutes. If the import directories are empty, the application will load default lookup files that are packaged with the application.\nTroubleshooting If Elasticsearch detects low disk space it will change into Read-Only mode at which point the index records can’t be changed which, causing problems with searching and updating records.\nTo resolve:\n Correct the disk space issue\n Force Elasticsearch out of read-only mode (this should only be done when the disk space issue cannot be resolved)\ncurl -X PUT localhost:9200/_settings -H \u0026#34;Content-Type: application/json\u0026#34; -d \u0026#39; { \u0026#34;index\u0026#34;: { \u0026#34;blocks\u0026#34;: { \u0026#34;read_only_allow_delete\u0026#34;: \u0026#34;false\u0026#34; } } }\u0026#39; Elasticsearch should respond with:\n{ \u0026#34;acknowledged\u0026#34;: true }  See https://discuss.elastic.co/t/forbidden-12-index-read-only-allow-delete-api/110282/4\n"
},
{
	"uri": "/systemadmin/datamigrationguide/",
	"title": "Data Migration Guide",
	"tags": [],
	"description": "",
	"content": "This guide provide help for importing data from external sources as well as moving data from one instance to another instance.\n\nImporting/Export (Third parties) The application provides set of standard format that it accepts to import Attributes/Categories as well as Entries. It also provides a set of custom formats that can have mappings applied. These custom formats allow taking a variety of data with so simple handling.\nSee Admin Tools -\u0026gt; Data Management -\u0026gt; Imports\nCustom Mapping This feature is in beta.\n An admin can create field mapping from a file field to a field in application. Some pre-defined transformation can be applied such as lowercasing the field.\nIn some cases, field mapping is insufficient to import a source. A plugin can be created to provide more handling control (see Developer Guide).\nSystem Archives (System to System / Restore) All system exports are handled through MongoDB. See the documentation on how to import and export the database: mongoimport and mongoexport.\nFull Data Export and Backup To get a backup of the Mongo database use the command line tools mongodump and mongorestore. See https://www.digitalocean.com/community/tutorials/how-to-back-up-restore-and-migrate-a-mongodb-database-on-ubuntu-14-04 for a guide.\nDoing a backup of the Mongo database only backs up the data. There are still resources such as images, pdfs, and documents that also need to be backed up. In this case the application data directory will need to be copied from the file system and backed up.\nMake backup of the database This assumes you have a database named \u0026ldquo;storefront\u0026rdquo; in your database.\nmkdir mongo-backup mongodump --db storefront --out mongo-backup/`date +\u0026#34;%m-%d-%y\u0026#34;` To get the rest of the files for the application go to the data location when the server was setup. For example /var/spoon/. And then backup the data directory.\ncd /var/ zip -r backup_`date +\u0026#34;%m-%d-%y\u0026#34;`.zip spoon Restore backup cd 01-08-20/ mongorestore --db \u0026lt;restored database\u0026gt; --drop storefront  Restore the backup on a docker container # copy the backup to the container docker cp 01-08-20/. \u0026lt;mongo container\u0026gt;:/home # get a shell to the running container docker exec -it \u0026lt;mongo container\u0026gt; bash # now the shell is inside the docker container cd /home # restore the backup \u0026#34;storefront\u0026#34; database mongorestore --db \u0026lt;restored database\u0026gt; --drop storefront "
},
{
	"uri": "/systemadmin/versionmigrationguide/",
	"title": "Version Migration",
	"tags": [],
	"description": "",
	"content": "This guide details changes and upgrades that have happened from version to version.\n\nIn general, you should always upgrade one version at a time in order (i.e., going from 2.2 to 2.4, then 2.2 to 2.3, then to 2.4).This will ensure data migrations will occur in the proper order. If you start from the latest version and have no data then migration is not needed.\nNote: v2.11 Mongo DB support was added. Orient is still used the default database unless configured otherwise.\n Install MongoDB 4.2.1. This can be done through yum. See the MongoDB documentation\n Add/edit application properties\ndb.use.mongo=true mongo.connection.url=mongodb://localhost:27017 Either deploy 2.11 or, if already deployed, then restart the server for the change to take effect\nThe data migration process will apply automatically if the following conditions are met:\n Configured to use Mongo\n There was an previous Orient Install (as determined by the db file directory)\n If the migration hasn't already been applied\n  To force it to re-apply remove the DB-MIGRATION-Mongo_STATUS, DB-MIGRATION-Mongo_LASTRUN_DTS Application Properties from the database by using the application system UI or by using an external tool.\nGenerally the migration process is expected to only take about 1-2 minutes, but it depends on the size of database and system resources.\n  The data migration will remove existing Mongo \u0026quot;Storefront\u0026quot; database collections and replace the content from the equivalent Orient data. Orient's data is not affected by the migration, so the process can be repeated.\n Note: v2.10 This version requires an upgrade to Elasticsearch 7.2.1. This can be done through an RPM. See the Elasticsearch documentation.\nNote: v2.6.3 For existing applications, update var/openstorefront/config/shiro.ini.\nAdd:\n/login/** = anon /mobile/** = authc /api/v1/resource/branding/current = anon /api/v1/resource/securitypolicy = anon /api/v1/resource/faq/* = anon /api/v1/resource/faq = anon /api/v1/resource/feedbacktickets = anon Note: v2.6 Some features such as custom submission require new permissions (See Admin -\u0026gt; Security Roles to add new permissions).\nNote: v2.4.3 This includes the database upgrade. Note: Rollback to previous storefront version will require a restore from a backup prior to 2.4.3 for existing data to work for that version.\n2.4.2 must be deployed before 2.4.3 if you have existing data.\nNote: v2.4.2 Includes a database export and import in preparation for 2.4.3 upgrade of database. If you have an existing database, install 2.4.2 before 2.4.3.\n Shutdown app server Backup /var/openstorefront/db directory Install/deploy 2.4.2 Start app server  You need to wait for 5-20 minutes (depending on size of DB) for the update to occur. During this time the application will be unavailable.\nTo manually export/import:\n Install Orient 2.1.25 to system to use console tool  Shut down app server   From Orient\n$ cd bin \u0026gt; $ ./console.sh (or bin/console.bat under Windows) orientdb\u0026gt; CONNECT plocal:/var/openstorefront/db/openstorefront \u0026lt;DBuser\u0026gt; \u0026lt;db password orientdb\u0026gt; EXPORT DATABASE /temp/mydb.json.gz orientdb\u0026gt; DISCONNECT orientdb\u0026gt; CREATE DATABASE plocal:/var/openstorefront/db/openstorefront (only do this if you have move the old one out of the way) orientdb\u0026gt; IMPORT DATABASE /temp/mydb.json.gz Upgrading from v2.4 to v2.5 Pre-Deployment\nElasticSearch Change the value of elastic.server.port in /var/openstorefront/config/openstorefront.properties from 9300 to 9200\nWindows (manually)\n Install and extract Elasticsearch 5.6.3 on the system Remove/delete the root directory of Elasticsearch 2.x from the system Start Elasticsearch 5.6.3 (by running the elasticsearch-5.6.3/elasticsearch-5.6.3/elasticsearch.bat file)  CentOS using Yum\nDocumentation on installation: https://www.elastic.co/guide/en/elasticsearch/reference/5.6/rpm.html\n Download and install the public signing key  rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch  Add the following in your /etc/yum.repos.d/ directory in a file with a .repo suffix, for example /etc/yum.repos.d/elasticsearch.repo  [elasticsearch-6.x] name=Elasticsearch repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md  Install Elasticsearch  sudo yum install elasticsearch  Run Elasticsearch (with SysV init)  # on system boot sudo chkconfig --add elasticsearch # manually sudo -i service elasticsearch start sudo -i service elasticsearch stop  Run Elasticsearch (with systemd)  # on system boot sudo /bin/systemctl daemon-reload sudo /bin/systemctl enable elasticsearch.service #manually sudo systemctl start elasticsearch.service sudo systemctl stop elasticsearch.service Elasticsearch service command reference (Elasticsearch should be running at this point):\nStart: systemctl start elasticsearch.service\nStop: systemctl stop elasticsearch.service\nTest: curl -XGET 'localhost:9200/?pretty'\nshould give you a response something like this:\n{ \u0026#34;name\u0026#34;: \u0026#34;Cp8oag6\u0026#34;, \u0026#34;cluster_name\u0026#34;: \u0026#34;elasticsearch\u0026#34;, \u0026#34;cluster_uuid\u0026#34;: \u0026#34;AT69_T_DTp-1qgIJlatQqA\u0026#34;, \u0026#34;version\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;5.4.3\u0026#34;, \u0026#34;build_hash\u0026#34;: \u0026#34;f27399d\u0026#34;, \u0026#34;build_date\u0026#34;: \u0026#34;2016-03-30T09:51:41.449Z\u0026#34;, \u0026#34;build_snapshot\u0026#34;: false, \u0026#34;lucene_version\u0026#34;: \u0026#34;6.5.0\u0026#34; }, \u0026#34;tagline\u0026#34;: \u0026#34;You Know, for Search\u0026#34; } Getting everything setup in SPOON:\n In Openstorefront, navigate to Admin Tools -\u0026gt; Application Management -\u0026gt; System -\u0026gt; Search Control Click \u0026quot;Re-Index Listings\u0026quot; (optional) If you haven't set the elastic.server.port to 9200, you can do so now from Admin Tools -\u0026gt; App Management -\u0026gt; System -\u0026gt; System Configuration Properties  Upgrading from v2.3 to v2.4 As part of the upgrade, Metadata will be automatically converted to Attributes. This may take a while if there is a lot of Metadata associated with the entries. The server won't be available until the migration is complete.\n Pre-Deployment\n Edit /var/openstorefront/config/shiro.ini Under [URL] section: Confirm line \u0026quot;/images\u0026quot; is /images/* = anon If not then update it Then restart server if it's running to apply changes  Upgrading from v2.2 to v2.3 DI2E environments that use OpenAM should follow Jira ticket STORE-1243.\n Update Security - If you haven't done any customization then the easiest upgrade path is to just remove the existing shiro.ini.  Delete /var/openstorefront/config/shiro.ini On next server restart, the application will pull the default   Keep in mind this is for environments that use the built in user management rather than an external user management. The default shiro config is set for the built in user management.\n Update Database - 2.3 includes an update to the database.\n Make sure Tomcat is shutdown Make a backup of existing db  Copy /var/openstorefront/db directory to backup location\n Delete all /var/openstorefront/db/databases/openstorefront/openstorefront.*.wal files (just the WAL files, of which there may be one or more; this appears to be optional)  "
},
{
	"uri": "/dev/codestandards/server-code-standard/",
	"title": "Server Code Standard",
	"tags": [],
	"description": "",
	"content": "These are special notes when making additions to the server-side code. Java Style Guide In general, applying the IDE Formating and its default warnings are sufficient to follow and keep the code in-line. These standards borrow ideas from https://google.github.io/styleguide/javaguide.html\nSpecial escape sequences For any character that has a special escape sequence (\\b, \\t, \\n, \\f, \\r, \\\u0026ldquo;, \\\u0026rsquo; and \\), that sequence is used rather than the corresponding octal (e.g., \\012) or Unicode (e.g., \\u000a) escape.\nNon-ASCII characters For the remaining non-ASCII characters, either the actual Unicode character (e.g., ?) or the equivalent Unicode escape (e.g., \\u221e) is used. The choice depends only on which makes the code easier to read and understand, although Unicode escapes outside string literals and comments are strongly discouraged.\nTip: In the Unicode escape case, and occasionally even when actual Unicode characters are used, an explanatory comment can be very helpful.\nSource file structure A source file consists of, in order:\n License or copyright information (use Apache V2 on java side, GPL on front-end; the whole project is GPL) Package statement Import statements Exactly one top-level class  Exactly one blank line separates each section that is present\nWildcard Imports  Avoid wildcard imports, let the IDE import the required classes Let the IDE order the imports  Braces  Use IDE Formating Change need to be agreed upon and update in the formatter  Naming Conventions  Names need to be descriptive Lower-case to start and camelCase The ordering of the name is object owner and then object name. For example: componentResource, means resource is part of or owned by component. Typically, classes are labeled according to function (e.g., ComponentService)  Package names Package names are all lowercase, with consecutive words simply concatenated together (no underscores). For example, com.example.deepspace, not com.example.deepSpace or com.example.deep_space.\nClass names  Class names are written in UpperCamelCase. Class names are typically nouns or noun phrases (e.g., Character or ImmutableList) Interface names may also be nouns or noun phrases (e.g., List), but may sometimes be adjectives or adjective phrases instead (e.g., Readable) Test classes are named starting with the name of the class they are testing, and ending with Test (e.g., HashTest or HashIntegrationTest) There are no specific rules or even well-established conventions for naming annotation types  Method names  Method names are written in lowerCamelCase. Method names are typically verbs or verb phrases (e.g., sendMessage or stop) Underscores may appear in JUnit test method names to separate logical components of the name, with each component written in lowerCamelCase. One typical pattern is _, for example pop_emptyStack. There is no one correct way to name test methods.  Constant names Constant names use CONSTANT_CASE: all uppercase letters, with each word separated from the next by a single underscore.\nConstants are static final fields whose contents are deeply immutable and whose methods have no detectable side effects. This includes primitives, Strings, immutable types, and immutable collections of immutable types. If any of the instance\u0026rsquo;s observable state can change, it is not a constant. Merely intending to never mutate the object is not enough.\nNon-constant field names  Non-constant field names (static or otherwise) are written in lowerCamelCase These names are typically nouns or noun phrases (e.g., computedValues or index)  Parameter names  Parameter names are written in lowerCamelCase One-character parameter names in public methods should be avoided  Local variable names  Local variable names are written in lowerCamelCase Even when final and immutable, local variables are not considered to be constants, and should not be styled as constants  Type variable names Each type variable is named in one of two styles:\n A single capital letter, optionally followed by a single numeral (e.g., E, T, X, T2) A name in the form used for classes (see Class names), followed by the capital letter T (e.g., RequestT, FooBarT).  Caught exceptions (not ignored) Except as noted below, it is very rarely correct to do nothing in response to a caught exception. (Typical responses are to log it, or if it is considered \u0026ldquo;impossible,\u0026rdquo; rethrow it as an AssertionError)\nWhen it truly is appropriate to take no action whatsoever in a catch block, the reason this is justified is explained in a comment.\ntry { int i = Integer.parseInt(response); return handleNumericResponse(i); } catch (NumberFormatException ok) { // it\u0026#39;s not numeric; that\u0026#39;s fine, just continue } return handleTextResponse(response);  Static members (qualified using class) When a reference to a static class member must be qualified, it is qualified with that class\u0026rsquo;s name, not with a reference or expression of that class\u0026rsquo;s type.\nFoo aFoo = ...; Foo.aStaticMethod(); // good aFoo.aStaticMethod(); // bad somethingThatYieldsAFoo().aStaticMethod(); // very bad  Finalizers (not used) It is extremely rare to override Object.finalize.\nTip: Don\u0026rsquo;t do it. If you absolutely must, first read and understand Effective Java by Joshua Bloch, Item 7, \u0026ldquo;Avoid Finalizers,\u0026rdquo; very carefully, and then don\u0026rsquo;t do it.\nJavadocs Javadocs are used on\n Public API points Protected methods Getters or setters that have different behavior than simply wrapping field access DB Entities for documenting what the field is used for  Also see adding APIDescription on the field as that is rendered out to the API documentation.\nException: overrides - Javadoc is not always present on a method that overrides a supertype method.\nUse Block tags:\nAny of the standard \u0026ldquo;block tags\u0026rdquo; that are used appear in the order @param, @return, @throws, @deprecated, and these four types never appear with an empty description. When a block tag doesn\u0026rsquo;t fit on a single line, continuation lines are indented four (or more) spaces from the position of the @.\nFor Example:\n/** * Returns an Image object that can then be painted on the screen. * The url argument must specify an absolute {@link URL}. The name * argument is a specifier that is relative to the url argument. * \u0026lt;p\u0026gt; * This method always returns immediately, whether or not the * image exists. When this applet attempts to draw the image on * the screen, the data will be loaded. The graphics primitives * that draw the image will incrementally paint on the screen. * * @param url an absolute URL giving the base location of the image * @param name the location of the image, relative to the url argument * @return the image at the specified URL * * @throws MalformedURLException * @deprecated */ public Image getImage(URL url, String name) { try { return getImage(new URL(url, name)); } catch (MalformedURLException e) { return null; } } * Taken from How to Write Doc Comments for the Javadoc Tool and edited\nGeneral  Business logic, Transactions, rules should be handled in the service code (core-service) API Interface should have documentation (Javadocs) SimpleDateFormat is not thread-safe, create new instances; don\u0026rsquo;t make static For decimal numbers use BigDecimal, and use valueOf to instantiate Make sure any new code is placed in the appropriate module. Be cautious of dependencies External resources should be handled by a Manager that in turn handles the lifecycle Use example query framework where possible. Keep custom queries to a minimum as this allows for greater flexibility as well as type safety on the query, which in turn makes refactoring easier and reduces errors Beware of any potential infinite loops Pay attention to Transaction boundaries. For the most part it\u0026rsquo;s automatic but, you can carry over transaction where it\u0026rsquo;s unintended Prefer constants over hard-coded strings. Keep constants with the entity/object they relate to. For general constants use OpenstorefrontConstant Focus comments on WHY (Business Rule) rather than HOW for internal comments. The how should be clear from the code  Entities  Entities should have all validation annotations marked and have documentation annotations as well Use \u0026ldquo;get\u0026rdquo; and \u0026ldquo;set\u0026rdquo; and not \u0026ldquo;is\u0026rdquo; as are a lot of automatic processing (reflection) on entities Most entities should extends the standard entity Preference is to keep model flat, but there are cases where complex models are fine (meaning care should be taken with embedded complex classes)  If there are embedded entities, make to use Casacde, OneToX annotation Beware of db issues The DB and moxy doesn\u0026rsquo;t handling List of primitives (meaning Boxed primitives) well (e.g. List\u0026lt;String\u0026gt; should be List\u0026lt;EmailAddresses\u0026gt;)  Document Entities with @APIDocument to update the API docs Prefer composition of entities in view rather than inheritance. Use inheritance for substitutability All storage entities must be registered with the DB. This is automatic for class in the entity package of the API module  REST API  Avoid naming entity and view model fields (type or ID). It can break the serialization Use the API annotations to document the service. All REST interfaces need documentation as to purpose All consumed entities must have a root object. For Example, String (fail), TextObject with a field String (Valid) Response also needs a root object. A GenericEntity can be used Resource endpoints map to entities where Services act on the system or are cross entities \u0026ldquo;Actions\u0026rdquo; supplement the API and are used for internal operations. Also, they use to handle uploads as there is no JAX-RS standard for that  Cache Handling  All cache handling should be done in the Services rather than leaking it up a layer of abstraction Beware to not modify the cached version of the data. There is a \u0026ldquo;weak reference\u0026rdquo; to the object so it can end up applying unwanted changes All caches should be set up in the cache manager  Logging Each level has a different audience (See java Docs). Add logging message appropriate for each level. Focus on logging thing that would aid in debugging (When, What, the State was at the time of the error, and Data owner, e.g., what component does it belong to).\nSEVERE - System Admin and End-User; the operation failed; something prevented normal execution; If throwing an Openstorefront error please state the error and note anything that can be done to correct it\nWARNING - Potential Problems, System Admin or End-users, the system should be able to continue but desired effect may not have been achieved\nINFO - Message to System Admin usually for information about operation completed\nCONFIG - Messages are intended to provide a variety of static configuration information (mainly initialization of a system item)\nFINE - Debugging information for developers\nFINER - Detailed debugging information\nFINEST - Trace message; highly detailed. If gathering the information is time consuming (CPU wise), then check logging level state first. If (log.isLoggable(Level.FINEST))\nIf you don\u0026rsquo;t add logging it is not available Thus, logging needs to be added where appropriate where appropriate, typically, on anti-conditions. Think, \u0026ldquo;If I was troubleshooting this in production could I get enough information to solve an issue?\u0026rdquo; Log the data owner and state.\nNote: Tomcat\u0026rsquo;s loghandler doesn\u0026rsquo;t seem to handle \u0026ldquo;{0}\u0026rdquo; substitution. Use MessageFormat.format to handle that.\nDo not use an ' in log comments as it affects the formatter. See https://stackoverflow.com/questions/22670627/java-logger-apostrophe-issues-with-tokens\nHow To Use Logging Tools Java logging has two components:\n Logger - These are hierarchical, meaning setting the level will be achieved by rolling upwards until the next setting. Handler - These are associated with a Logger  The logger has a Level and each handler has a level. Both must be set to get the output to show the level. Logs by default show in the console output for the application server, which is typically in /logs directory but, can be in the var server output that installs via yum.\nBuilt into the application is a DB Logger which when activated will log all components in the system. At Level ALL. Keep in mind the logger may be set at a different level.\nIt will capture the logs in the DB, and the Admin system logs can be used to view that.\nThe UI allows for setting each logger\u0026rsquo;s level. Setting Handler levels is not currently supported.\nNote the logging.properties file (currently not loaded) sets defaults. By default the console handler is set to INFO.\nCross Cutting Concerns Security - Ensure permission are applied to the REST/External API and UI features.\nLogging - Security changes/sensitivity must have audit logging (Log action, who performed it).\nData Restriction - Ensure data that should be restricted is restricted at the appropriate level. This is not applied universally, as there are complications that require specific handling.\nChange History - Entries and Evaluations are supported. Log field changes, adds, removes, etc.\nAlerts - Certain events must be tracked for administration alerts.\nUse caution when modifying the code to keep these features/requirements intact.\n"
},
{
	"uri": "/user/",
	"title": "User",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vendor/",
	"title": "Vendor",
	"tags": [],
	"description": "",
	"content": "This guide covers the features of SPOON for vendors to upload and view their entries in the SPOON database.\n\n Bulk uploads Single component submissions. How vendor last update works Maintaining up-to-date contact info.  BULK UPLOADS You can bulk upload any kind of file to SPOON inside of a zipped folder.\nSPOON support will enter your SPOON part entries for you. This is useful if you have many parts to enter in SPOON, and you already have their details in files of varying types. Files can be submitted in any human readable format.(i.e. PDF, DOCX, XLS, etc.)\n Sign up, if you haven\u0026rsquo;t already.  Login, and navigate to User Tools.  Click the Bulk Upload button to upload your ZIP file. Submitted files MUST be in a zipped folder.  After you have uploaded your ZIP file, SPOON support will contact you and work with you to get your parts into the database. Sign in and navigate to User Tools again.  You should see your entry. The Approval Workflow graphic indicates where in the Approval Process your part is.  SPOON support will have used the files you uploaded to create submissions for you. Please review each section to ensure that all information is correct. Feel free to update any information. Click Review Submission, and then click Submit For Approval. 9.After you have submitted your entry, your entry will go through an approval process. This includes your part being reviewed by a satellite SME (Subject Matter Expert). This allows us to maintain the quality of the data being entered into the SPOON database.  SINGLE PART SUBMISSION Here we briefly explain how to submit an entry into SPOON\n To get to the User Tools section, click on the menu icon in the upper-right corner of the page and then select User Tools from the drop-down menu.  Click to add a new submission and fill out the fields on the next page. If there any additional details that you think should be covered here, please reach out to Spoon support at support@spoonsite.com.  Common Terms Entry - is a listing in the database\nAttributes - are searchable metadata field the help define/discover the entry\n"
},
{
	"uri": "/applicationadmin/",
	"title": "Application Admin",
	"tags": [],
	"description": "The application administrator is the DI2E website administrator.",
	"content": " Table of Contents  Application Management\n Branding\nManaging the look and feel of the application\n System\nManaging how SPOON runs\n Security and Security Roles\nManaging who has access to which parts of SPOON\n  Data Management\n Attributes and Entry Types\nAttributes are information about entries. Attributes can be height, width, mass, or downlink speed.\n Custom Submission Forms\nCustom Submission Forms are used when you want to present a custom look and feel to the user when they submit an entry. You can add a form with many required or optional fields depending on the Entry Type of the submission. This form is then shown to the user when they are presented with the fields for a new entry of that type\n User Management\nManaging users and user security\n Workplans\nManaging workplans for entries\n  Evaluations\nEvaluations are currently not in use on SPOON\n  Common Questions Alerts How can I be notified when something happends on SPOON?\nAutomatic Tasks How do I pause SPOON\u0026rsquo;s automatic tasks? What processes does SPOON run in the background and when? Can I control them? What are Jobs on SPOON? Branding How do I change what SPOON looks like? What do I do if the Security Banner is not turning off? Can I change the look of SPOON without knowing how to code? How do I change the colors on SPOON? What is a Security Banner on SPOON? How do I edit it? Security How do I control user privileges on SPOON? User Management What do I do if a user does not receive the account confirmation email? Where can I see user feedback? Who is on SPOON at this particular moment? Evaluations What are SPOON Evaluations? How do I make a SPOON Evaluation for my part? How do I give other users Evaluations to complete? Other How do I add a new SPOON entry category? What do I do if SPOON\u0026rsquo;s search isn\u0026rsquo;t working? I tried re-indexing and SPOON\u0026rsquo;s search still isn\u0026rsquo;t working, what should I do? How can I see the error messages my users are seeing? What are Plugins on SPOON? What do these statistics on the Systems page mean? Where can I change what shows on the front page carousel? How do I see a list of all the organizations registered on SPOON, and their affiliated users/parts? "
},
{
	"uri": "/dev/codestandards/",
	"title": "Coding Standards",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/systemadmin/",
	"title": "System Admin",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/dev/",
	"title": "Developer",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tutorials/",
	"title": "Tutorial Videos",
	"tags": [],
	"description": "",
	"content": " These are some tutorials to help you get started with SPOON.\nOverview Your browser does not support the video tag.  Registration Your browser does not support the video tag.  Entry Submission Your browser does not support the video tag.  "
},
{
	"uri": "/applicationadmin/applicationmanagement/",
	"title": "App Management",
	"tags": [],
	"description": "",
	"content": " Table of Contents  Alerts Feedback Jobs Messages Tracking User Management Reports  Sections not covered in this page:\n Branding Security Security Roles System  Alerts Customized alerts can be set up to send an email to a specified email address. You can see what events are available to trigger alerts by clicking Add.\nFeedback SPOON users can submit feedback by clicking on their Username in the top right corner of SPOON, then clicking Contact Us. That feedback appears on this sub-page.\nWarning! Note that entries are by default displayed by Create Date ascending, meaning that the oldest tickets will appear at the top. Don\u0026rsquo;t miss the new tickets that get generated.\n Jobs  Jobs are tasks that SPOON performs in the background, at pre-set time intervals. None of the jobs are system-critical, so it is safe to pause all of them at the same time (as of SPOON v2.11). Run Job triggers the job to run immediately; you can see an instance of the job run in the Tasks sub-page (click the tab).\n Jobs that are actively running appear in this sub-page. However, since most jobs run quickly, the Admin may not see anything in the grid.\n  In SPOON v2.11, there is an option near the top to Show Integration Jobs, Yes or No. SPOON at one point in the past supported integration with a programming tool named JIRA. However, support for JIRA as of v2.11 has been discontinued, and so there will not be any integration jobs that will appear in this page.\nMessages  User messages are queued messages from users. The primary usage for messages is from watches. This tool enables viewing of queued messages as well as viewing of archived messages.\n Event Notifications. Notifications are messages sent internally to the user to notify them of an event in the application. You can also see these notifications by clicking Notifications in the top right corner of the screen. The Create Admin Message option allows you to make a notification that can be visible to all SPOON users. Note that the \u0026ldquo;Send to\u0026rdquo; input box searches according to the recorded First, Last Name, or Email address of a user - NOT according to the user name. If you enter a user\u0026rsquo;s username into the \u0026ldquo;Send to\u0026rdquo; box you will not find who you are looking for.\n  Tracking  User Tracking. The Admin can see every person that has logged in within a specified time range, see what browsers, environments and locals SPOON users are using. The Admin can even export the data table as a .csv file.\n Entry. The Admin can also observe which parts are receiving the most attention by users, by noting on this page which parts users are viewing. There are two kinds of Event Types, \u0026ldquo;View\u0026rdquo;, where it recorded that a user looked at the profile of a Component, and \u0026ldquo;External Link Click\u0026rdquo;, which records when the user clicks on a resource (such as a .pdf file or image) or external link. This data will also export to a .csv file.\n  User Management As of SPOON v2.11, when a user attempts to register for an account with SPOON, their details are sent to SPOON\u0026rsquo;s database as a \u0026ldquo;registration\u0026rdquo; for an account, but it is not a full account until the user has responded to the email that is automatically sent to their address. To see all individuals that count as a registrant, click the Registrations tab. Once users have used the registration code that is emailed to them, their account is upgraded to full account status and the Admin will be able to search for them specifically from this sub-page. The Admin will able to assign Security Roles to the users (see the Roles page for that information).\nUsing the Message button on the screen sends an email from the support@spoonsite.com email address (depending on how the server\u0026rsquo;s configurations are set up).\nIt is a known issue that SPOON\u0026rsquo;s emails seem to be particularly susceptible to being caught in spam filters, so it is a frequent occurrence for attempted registrants of SPOON to contact the administrator stating that they are not being sent the confirmation code. It is best to first ask them to check their spam and then if they are still not able to find it, to register them manually. Go to the Registrations tab, then click Add. Be careful when entering the registrant’s data in manually, as the verification for a new user from this side is less stringent than the verification on the public-facing sign-up. Email the registrant’s new username and password from an email account that is not the main SPOON support email address and verify the registrant’s reception of the email via other means (phone perhaps).\n Be aware that part of the functionality of this page can also be found at the User Data \u0026gt; User Profiles page\nReports Reports are automatically generated statistics of SPOON. They can be scheduled to run once, daily, weekly, monthly, or on a custom schedule based on a cron expression. These reports can be run on entries, users, or SPOON usage. To run a report, go to the Application Management page and select Reports. Then click the Add button, a popup will appear, from which you can then select the type of report you would like to run.\n"
},
{
	"uri": "/user/unitlegend/",
	"title": "Unit Legend",
	"tags": [],
	"description": "",
	"content": "This is the legend for commonly confused unit names and acronyms.    Symbol Base unit Description     '$' US Dollar 1 US dollar   'G' Gauss 1 Gauss   'GB' Byte $10^9$ bytes (Gigabyte)   'Gb' Bit $10^9$ bits (Gigabit)   'Gbps' Bit Per Second $10^9 \\frac{\\text{bits}}{\\text{sec}}$   'Grav' Newtonian constant of gravitation    'MB' Byte $10^6$ bytes (Megabyte)   'MIPS' Million of Instructions Per Second $10^6$ $\\frac{\\text{instruction}}{\\text{second}}$   'Mb' Bit $10^6$ bits (Megabit)   'Mbps' Bit Per Second $10^6 \\frac{\\text{bits}}{\\text{sec}}$   'PB' Byte $10^{15}$ bytes (Petabyte)   'Pb' Bit $10^{15}$ bits (Petabit)   'TB' Byte $10^{12}$ bytes (Terabyte)   'Tb' Bit $10^{12}$ bits (Terabit)   'arcsec' Degree $\\frac{1}{3600}$ degree   'arcsmin' Degree $\\frac{1}{60}$ degree   'bps' Bit Per Second 1 $\\frac{\\text{bit}}{\\text{sec}}$   'dBW' Decibel Watt 1 decibel Watt   'dBm' Decibel Watt $10^{-6}$ decibel Watt (Decibel milli-Watt)   'dbC' Decibel 1 Decibel   'dbc' Decibel 1 Decibel   'dbd' Decibel 1 Decibel   'dbi' Decibel 1 Decibel   'deg' or '°' Degree 1 degree   'g' Gram 1 gram   'grms' or 'Grms' Root-Mean-Square Acceleration    'hr' or 'hour' Hour 1 hour   'inch' inch 1 inch   'kB' or 'KB' Byte $10^3$ bytes (Kilobyte)   'kb' or 'Kb' Bit $10^3$ bits (Kilobit)   'kbps' Bit Per Second $10^3 \\frac{\\text{bits}}{\\text{sec}}$   'mG' Gauss $10^{-6}$ Gauss (microGauss)   'mGrav' Grav $10^{-6}$ Grav (microGrav)   'micron' or 'μm' Meter $10^{-6}$ meter (micrometer)   'psi' Pounds Per Square Inch 1 $\\frac{\\text{lbs}}{\\text{in}^2}$   'rpm' or 'RPM' Revolution Per Minute 1 $\\frac{\\text{revolution}}{\\text{Minute}}$   'μN' Newton $10^{-6}$ Newton (microNewton)   'μm' Gram $10^{-6}$ gram (Microgram)   'μs' Second $10^{-6}$ second (Microsecond)    JScience Semantics When attempting to use a superscript fraction as an attribute (ex. 'deg/(hr^(1/2))'), it will not be able to parse that. In order to get it to parse you must use a colon (ex. 'deg/(hr^1:2)'). This will result in it parsing correctly and it will render as $deg/(hr^{1/2})$.\n/2})$.\n"
},
{
	"uri": "/applicationadmin/branding/",
	"title": "Branding",
	"tags": [],
	"description": "",
	"content": " Table of Contents  General Login Page Support Security Colors/Logos Current CSS  When updating or changing branding, you must toggle it back on. When a branding is created or edited it is automatically turned off. A branding is active only if the status column has an \u0026ldquo;A\u0026rdquo; in it or if the name has \u0026ldquo;active\u0026rdquo; next to it.\n The Branding Form General Be aware of the fact that text color is preserved from the input boxes on this page to the destinations of the content. For example, if the Admin entered black text in the Landing Page Footer input box, then the text would be black where it appears in the landing page’s footer. This is true even if the background color of the landing page’s footer is already a dark color that does not contrast well with black text. For this reason it is wise to coordinate the site’s colors that are set in the Colors/Logos tab with the font color set in the General Branding tab.\nThis can lead to a mistake if one Admin makes the text of the contents of one of the input boxes white, which would make that text box appear to another Admin to be completely empty, even though there is white text inside (with no contrast against the white background).\n If the Admin knows HTML/CSS, they can insert custom language by selecting the Source Edit option on the input boxes:\nThe Show link to mobile site in menu checkbox does nothing in SPOON v2.11.\nLogin Page Here you can set the content seen on the login page.\nSupport In this section you are able to set your feedback handing method, such as email or internal storage.\nJIRA is a selection in the dropdown but support has been dropped for JIRA integration in V2.11.\n You are also able to add a analytics tracking code, as to learn more about what your user are doing on the site.\nSecurity There are instances when the SPOON Admin might need to gain the attention of every current SPOON user—for example, if SPOON experienced a security breach that threatened SPOON users while a security patch was being applied. In these cases, the Admin can quickly create a custom text message that is visible at the top of all the pages on the legacy site.\nPutting any text in the Security Banner Text input box will turn on the banner, and to remove, delete all text within the box. Do note that as of v2.11, the front page will not show the warning banner. If you are having difficulty turning off the banner, be sure to check if the input box is truly clear by using the Source Edit button in the toolbar.\nOne of the uses for the User Input Warning is at the top of the form that users use to make a new part submission.\nTo learn more about Change Requests, see Workplans.\nColors/Logos In SPOON v2.11, there are two separate web technologies that are managing the user interface: Ext.js and Vue.js. Each has a different way of handling where colors are displayed, so the best way to get a consistent theme across both flavors is experimentation.\nFor Admins who know CSS, it is possible to add custom styles to the CSS page included.\nCurrent CSS A read-only CSS file that shows, in one place, all the CSS generated by the options set in this branding.\n"
},
{
	"uri": "/applicationadmin/system/",
	"title": "System",
	"tags": [],
	"description": "",
	"content": " Table of Contents  Error Tickets Application State Properties System Configuration Properties Logs and Logging Plugins Cache Search Control Recent Changes Email Managers Heap Memory Memory Pools Garbage Collection  The System page provides information about the system SPOON is running on like memory usage, cache management, and error logs.\nNote that on this page, and every sub-page of the System page, the \u0026ldquo;Refresh\u0026rdquo; button does nothing but send a new request to the server for the sub-page displayed - it does not edit or \u0026ldquo;refresh\u0026rdquo; any data object selected at the time.\nOn the left, three sub-sub-tab options can be seen:\n On the first page where the Admin lands - the Status page - general environment variables are displayed. The Automatically Update: Yes / No switch at the top of the sub-page automatically updates the page every 2 seconds.\n Threads Status: Every incoming request to the server is received by a thread, and here the operational status of each one is visible; \u0026ldquo;View\u0026rdquo; shows an extended log\n System Properties A list of non-editable properties relating to the Java environment (Version 8) and server (Tomcat).\n  Error Tickets This is a valuable page that lists errors generated during runtime of the site. When SPOON users get an error that looks like this on their screens:\nA full stack trace of the error that was thrown in that incident will be viewable here. This log is primarily for the stack trace from errors of the severity that they are reported to regular users. For a more comprehensive error log, see the Logs and Logging sub-page. The View Details button gives us the stack trace, where places where the traces goes through SPOON\u0026rsquo;s files is highlighted in yellow. This is helpful for developers who need to recreate a bug.\nApplication State Properties A list of editable configuration settings for the application.\nSystem Configuration Properties A list of editable configuration settings for the application. This page is more valuable to the Systems Admin, but the Application Admin may find use in the settings here related to setting up the mail server for email.\nLogs and Logging  Logger Levels: SPOON\u0026rsquo;s codebase is in Java, and Java encapsulates groups of files with related purposes into what are known as \u0026lsquo;packages\u0026rsquo;. Here all the Java packages are displayed, and the Admin has the ability to adjust how verbose the logs generated by each one are. Select a package and click edit to see the verbosity level options.\n Logs: Logs generated by the site. Files in the stack trace that are part of SPOON\u0026rsquo;s codebase are enlarged for emphasis to the person watching. The Database Logger switch, as the name implies, toggles logging on or off on the server.\n  Plugins SPOON uses OSGi for it\u0026rsquo;s plugin capabilities. If there is a need for a plugin, there is an example plugin that can be used as a template in the openstorefront/openstorefront-plugin project.\nCache SPOON is equipped with caching to increase the speed of the application. When adding information to SPOON the caches may not be getting updated. If this is the case, it may be required to flush the cache and ensure that all caches are up to date.\nWhen using the Flush Cache feature, notice that it eliminates the “Rough Count” of items in a cache. Some caches, however, are used so frequently (or even by the Flush Cache feature itself), that it appears as though flushing only reduces the rough count down to 1. This is because the cache is being flushed, and then re-indexes itself immediately, so that the Admin cannot visually verify that the cache was completely erased; however a full flush did occur.\nThe Hit Ratio is calculated by the number of hits divided by total requests (Hits plus Misses), rounded up. Because some caches preemptively fill themselves with more results that just the particular ones a user initially requested, it is not atypical for a cache to be at 100%.\nSearch Control Re-index Listings updates Elasticsearch with all approved and active parts from the database. This will take around a minute per 1500 entries. You must re-index when starting SPOON, updating Elasticsearch, or restarting Elasticsearch. If this is not done, searching will not work.\nIn v2.11, the Elasticsearch index MUST be re-indexed on system start, or product search will not work.\n Recent Changes Email This sub-page will enable you to send to yourself a simple email noting the number of Components (SPOON parts) that have been touched/edited by either the system or a user within the time range specified by you. Touches by the system could include anything from an Admin user using the Admin Tools\u0026gt;Data Management\u0026gt;Entries page to open and edit a Component, or the server moving Components in the database without user supervision.\nIn SPOON v2.11, the interval between emails is set in configuration files to be every 28 days. If you need to edit this setting, you will have to manually change the config file at server\\openstorefront\\openstorefront-core\\common\\src\\main\\java\\edu\\usu\\sdl\\openstorefront\\common\\util\\OpenStorefrontConstant.java . There is no user interface for this particular setting.\nContact your System Admin if you need further support.\nManagers Managers are Java services, or more specifically, Java singleton objects that are responsible for serving up data to the application. You can safely Restart Managers to try and fix odd behavior on the site (should you need to). Stop-ing a Manager is dangerous, because every Manager is integral to running some or another part of the site.\nHeap Memory You can see more about what heap memory is at https://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/garbage_collect.html\nMemory Pools For more information on how Java handles memory, see https://docs.oracle.com/database/121/CNCPT/memory.htm#CNCPT007\nGarbage Collection See the link above for Heap Memory and Memory Pools.\n"
},
{
	"uri": "/applicationadmin/securityroles/",
	"title": "Security Roles",
	"tags": [],
	"description": "Security Roles",
	"content": "Table of Contents  Default Roles and Resetting to Default Default Permissions (300+) Overlapping Permissions Default Data Restrictions  Default Roles and Resetting to Default When setting up an instance of SPOON it comes with a few default roles as described below and as shown in Admin Tools \u0026rarr; Application Management \u0026rarr; Security Roles on the website (must be logged in as an administrator to view).\n   SECURITY ROLE NAME EXPLANATION DEFAULT PERMISSIONS NOTES     GUEST-GROUP Permissions for guest when they come to the site directly via URL, such as to view an entry. NO Extra Permissions   DEFAULT-GROUP What all users get and are a member of. Baseline permissions. A few, limited Permissions   SME_Approver SME Role for Approving Entries See dashboard pending requests. Approve Requests for new entries and change requests.   STOREFRONT-Librarian Data management librarian permissions Many Administrator Permissions   STOREFRONT-Admin Website administrator, super permissions group ALL Permissions    If these permissions get changed and you would like to reset them to the default (new installation) defaults, please do the following:\n Go to Admin Tools \u0026rarr; Application Management \u0026rarr; System and click the Application State Properties tab. Locate the Key Security-Init_v2_LASTRUN_DTS and click Edit Delete all of the text in the value box and click Save Repeat the prior two steps for the Security-Init_v2_STATUS key. The pre-made groups shown above (SPOON-Admin, etc.) are now reset to their new installation defaults.   GO TO TOP\nDefault Permissions The following details the default permissions and what users in these security role groups can do.\n   ABILITY OR PERMISSION TO: GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin     API        Ability to see API documentation ﻿ ﻿ ﻿ ﻿ ﻿   ALERTS        Ability to Read all Alerts ﻿ ﻿ ﻿ ﻿ ﻿   Ability to Create new Alerts ﻿ ﻿ ﻿ ﻿ ﻿   Ability to Delete Alerts ﻿ ﻿ ﻿ ﻿ ﻿   Ability to Update Alerts ﻿ ﻿ ﻿ ﻿ ﻿   Access the admin Alerts Page ﻿ ﻿ ﻿ ﻿ ﻿   ATTRIBUTES        Create new Attributes ﻿ ﻿ ﻿ ﻿ ﻿   Delete existing Attributes ﻿ ﻿ ﻿ ﻿ ﻿   Update existing Attributes ﻿ ﻿ ﻿ ﻿ ﻿   Access to the admin Attribute page ﻿ ﻿ ﻿ ﻿ ﻿   Manage attributes on entries from the admin tools manage assignments tool ﻿ ﻿ ﻿ ﻿ ﻿   Create attribute types ﻿ ﻿ ﻿ ﻿ ﻿   BRANDING GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create new Brandings ﻿ ﻿ ﻿ ﻿ ﻿   Delete Brandings ﻿ ﻿ ﻿ ﻿ ﻿   Access to the admin Branding page ﻿ ﻿ ﻿ ﻿ ﻿   Update Brandings ﻿ ﻿ ﻿ ﻿ ﻿   CONTACTS        Create Contacts ﻿ ﻿ ﻿ ﻿ ﻿   Delete Contacts ﻿ ﻿ ﻿ ﻿ ﻿   Update existing Contacts ﻿ ﻿ ﻿ ﻿ ﻿   Access to the admin Contacts page ﻿ ﻿ ﻿ ﻿ ﻿   DASHBOARD GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Dashboard Page ﻿ ﻿ ﻿ ﻿ ﻿   View the Entry Status Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Evaluation Status Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Notifications Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Outstanding Feedback Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Pending Approvals Requests widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Questions Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Reports Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Saved Search Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Submission Status Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the System Status Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Recent User Data Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the User Status Widget ﻿ ﻿ ﻿ ﻿ ﻿   View the Watches Widget ﻿ ﻿ ﻿ ﻿ ﻿   ENTRIES GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin Entries Page ﻿ ﻿ ﻿ ﻿ ﻿   Ability to Approve an Entry ﻿ ﻿ ﻿ ﻿ ﻿   Ability to Read Entries ﻿ ﻿ ﻿ ﻿ ﻿   Approve an Entry ﻿ ﻿ ﻿ ﻿ ﻿   Assign a Librarian to a Component (Entry) ﻿ ﻿ ﻿ ﻿ ﻿   Attribute Management of Entry ﻿ ﻿ ﻿ ﻿ ﻿   Change Owner of the Entry ﻿ ﻿ ﻿ ﻿ ﻿   Manage Change Requests ﻿ ﻿ ﻿ ﻿ ﻿   Change an Entry Type ﻿ ﻿ ﻿ ﻿ ﻿   Manage Entry Comments ﻿ ﻿ ﻿ ﻿ ﻿   Contact Management ﻿ ﻿ ﻿ ﻿ ﻿   Create Entries ﻿ ﻿ ﻿ ﻿ ﻿   Delete and Existing Entry ﻿ ﻿ ﻿ ﻿ ﻿   Manage Evaluation Sections ﻿ ﻿ ﻿ ﻿ ﻿   Export an Entry ﻿ ﻿ ﻿ ﻿ ﻿   Media Management ﻿ ﻿ ﻿ ﻿ ﻿   Merge two Entries Together ﻿ ﻿ ﻿ ﻿ ﻿   Read Pending Changes ﻿ ﻿ ﻿ ﻿ ﻿   Relationship Management for Entries ﻿ ﻿ ﻿ ﻿ ﻿   Resource Management for Entries ﻿ ﻿ ﻿ ﻿ ﻿   Tag Management ﻿ ﻿ ﻿ ﻿ ﻿   Toggle Status (Active/Inactive) of an Entry ﻿ ﻿ ﻿ ﻿ ﻿   Update Existing Entry ﻿ ﻿ ﻿ ﻿ ﻿   Delete Entry Version ﻿ ﻿ ﻿ ﻿ ﻿   Read Entry Version ﻿ ﻿ ﻿ ﻿ ﻿   ReSPOON Entry Version ﻿ ﻿ ﻿ ﻿ ﻿   ENTRY TEMPLATES GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Read Entry Templates ﻿ ﻿ ﻿ ﻿ ﻿   Create Entry Templates ﻿ ﻿ ﻿ ﻿ ﻿   Read Entry Templates ﻿ ﻿ ﻿ ﻿ ﻿   Update Entry Templates ﻿ ﻿ ﻿ ﻿ ﻿   Access to Entry Templates Page ﻿ ﻿ ﻿ ﻿ ﻿   ENTRY TYPES        Create Entry Types ﻿ ﻿ ﻿ ﻿ ﻿   Delete Entry types ﻿ ﻿ ﻿ ﻿ ﻿   Update Entry Types ﻿ ﻿ ﻿ ﻿ ﻿   Access Admin Entry Types Page ﻿ ﻿ ﻿ ﻿ ﻿   EVALUATION (ADMIN)        Access to the Admin Evaluator Management Page ﻿ ﻿ ﻿ ﻿ ﻿   Activate an Evaluation ﻿ ﻿ ﻿ ﻿ ﻿   Allow New Sections ﻿ ﻿ ﻿ ﻿ ﻿   Allow Question Management ﻿ ﻿ ﻿ ﻿ ﻿   Delete a Comment ﻿ ﻿ ﻿ ﻿ ﻿   Create an Evaluation ﻿ ﻿ ﻿ ﻿ ﻿   Delete an Evaluation ﻿ ﻿ ﻿ ﻿ ﻿   Publish just the Summary ﻿ ﻿ ﻿ ﻿ ﻿   Publish or Unplublish an Evaluation ﻿ ﻿ ﻿ ﻿ ﻿   EVALUATION (USER) GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Evaluator Management Page ﻿ ﻿ ﻿ ﻿ ﻿   Allow Evaluator to View an Evaluation ﻿ ﻿ ﻿ ﻿ ﻿   Allow Evaluator to Assign a User to an Evaluation ﻿ ﻿ ﻿ ﻿ ﻿   Allow Evaluator to Edit an Evaluation ﻿ ﻿ ﻿ ﻿ ﻿   EVALUATION TEMPLATES        Access to the Evaluation Templates Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Evaluation Templates ﻿ ﻿ ﻿ ﻿ ﻿   Create Evaluation Templates ﻿ ﻿ ﻿ ﻿ ﻿   Delete Evaluation Templates ﻿ ﻿ ﻿ ﻿ ﻿   Update Evaluation Templates ﻿ ﻿ ﻿ ﻿ ﻿   EVALUATION TEMPLATES CHECKLIST QUESTIONS        Access to the Evaluation Templates Checklist Questions Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Eval Template Checklist Question Items ﻿ ﻿ ﻿ ﻿ ﻿   Create Template Checklist Questions ﻿ ﻿ ﻿ ﻿ ﻿   Delete Template Checklist Questions ﻿ ﻿ ﻿ ﻿ ﻿   Update Template Checklist Questions ﻿ ﻿ ﻿ ﻿ ﻿   EVALUATION TEMPLATES CHECKLISTS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Evaluation Templates Checklists Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Evaluation Template Checklist Items ﻿ ﻿ ﻿ ﻿ ﻿   Create Evaluation Template Checklist Items ﻿ ﻿ ﻿ ﻿ ﻿   Delete Evaluation Template Checklist Items ﻿ ﻿ ﻿ ﻿ ﻿   Update Evaluation Template Checklist Items ﻿ ﻿ ﻿ ﻿ ﻿   EVALUATION TEMPLATES SECTIONS        Access to the Evaluation Section Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Evaluation Template Checklist Items ﻿ ﻿ ﻿ ﻿ ﻿   Create Evaluation Template Sections ﻿ ﻿ ﻿ ﻿ ﻿   Delete Evaluation Template Sections ﻿ ﻿ ﻿ ﻿ ﻿   Update Evaluation Template Sections ﻿ ﻿ ﻿ ﻿ ﻿   FAQs GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin FAQ page ﻿ ﻿ ﻿ ﻿ ﻿   Read FAQs ﻿ ﻿ ﻿ ﻿ ﻿   Create FAQs ﻿ ﻿ ﻿ ﻿ ﻿   Delete FAQs ﻿ ﻿ ﻿ ﻿ ﻿   Update FAQs ﻿ ﻿ ﻿ ﻿ ﻿   FEEDBACK        Access Admin Feedback Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Feedback ﻿ ﻿ ﻿ ﻿ ﻿   Remove Feedback ﻿ ﻿ ﻿ ﻿ ﻿   Modify Feedback ﻿ ﻿ ﻿ ﻿ ﻿   HIGHLIGHTS        Create Highlights ﻿ ﻿ ﻿ ﻿ ﻿   Delete Highlights ﻿ ﻿ ﻿ ﻿ ﻿   Access to the Highlights page ﻿ ﻿ ﻿ ﻿ ﻿   Update Highlights ﻿ ﻿ ﻿ ﻿ ﻿   IMPORT / EXPORT        Ability to Import and Export ﻿ ﻿ ﻿ ﻿ ﻿   Access to the admin Import Export Page ﻿ ﻿ ﻿ ﻿ ﻿   INTEGRATIONS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Integration Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Integration ﻿ ﻿ ﻿ ﻿ ﻿   Create Integration ﻿ ﻿ ﻿ ﻿ ﻿   Remove Integration ﻿ ﻿ ﻿ ﻿ ﻿   Ability to Integrate with external sources ﻿ ﻿ ﻿ ﻿ ﻿   Run all Integrations ﻿ ﻿ ﻿ ﻿ ﻿   Run the Integration Configuration ﻿ ﻿ ﻿ ﻿ ﻿   Allows for Running One Integration ﻿ ﻿ ﻿ ﻿ ﻿   Toggle Active/Inactive Integration Status ﻿ ﻿ ﻿ ﻿ ﻿   Update Integration ﻿ ﻿ ﻿ ﻿ ﻿   JOBS        Read Jobs ﻿ ﻿ ﻿ ﻿ ﻿   Perform some action with a Job ﻿ ﻿ ﻿ ﻿ ﻿   Remove a Job ﻿ ﻿ ﻿ ﻿ ﻿   Access to Admin Jobs Page ﻿ ﻿ ﻿ ﻿ ﻿   LOOKUPS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access the Lookups Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Lookups ﻿ ﻿ ﻿ ﻿ ﻿   Create Lookups ﻿ ﻿ ﻿ ﻿ ﻿   Delete Lookups ﻿ ﻿ ﻿ ﻿ ﻿   Update a Lookup ﻿ ﻿ ﻿ ﻿ ﻿   MEDIA        Delete Media ﻿ ﻿ ﻿ ﻿ ﻿   Access to the admin Media Page ﻿ ﻿ ﻿ ﻿ ﻿   Upload Media as Admin ﻿ ﻿ ﻿ ﻿ ﻿   Upload Support Media ﻿ ﻿ ﻿ ﻿ ﻿   MESSAGES        Read User Notification Data ﻿ ﻿ ﻿ ﻿ ﻿   Post New User Notification Event ﻿ ﻿ ﻿ ﻿ ﻿   Delete User Notification Event ﻿ ﻿ ﻿ ﻿ ﻿   Update User Notification Event ﻿ ﻿ ﻿ ﻿ ﻿   Access to the admin Messages/Notification page ﻿ ﻿ ﻿ ﻿ ﻿   NOTIFICATION EVENTS        Post New Admin Notification Event ﻿ ﻿ ﻿ ﻿ ﻿   Delete Admin Notification Event        ORGANIZATIONS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create Organization ﻿ ﻿ ﻿ ﻿ ﻿   Delete Organization ﻿ ﻿ ﻿ ﻿ ﻿   Organization Extraction ﻿ ﻿ ﻿ ﻿ ﻿   Merge Two Organizations ﻿ ﻿ ﻿ ﻿ ﻿   Access the Admin Organization Page ﻿ ﻿ ﻿ ﻿ ﻿   Update Organization ﻿ ﻿ ﻿ ﻿ ﻿   PROFILE MANAGEMENT        Read User Profiles ﻿ ﻿ ﻿ ﻿ ﻿   Delete User Profile ﻿ ﻿ ﻿ ﻿ ﻿   Update User Profile ﻿ ﻿ ﻿ ﻿ ﻿   Access to admin User Profiles Page ﻿ ﻿ ﻿ ﻿ ﻿   Access to User Profile Page ﻿ ﻿ ﻿ ﻿ ﻿   QUESTIONS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access admin Questions Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Questions on Entries ﻿ ﻿ ﻿ ﻿ ﻿   Delete Questions on Entries ﻿ ﻿ ﻿ ﻿ ﻿   Update Questions on Entries ﻿ ﻿ ﻿ ﻿ ﻿   Access to the User Questions Page ﻿ ﻿ ﻿ ﻿ ﻿   RELATIONSHIPS        Access to the admin Relationships Page ﻿ ﻿ ﻿ ﻿ ﻿   Access to the User Relationships Page ﻿ ﻿ ﻿ ﻿ ﻿   REPORTS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   General Reports Read ﻿ ﻿ ﻿ ﻿ ﻿   User Run Report as Attached Email ﻿ ﻿ ﻿ ﻿ ﻿   User Run Report as Content of Email body ﻿ ﻿ ﻿ ﻿ ﻿   View Reports From All Users ﻿ ﻿ ﻿ ﻿ ﻿   Create New Report ﻿ ﻿ ﻿ ﻿ ﻿   Delete a Report ﻿ ﻿ ﻿ ﻿ ﻿   Access to the Reports Page ﻿ ﻿ ﻿ ﻿ ﻿   Run the Action Report ﻿ ﻿ ﻿ ﻿ ﻿   Run Entries by Category Report ﻿ ﻿ ﻿ ﻿ ﻿   Run Entries by Organization Report ﻿ ﻿ ﻿ ﻿ ﻿   Run Entry Detail Report ﻿ ﻿ ﻿ ﻿ ﻿   Run Entry Listing Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the Entry Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the Entry Status Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the Evaluation Status Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the Link Validation Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the Submissions Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the Usage Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the User by Organization Repeat ﻿ ﻿ ﻿ ﻿ ﻿   Run the User Report ﻿ ﻿ ﻿ ﻿ ﻿   Run the Workplan Status Report ﻿ ﻿ ﻿ ﻿ ﻿   REPORTS SCHEDULE GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create Scheduled Reports ﻿ ﻿ ﻿ ﻿ ﻿   Delete Scheduled Reports ﻿ ﻿ ﻿ ﻿ ﻿   Read Scheduled Reports ﻿ ﻿ ﻿ ﻿ ﻿   Edit Scheduled Reports ﻿ ﻿ ﻿ ﻿ ﻿   REVIEWS        Access to the Admin Reviews Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Reviews ﻿ ﻿ ﻿ ﻿ ﻿   Delete Reviews ﻿ ﻿ ﻿ ﻿ ﻿   Update Reviews ﻿ ﻿ ﻿ ﻿ ﻿   Access to the Reviews Page ﻿ ﻿ ﻿ ﻿ ﻿   ROLES        Ability to Read Security Roles ﻿ ﻿ ﻿ ﻿ ﻿   Create Security Roles ﻿ ﻿ ﻿ ﻿ ﻿   Delete Security Roles ﻿ ﻿ ﻿ ﻿ ﻿   Update Security Roles ﻿ ﻿ ﻿ ﻿ ﻿   Access to Admin Security Roles Page ﻿ ﻿ ﻿ ﻿ ﻿   SEARCH MANAGEMENT GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Read all Searches ﻿ ﻿ ﻿ ﻿ ﻿   Create a Search ﻿ ﻿ ﻿ ﻿ ﻿   Delete a Search ﻿ ﻿ ﻿ ﻿ ﻿   Update a Search ﻿ ﻿ ﻿ ﻿ ﻿   Search Page (User) ﻿ ﻿ ﻿ ﻿ ﻿   SECURITY        Access to the Admin Security Page ﻿ ﻿ ﻿ ﻿ ﻿   Access to the Security Policy Tab ﻿ ﻿ ﻿ ﻿ ﻿   Access to the Shiro Config Tab ﻿ ﻿ ﻿ ﻿ ﻿   SUBMISSIONS (ADMIN) GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to Partial Submissions Page ﻿ ﻿ ﻿ ﻿ ﻿   Access to Admin Custom Submission Form Template Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Submission Form Templates ﻿ ﻿ ﻿ ﻿ ﻿   Create Submission Form Templates ﻿ ﻿ ﻿ ﻿ ﻿   Delete Submission Form Templates ﻿ ﻿ ﻿ ﻿ ﻿   Update Submission Form Templates ﻿ ﻿ ﻿ ﻿ ﻿   Read User Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Delete User Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Update User Submissions ﻿ ﻿ ﻿ ﻿ ﻿   SUBMISSIONS (USER)        Access to the User Submissions Page ﻿ ﻿ ﻿ ﻿ ﻿   Read User Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Create Change Requests ﻿ ﻿ ﻿ ﻿ ﻿   Create User Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Delete User Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Update User Submissions ﻿ ﻿ ﻿ ﻿ ﻿   SYSTEM GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin System Archives Page ﻿ ﻿ ﻿ ﻿ ﻿   General System Administration Permission ﻿ ﻿ ﻿ ﻿ ﻿   Update Application Properties ﻿ ﻿ ﻿ ﻿ ﻿   Create System Archives ﻿ ﻿ ﻿ ﻿ ﻿   Delete System Archives ﻿ ﻿ ﻿ ﻿ ﻿   Manage System Archives ﻿ ﻿ ﻿ ﻿ ﻿   Access to System Cache ﻿ ﻿ ﻿ ﻿ ﻿   Remove/ Clear Operations for the System ﻿ ﻿ ﻿ ﻿ ﻿   Read Application Meta Data ﻿ ﻿ ﻿ ﻿ ﻿   Update System Configuration ﻿ ﻿ ﻿ ﻿ ﻿   Error Ticket Management ﻿ ﻿ ﻿ ﻿ ﻿   Permission Logging ﻿ ﻿ ﻿ ﻿ ﻿   System Managers ﻿ ﻿ ﻿ ﻿ ﻿   Management of Plugins ﻿ ﻿ ﻿ ﻿ ﻿   System Recent Changes ﻿ ﻿ ﻿ ﻿ ﻿   System Search Management ﻿ ﻿ ﻿ ﻿ ﻿   System Stand By ﻿ ﻿ ﻿ ﻿ ﻿   System Status ﻿ ﻿ ﻿ ﻿ ﻿   Access the Admin System Page ﻿ ﻿ ﻿ ﻿ ﻿   TAGS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin Tags Page ﻿ ﻿ ﻿ ﻿ ﻿   TRACKING        Access to the Admin Tracking Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Tracking ﻿ ﻿ ﻿ ﻿ ﻿   Delete Tracking from an Item ﻿ ﻿ ﻿ ﻿ ﻿   Update Tracking on an Item ﻿ ﻿ ﻿ ﻿ ﻿   USER MANAGEMENT        Access to the Admin User Management Page ﻿ ﻿ ﻿ ﻿ ﻿   Read other User's Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Approve other User's Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Create Submissions for Users ﻿ ﻿ ﻿ ﻿ ﻿   Delete other User's Submissions ﻿ ﻿ ﻿ ﻿ ﻿   Update other User's Submissions ﻿ ﻿ ﻿ ﻿ ﻿   WATCHES        Access to Admin Watches Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Watches ﻿ ﻿ ﻿ ﻿ ﻿   Delete Watches ﻿ ﻿ ﻿ ﻿ ﻿   Update Watches ﻿ ﻿ ﻿ ﻿ ﻿   Access to the User Watches Page ﻿ ﻿ ﻿ ﻿ ﻿   WORKPLAN GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create Workplans ﻿ ﻿ ﻿ ﻿ ﻿   Delete Workplans ﻿ ﻿ ﻿ ﻿ ﻿   Access to the Workplans Page ﻿ ﻿ ﻿ ﻿ ﻿   Read Workplans as Administrator ﻿ ﻿ ﻿ ﻿ ﻿   Update Workplans ﻿ ﻿ ﻿ ﻿ ﻿   User can view current status of selected record in a workplan ﻿ ﻿ ﻿ ﻿ ﻿   WORKPLAN PROGRESS MANAGEMENT        Get Submission Comments for Role ﻿ ﻿ ﻿ ﻿ ﻿   Enable Assigning and Unassigning to Admin ﻿ ﻿ ﻿ ﻿ ﻿   Assign Any Entry to Any User ﻿ ﻿ ﻿ ﻿ ﻿   Enable Updating of Workflows ﻿ ﻿ ﻿ ﻿ ﻿   View Your Group Workflow Links ﻿ ﻿ ﻿ ﻿ ﻿   View ALL Workflow Links ﻿ ﻿ ﻿ ﻿ ﻿   Update Workflows ﻿ ﻿ ﻿ ﻿ ﻿   View Workplan Progress Management Page ﻿ ﻿ ﻿ ﻿ ﻿    GO TO TOP\nOverlapping Permissions What happens if a user is a part of more than one Security Role? If a user is part of multiple security roles, such as a SME-Approver and STOREFRONT-Librarian (and the Default Group as all users are) then if a particular permission is granted to one group, it is granted (ANDed) to the user. For example:\nIf user \u0026quot;bobsmith\u0026quot; has the Security Roles of SME_Approver and STOREFRONT-Librarian he will see anything that either of these roles have permission to such as the User Watches Page, the Ability to Approve an Entry, or Change the Ownder of the Entry. See table below.\n    ABILITY OR PERMISSION TO: DEFAULT-GROUP SME-Approver SPOON-Librarian Bob Smith's (ANDed) Access     Access to the User Watches Page ﻿ ﻿ ﻿ ﻿   Ability to Approve an Entry ﻿ ﻿ ﻿ ﻿   Change Owner of the Entry ﻿ ﻿ ﻿ ﻿   Access Admin Jobs Page ﻿ ﻿ ﻿ ﻿    GO TO TOP\nDefault Data Restrictions To use these you MUST mark each individual entry or component in the database with the appropriate markings. This admin area only serves to mark which Security Roles have access to which distributions.\n Data restrictions, if used, restrict users to seeing certain entries. These are all turned OFF (disabled) by default.\nData Sources    ENABLED CODE DESCRIPTION     ﻿ AEROSPACE_IMPORT Aerospace Import Entries   ﻿ DI2E DI2E Component Entry   ﻿ ER2 ER2 Asset    Data Sensitivity    ENABLED CODE DESCRIPTION     ﻿ DISTRO A Government Distribution A   ﻿ DISTRO B Government Distribution B   ﻿ ﻿ ﻿   ﻿ ﻿ ﻿   ﻿ ﻿ ﻿   ﻿ DISTRO F Government Distribution F   ﻿ ﻿ ﻿   ﻿ ﻿ ﻿   ﻿ ﻿ ﻿    GO TO TOP\n"
},
{
	"uri": "/applicationadmin/datamanagement/",
	"title": "Data Management",
	"tags": [],
	"description": "",
	"content": " Table of Contents  Frequently Asked Question Support Media Highlights Lookups Media Relationships  Frequently Asked Questions This list of questions is accessible to each user and should hold a couple of common questions.\nSupport Media In the top right site menu there is a \u0026ldquo;Tutorials\u0026rdquo; button that shows the list of video tutorials uploaded onto SPOON. All this information is provided externally, on this site (spoonsite.github.io)\nHighlights \u0026ldquo;Highlights\u0026rdquo; is the name of SPOON\u0026rsquo;s carousel home-page widget. Here you can set is on that carousel and in which order the slides are displayed.\nLookups SPOON was designed to be very customizable for the Admin user, and Lookups can be a great tool when the Admin needs to create new states and standards that were not in the original design of SPOON.\nExplanations of each table:\n   TABLE EXPLANATION     ResourceType Not used in SPOON   ReviewPro Not used in SPOON   RelationshipType How parts can be related to each other (component of, included in, depends on, etc.)   OrganizationType The list of different kinds of organizations that organizations can be identified as   WorkPlanSubStatusType Statuses that appear on the Workplan Progress Page (Vendor contacted, Waiting for response, ect.)   UserTypeCode The list of different kinds of organizations that users can select during registration. When a new user registers for an account, they must choose from a drop-down list of organization types, one of which they must declare themselves as being a part of. That drop-down list is specified here   SecurityMarkingType SPOON has the ability to designate parts as belonging to a specific level of security. For instance, one SPOON entry can be marked as being “Unclassified (Code: UNL)”, while another can be marked as being “Top Secret (TSC)”. Most parts have no security designations at all. This is the list of possible security markings on SPOON   EvaluationSection Evaluations on SPOON site can have sections of different types, and here is where that list of possible evaluation sections is set   ReviewCon Evaluations on SPOON make use of this list when generating Evaluation templates   WorkflowStatus Workplans use this. No more information about this can be documented at this time   DataSource    Contact Type Contacts can be of a certain type, this is where those types are set   FaqCategoryType Help \u0026gt; Questions can have different categories of questions. This is where they are set   ExperienceTimeType Users who are creating Entry Reviews must declare how much time they\u0026rsquo;ve spend with the product in question. That list can be set here   RecommendationType Evaluations use this. No more information about this can be documented at this time   DataSensitivity Similar to the SecurityMarkingType, the Data Sensitivity is a property of SPOON entries that delimits what level of authority is necessary to see the entry. This is the list of Data Sensitivity levels, any entry given any one of the Data Sensitivity levels will become invisible to a default user. The Admin can set who can see the Data Sensitivity levels defined in this list by editing the Security Roles    Media This page lists all the video and images that are used by the site. Note that the Copy Link only copies the back half of the URL to get to see an image, so you will need to prepend the domain name yourself.\nRelationships "
},
{
	"uri": "/applicationadmin/attributes/",
	"title": "Attributes and Entry Types",
	"tags": [],
	"description": "",
	"content": "  Attributes Entries Entry Types Submission Form Templates Partial Submissions  Attributes An \u0026ldquo;attribute\u0026rdquo; on SPOON is an entry specification, for example height, width, or length of a part.\nIf you want to add a new attribute or edit an existing one, click Add New Type or Edit Attribute respectively and a popup with options will appear.\n   Edit Attribute Fields EXPLANATION     Label The label is the name of the attribute that a user would actually see   Type Code The Type Code is the attribute ID that is used internally to keep track of this attribute; as such this should be unique. Any alphabetical character you enter will be converted to uppercase. Thus, it doesn’t matter if you put in a code in all lowercase; when it is entered into the database it is converted to all uppercase. Numbers are acceptable. By convention, the Type Code is the same as the label except when special characters or excessive length in the label necessitate slight differences   Default Code An \u0026ldquo;Attribute Code\u0026rdquo; is a value for the attribute, for instance a Code for a \u0026ldquo;height\u0026rdquo; attribute could be 46, or also a code for an \u0026ldquo;TRL\u0026rdquo; attribute could be \u0026ldquo;Level 9\u0026rdquo;.   Detailed Description Any information entered here will be available to the user when they add this attribute to their part entry, by way of a tooltip:    Code Value Type Select whether this is a number or a text-like value   Default Unit Enter a scientific measurement made up of base units (to see what codes to use, see the list here: Katex Units)   Compatible Unit List Allows for the case when users may not use the same unit that you do for this particular attribute. For instance, you might make an attribute named Height and expect the user to enter the value in millimeters (mm), but for the convenience of the user you may allow alternative units such as meters, inches, feet   Flags    Visible No information on this can be documented at this time   Important This may give precedence to this part when displaying the order of attributes and search results   Allow Multiple Permits a part to have more than one instance of this attribute   Allow User-Created codes Allows the users to set their own value for the attribute. For instance, set the “Height” attribute to be a “8”. The only time you would want to leave this box unchecked is when you want to force the user to select from a pre-made list of values—for instance, set “Inflatable” to be either “True” or “False”, not permitting the user to enter “Maybe” or “Truu”   Hide on Submission The attribute will be automatically added to the component without the user being able to change it. Hiding a required attribute requires a default code. Codes must be created before this flag can be set    Entries An entry is a part that is added to the database.\n The Administrator can manage all entries on this page. Admins have to ability to create, edit, delete, and toggle entries. Some user submissions may not appear in this screen, so you will have to go to the Data Management -\u0026gt; Submissions -\u0026gt; Partial Submissions page.\nEntry Types    OPTION EXPLANATION     Type Code Internal ID for categories. By default anything given will be converted to uppercase upon entry into the database and the convention for naming is an acronym of the category title   Description The description of the entry type   Parent Type Parent categories can have multiple children   Assigned User(s) Single users that are in charge of reviewing that parts of that category   Assigned Group(S) Groups are a function of Security roles; assigning a group to this categories will ensure that the group has permission to see parts of this type ( to review them as they are going through the Workplan Progress)   Entry Display Template This feature was deprecated in V2.11. It allowed administrators to create custom templates, for the Search Results page, for each entry type   Icon URL The url for the icon that will be shown for that entry type on the Search Results page    Submission Form Templates This feature will be deprecated in v2.12\n The submission form templates are a way for the administrator to have different submission forms for different entry types. Currently, this feature is used to make changes to the submission form, but all entry types use the same submission form.\nPartial Submissions All of the incomplete entry submissions that users are in process of uploaded to SPOON appear here. Any part that is seen in the Workplan Progress page will also be found here.\n"
},
{
	"uri": "/applicationadmin/customsubmissionforms/",
	"title": "Custom Submission Forms",
	"tags": [],
	"description": "",
	"content": "Create a Custom Form This is how to create a custom submission form for new submissions.\nCreate Needed Attributes Before a form can be designed, any required or custom attributes should be added. To do this:\n Navigate to Admin Tools if you are not already there (click on your username in the upper-right, then Admin Tools Select Data Management \u0026rarr; Attributes Click +Add New Type and fill out the form as required for all attributes (required and optional) you will need to build your custom entry form in the next step.  You may wish to enter some codes for the attribute by selecting it and then clicking Manage Codes. This is critical for attributes that do not Allow User Created Codes as there is no way to enter those, which will cause problems on required attributes.   Create/Design the Form  Navigate to Admin Tools if you are not already there (click on your username in the upper-right, then Admin Tools) Select Data Management \u0026rarr; Submissions \u0026rarr; Submissions Form Templates Click the + Add Form button. Select an Entry Type. Fill in the Form Name, Description, and Entry Type. Remember that these custom submission forms are tied to a specific entry type(s). If needed, create a new entry type and then navigate back here (Data Management \u0026rarr; Entry Types). Click Create Form.  In the Form Builder Tool's window add sections as needed. Add fields, paragraphs, horizontal rules, images, and so forth.  Note the Mappings tab. The Mappable Fields MUST be on the form as well as the Required Attributes. These sections will have a red x or a green checkmark, depending on whether they have been added to the form.  To add a mappable field:  Click the Add a field button at the bottom of the form then Mappable Field OR Attribute. Above in the form select the \u0026quot;Map To Field:\u0026quot; drop-down OR the \u0026quot;Attribute Type: drop down to select the attribute. Be sure to check the Required box if the field or attribute is a required one. When you have finished the form and there are no more red checkmarks on the Mappings tab, save the form and close it.   Verify the Form and Activate it  When you are finished with the form, from the main Custom Forms page, select the Form and then click the Verify button. This will prompt you to enter data to verify the validity of the form, that all the required fields are able to be entered, and so forth. On the final page, Review Submission ensure that all the sections have a green checkmark. When finished, click the Verify Submission button. When the form is in the status of Verified, be sure to select it, then click Toggle Active Status so that \u0026quot;A\u0026quot; appears in the Active Status Column. If you get a message indicating that a custom form is already active for that entry type, deactivate (toggle Active Status) the other custom form then activate the one that was just created. An entry type cannot have more than one active custom form at any given time.  If you have all green checkmarks on the Review Submission page, but still get an error like the one below when Verifying:\n Go back to Admin Tools and Edit the form Go to the Mappings tab Ensure that the Mappable Fields AND the Required Attributes sub-tabs are green- they have all been accounted for on the form.     \nEntry and Approval using the Custom Form  Click your username in the upper-right then User Tools \u0026rarr; Submissions \u0026rarr; + New Submission From the Select Entry Type Form box, select the Entry Type for which you created your custom form. Click + Create and then enter a unique initial submission name and click Ok. The submission form loads with your customization attributes and fields as designed prior. Answer the required questions/fields and confirm on the Review Submission section that the entry has no red \u0026quot;x\u0026quot; marks, but only green checkmarks. Click Submit for Approval Navigate to Admin Tools \u0026rarr; Data Management \u0026rarr; Entries Sort by Last Activity Date descending to see the entry just entered at the top of the list. Select the entry. Click Approve. As a final check, go to the home page and Search for the new entry to ensure it is indexed and searchable.  \n"
},
{
	"uri": "/applicationadmin/userdata/",
	"title": "User Data Management",
	"tags": [],
	"description": "",
	"content": " Table of Contents  Contacts Organizations Questions Reviews Watches Tags User Profiles  Contacts Entries on SPOON can have a designated \u0026ldquo;Contact\u0026rdquo;, a person who is the point of contact for that particular entry.\nOrganizations Here you can see all the registered organizations on SPOON. There are tools for merging organizations when duplicates are found.\nQuestions Users can ask questions to an entry\u0026rsquo;s contacts, but before the question shows up publicly on SPOON, it must be approved by the Admin.\n   QUESTION/ANSWER STATUS EXPLANATION     Pending Questions/Answers All newly created questions (i.e. created by users, that is) are viewable here. While a question is marked as a Pending Question, it is not visible to anyone but the user who posed the question. The Admin will NOT receive any notification when a new question is placed. After a question has been asked, the Admin must explicitly click the Question in the question queue to load answers to that question into the Answers queue on the far right column. The Admin will NOT receive any notifications when a new answer is placed. Any edits to the question/answer by a user will reset the status of that question/answer to Pending.   Active Questions/Answers Setting a question/answer as being \u0026ldquo;Active\u0026rdquo; makes it visible to everyone   Inactive Questions/Answers Inactivating the question/answer archives it. Even the user who placed the question/answer will not be able to see it when he/she looks at the entry.    Also note that questions/answers made by the administrators are treated the same as a regular user: they must be approved through this process.\nReviews On the Review page the Admin must approve any Reviews on entries that are submitted by members.\nNote the small Active Status dropdown in the top left corner. If you expect to see an item in the grid below but don\u0026rsquo;t, you may be looking at the wrong Status for the Review you are seeking.\n   REVIEW STATUS EXPLANATION     Pending All newly created reviews (i.e., created by users) are viewable here. While a question is marked as a Pending Question, it is not visible to anyone but the user who posed the question. The Admin will NOT receive any notification when a new question is placed. After a question has been asked, the Admin must explicitly click the Question in the question queue to load answers to that question into the Answers queue on the far right column. Any edits to the question/answer by a user will reset the status of that question/answer to Pending.   Active Questions/Answers Setting a question/answer as being “Active” makes it visible to everyone.   Inactive Questions/Answers Inactivating the question/answer archives it. Even the user who placed the question/answer will not be able to see it when he/she looks at the entry.    Watches All watches created by all users are visible here. The Admin can toggle off watches on any user, which makes the watch disappear (from the user\u0026rsquo;s perspective).\nTags Any user can add or remove tags from an entry; no Admin approval is required whatsoever (with exception of entries that said user could not see in the first place, such as entries that have security restrictions).\nThe Select A Tag column lists all the tags that currently exist on SPOON.\nA tag cannot exist unless it is assigned to at least one entry at a time. Be careful when un-assigning parts from a tag not to remove all of them all at once if you want to keep that tag. The only exception to this rule is when the Admin creates a brand new tag by clicking the Add button - then the Admin can assign parts to a tag that previously had no existing assignments. Otherwise, the tag will decease.\n Selecting a tag populates the Associated Entries and Unassociated Entries columns on the right. If, upon checking the database, it is found that some entry the tag is assigned to is not submitted, pending, inactive, or not approved, that entry is not placed in either column. This can present a difficult scenario if the Admin needs to determine the assigned entries of a tag, but the only assigned entries of the tag are not available. The Admin will be alerted as to how many of the assigned entries are in an un-displayable state by a small message that will appear near the top of screen (see the screen shot above).\nUser Profiles You may notice that this page is very similar in functionality to the User Management page from Application Management.\nToggling a profile only switches it\u0026rsquo;s \u0026ldquo;Active Status\u0026rdquo;, a Boolean (on/off) value that is attached to all profiles on SPOON. However, in v2.11, this value is not tied to anything. If the Admin toggles off a profile to make it inactive, it will not affect any user functions at all, and when the user logs into SPOON next, the \u0026ldquo;Active Status\u0026rdquo; value will be switched back to \u0026ldquo;A\u0026rdquo; (which stands for Active, as opposed to \u0026ldquo;I\u0026rdquo;, which signifies Inactive).\n"
},
{
	"uri": "/applicationadmin/workplans/",
	"title": "Workplans",
	"tags": [],
	"description": "",
	"content": " Create a new Workplan A step-by-step guide to creating a workplan.\nCreate the Workplan  Navigate to Admin Tools if you are not already there (click your username in the upper-right, then Admin Tools) Select Data Management \u0026rarr; Workplan Management Click +Add Workplan  First fill in the Workplan Config Section  Workplan Name: Unique Workplan name Workplan Admin Role: Choose the user group that will have access to entries in this workplan Workplan For: Entry Entry Type: Choose the entry type that this workplan will apply to   1.2 Define Workplan Steps It is a good idea to define the steps to be taken with each entry before creating the actual steps.\n Click Create Step  Step Configuration:\n Step name: Unique step name Short Description: A description of the step. Keep it brief, but be sure to include enough information for the person responsible for the step Approval State to Match: This will be the status of a entry while it is in this step Active On: The state that an entry is currently in when it is assigned to that step Role Access: What role group will be able to view this entry in their Workplan Progress page  Step Actions: Step Actions are events that will occur when a step becomes active\n  In Spoon v2.12, most of the \u0026ldquo;Active On\u0026rdquo; options are in Alpha, which means that they will not work as expected because their functionaity has not been programmed into Spoon yet. Those options are there as placeholders (if you want these features, please email your adminstator/developer team). The \u0026ldquo;Update\u0026rdquo; and \u0026ldquo;Create\u0026rdquo; options do work however. Any of the in-alpha options will behave the same as if they were the \u0026ldquo;Create\u0026rdquo; option. See below for more details.\n Step Configuration: \u0026ldquo;Active On\u0026rdquo; VS \u0026ldquo;Approval State to Match\u0026rdquo; It\u0026rsquo;s important to know the difference between \u0026ldquo;Active On\u0026rdquo; and \u0026ldquo;Approval State to Match\u0026rdquo;. Both define what events will cause a part to be sent to the Workplan Step in question. The difference is in the timing of when they take effect. \u0026ldquo;Active On\u0026rdquo; events are handled first, then the \u0026ldquo;Approval State\u0026rdquo; of a part is checked, and placed into the first step that has a \u0026ldquo;Approval State to Match\u0026rdquo;.\nFor example, say that a part sitting in a Workplan is manaully set from having an Approval state of \u0026ldquo;Pending\u0026rdquo; to \u0026ldquo;Approved\u0026rdquo; (an admin is able to do this through Admin Tools \u0026gt; Data Management \u0026gt; Entries, click \u0026ldquo;Edit\u0026rdquo;). When the part is re-saved into the database with this new Approval status, an approved event [should] be fired. In the Workplan, the first Step that has an \u0026ldquo;Active On\u0026rdquo; option of \u0026ldquo;Approved\u0026rdquo; will receive that part. Then the Approval State will be checked on the part, and the first step in the Workplan that has an \u0026ldquo;Approval State to Match\u0026rdquo; of Approved will recieve the part. Thus if there is a workplan step A that has \u0026ldquo;Active On\u0026rdquo; attribute Approved, and a workplan step B with an \u0026ldquo;Approval State to Match\u0026rdquo; of Approved, then after a part has been approved, the part will appear in step B.\nNote that in v2.12 of Spoon, only \u0026ldquo;Create\u0026rdquo; and \u0026ldquo;Update\u0026rdquo; are supported, therefore some events are treated as if they are \u0026ldquo;Create\u0026rdquo;: Activate, Deactivate, Pending Change Request, Published Evaluation (? untested), Unpublished Evaluation (? untested). The Approved and Pending events are treated like Update events. So setting those options will cause the step in question to catch Created and Updated parts, respectively.\n2. Workplan Progress for Admins and SMEs Each step of a workplan will be assigned to a certain group. That group will see the entries that are assigned to them when they access the Workplan Progress page (Data Management \u0026rarr; Workplan Progress). Each group will complete the task assigned to them. Once completed it will move to the next group.\nThe comments feature has two uses. The first is to enable communication between reviewers, SMEs, and admins. To do this when viewing a submission and commenting, keep the Private box checked. The second use is to communicate with the submission owner.\nThe Assign box has a number of operations used to assign a submission to an admin, unassign or assign it to yourself, or reassign it to another user.\n3. For Submission Owners Submission owners will get notifications of comments on their submissions. Owners are expected to update material as recommended by SMEs and reviewers.\n"
},
{
	"uri": "/applicationadmin/evaluations/",
	"title": "Evaluations",
	"tags": [],
	"description": "",
	"content": " Evaluations Evaluations are an assessment on SPOON\u0026rsquo;s entries. There is a hierarchy of dependencies - Evaluation Templates need a Section Template and a Checklist Template, and a Checklist Template needs a Checklist Questions object. So if the Admin is making an evaluation form for the very first time, he/she will need to first create a Checklist Question, then a Checklist Template, then a Section Template.\n"
},
{
	"uri": "/user/advancedsearching/",
	"title": "Advanced Searching",
	"tags": [],
	"description": "",
	"content": " A guide to advanced searching. Searching Application Search provides a way to find entry lists and articles matching search criteria. Several types of searches are supported. The types of searches that can be performed are:\n Searching across multiple fields (entry name and description, tags, attribute types, codes, and descriptions) Wildcard searching (* and ?) Exact phrase searching Case insensitivity Filtered searches Tags Comparison Customization of the display  Note: The type ahead on the search field only looks at the title to see if it contains the text.\nThe user can then select the suggestion by clicking it or continue with a full text search.\nSearch Field Differentiation or Specificity To search on different fields using a keyword search, you will need to change your search options. These options allow you to filter your search by only matching on certain fields. This is done in the menu bar left of the search bar labeled Search Options.\nFuzzy Matching and Wildcards Fuzzy matching is defined as the ability to perform inexact matches on terms in the search index. For example, this could be used to find all variations of prefixed or suffixed words and multiple spellings of a word.\nFuzzy matching is done with the * and the ? characters acting as wildcards. It is also known as wildcard searching. The * character represents a string of letters, whereas the ? acts as a placeholder for only a single character. The process works as shown in the queries below:\nQuery: offi* Matches office, officer, official, and so on\nQuery: off*r Matches offer, officer, officiator, and so on\nQuery: off?r Matches offer, but not officer\nPhrase Searches and Exact Searches Exact searches must be enclosed by double quotes.\nSearch example: \u0026quot;create a common framework\u0026quot; Search example: \u0026quot;Air Force\u0026quot; or \u0026quot;Company Name Inc.\u0026quot;\nWildcards are only meant to work on individual search terms, not on phrase searches/exact searches, as demonstrated by this example:\nWorks: eng?neering (wildcard properly used) Does not work: \u0026quot;eng?neering b?ckground\u0026quot; (quotes are treated as a literal string not a wildcard)\nIn the second example, the search would only return results that had the ? character exactly in their respective places instead of accepting any character in those locations as the user intended.\nCase Insensitivity Searching is case insensitive and allows mixing of case. In the examples below, the exact same results would be returned regardless of the capitalization.\nSearch examples: create a common framework, Create a Common Framework, cReatE A CoMmoN FraMewoRk\nFiltered Searches On the Search Results page the left-most panel is the Filters panel.\nHere, results can be narrowed by filtering on various aspects such as:\n Name: The name of the entry Tag: Type the name of a tag or select from the drop-down. Tags can be combined and added to the filter or removed. Topic: DI2E Component, Article, etc. User Rating: This will show all entries with the average star rating selected (or better, i.e. a higher average star rating) Vitals: This gives a fine-tuned and very detailed approach to filtering by many different vitals such as DI2E Intent, State, and Alignment.  Using Tags Users can \u0026ldquo;tag\u0026rdquo; listings so that they can be used to later find and refine search results. User-created tags are visible to all users. However, only the owner of the tag or an admin user may remove a tag. Tags are used in the search field shown at the top of the Search Results page and on the Home page.\nHow to create a tag:\n From the Search Results page, click on the entry title. The details of the entry will be displayed. Click the Tag icon to open the tag panel. Enter a new tag in the text field OR choose an existing tag by clicking on the drop down arrow. Click Add to apply the tag to the entry.  How to remove a tag you created:\n From the Search Results page, click on the entry title. The details of the entry will be displayed. Click on the \u0026ldquo;Tag\u0026rdquo; icon to open the tag panel. Tags will be displayed below the \u0026ldquo;Add Tag\u0026rdquo; text field. Locate the tag, click the drop down arrow and select Delete.  Comparing The comparison feature enables side-by-side comparison of multiple listings. For example, there may be several entries that provide the same kind of features (e.g. Cesium and Google maps). You can use the comparison feature to view their details together to find the entry better suited your project\u0026rsquo;s needs.\nHow to compare entries:\n From the Search Results page, check the Add to Compare box on 2 or more entries. Click on the Compare button at the top of the Search Results page. A side-by-side comparison will appear in a pop-up window. If more than two entries were selected, you can select which entries to compare by using the drop-down list at the top. To remove all selected entries, click the drop-down arrow next to the Compare button and select Clear All Selected Entries.  Customizing the Search Display On the Search Results page, filtering can be done by Name, Tag, Topic, User Rating, or Vitals.\nThe search results display can also be customized by clicking on the gear icon and down arrow at the top-right of the search results. Check or uncheck the items to be displayed or hidden such as:\n Organization Badges Description Last Update Vitals Tags Average User Rating Approved Date Index Relevance  To reset all filters, click on the \u0026ldquo;Reset Filters\u0026rdquo; button at the bottom of the Filters column.\nFinally, the columns can be collapsed or expanded by clicking on the left and right arrows in the column headers by Filters, Search Results, and Details.\ntails.\n"
},
{
	"uri": "/releasenotes/",
	"title": "Release Notes",
	"tags": [],
	"description": "",
	"content": " For more information, please see GitHub.\nRelease Notes for v2.12 This release finished converting all user tools to VueJS. This effort was mostly to update the submission form.\n Updated up the emails Fixed login page redirect Removed JIRA plugin  Release Notes for v2.11.1  Fixed a small bug that prevented viewing of some entries for Admins reviewing submission  Release Notes for v2.11 This release started the process to remove ExtJS pages and convert them to VueJS. Most of the User Tools area was implemented. A lot of work was done previously in VueJS to make a mobile version of the site. The mobile pages were taken and made responsive for desktop and mobile.\n Redesigned landing page Remove the separate mobile VueJS site Search speed improvements Search page user interaction redesign  Release Notes for v2.10  Removed Solr as a search engine option. Updated Elasticsearch to Version 7.2.0. Removed the \u0026ldquo;Move Submission\u0026rdquo; buttons in the WorkPlan if you did not have the correct permissions. Updated branding and removed non-functional sections of branding.  Release Notes for v2.9.2  Fix for mobile site not being able to load.  Release Notes for v2.9.1  Fix for commenting on WorkPlan submissions.  Release Notes for v2.9  Added a Vendor Last Update date to all entries. Vendor Last Update date is shown on all entry views. Emails are sent when an entry or change request is approved. User submissions will now enter a queued state while being processed.  Release Notes for v2.8  Added a unit field to attributes. Changed the format of the comparison view. Added support for rendering units in a pretty format. Added a bulk upload tool for zipped files.  Release Notes for v2.7  Improved feedback to users about submission status while editing a submission. Made major improvements to search including better search filters. Fixed issues with reports. Improved mobile search filters.  Administrator Release Notes for v2.7  Various improvements to Entries admin page.  Release Notes for v2.6.6  Issues fixed with \u0026ldquo;Contact Us\u0026rdquo; form. Video support added for media on mobile.  Administrator Notes for v2.6.6  SME WorkPlan approval now added to mobile. Additional user roles defined and created.  Release Notes for v2.6.5  Users can now see current WorkPlan state of submissions. Users and reviewers can now communicate directly through comments on submissions. Minor bug fixes on both desktop and mobile.  Administrator Notes for v2.6.5  New Workflow Management page added. New WorkPlan Progress page added. Assigned user roles will now have access to WorkPlan Progress page. Submissions assigned to them will show and can be moved to next state.  Release Notes for v2.6.3  New login page released. New mobile site released. Users can view entries on mobile and adjust their account settings such as changing a password or email. Mobile site supports viewing updates on watches, requesting feedback, registering for an account, updating account information, and more.  Administrator Notes for v2.6.3  Administrators now have limited functionality on mobile.  Release Notes for v2.6.2  Some adjustments to the Custom Submission Form.  Release Notes for v2.6  The Submission Process now allows for forms that more closely match the input expected for a given entry type. Multiple Entry types/Topics can now be selected in the search.  Administrator Notes for v2.6  Evaluation Form has been updated to improve distinguishing Entry from Evaluation. Published Evaluations are now visible. A Jira ticket link will now show in the evaluation table if configured. Improvements made to the Confluence report. Issues fixed with change request merging of tags, media, and resources. Attribute can now be flagged private and have comments. Resources can now be marked private. Entry type can now have sub type and be nested.  "
},
{
	"uri": "/summaryofspoon/",
	"title": "Features and Summary of SPOON",
	"tags": [],
	"description": "",
	"content": " This is a list of all the features on SPOON.\nLanding Page Searching  Typing into the global search text box, will perform an indexed search with any selected search options (drop-down to the left) Clicking the Search button with no text entered searches everything (a.k.a \u0026ldquo;global search\u0026rdquo;)  Browse By Category  Clicking the title of each card will do a search on any entry in that category and any children categories Clicking a child category in one of the cards will do a search on any entry in just that category  Highlights  Displays Active Highlights (will be able to read more with full HTML display) Highlights are HTML and can have Media  Notifications Notifications are system generated or admin generated messages. They are primarily intended to notify the user that some background process (e.g. reports) have completed.\n Notification should be monitoring events on all pages The application will pop-up a message when it receives the message (Usually in the bottom right-hand corner of the screen) Message are only persisted for X days (admin configured; see system configuration) Message can be marked read (only for that user). Global message create a single message that the user can flag individually Message can be deleted (only for that user). Global message create a single message that the user can delete individually Click the check box to mark as read  Menu  What the user can access is based on their roles . Regular users will only see the buttons that lead to features they have permission for. Upon signing into SPOON, users are directed first to pages that have been configured as their homepage, for example, the internal review user will see the Workplan Progress page upon signing in  Search Results  Results are sorted according to user preference. Relevance (a measure of how relevant the entry is to the search query) is the default setting. These can be set in the search options tab (the cog on the left) Results can be shown in ascending or descending order, this can be changed in the search options tab Users can customize what fields are shown for each search result in the search options tab Only Active/Approved/User accessible (data restrictions) entries will be displayed in search results  Filtering  Users can filter the search results (see the filter tab, the funnel, on the left) based on:  Entry Type (Category) Organization Tags Attributes  When a user is filtering a search, pills will appear below the search bar to indicate how the search is being filtered  Compare  The user should be able to select multiple (2 or more entries to compare) Click compare will open a window that shows a side-by-side of the selected entries  Detail View  This page shows all of the information about an entry Users can:  Watch the part for changes Print the page Contact the vendor Submit corrections Request ownership of the entry Add tags Add reviews Ask questions Answer questions  You must be logged in to see this page  \u0026nbsp;Tags  Clicking on tags will send them to the search page, while doing a search on that tag Users can add tags (based on permission) Tag owner can edit and delete their tags Can not add duplicate tags  Watches  Users can add/remove entry from their watch list Users will be alerted when watched entries are updated Change to entries will be email ONLY if the user flag that they want email in the user tool watch screen. (Separate step)  Print  Will bring up a window with a print view of the entry data The user can pick the section that will be included in the print The print button in the window will bring up the browsers print preview screen allowing the user to customize the print options according to the browser support  Reviews  All users can view approved reviews (if reviews are part of the entry display) Users can post reviews by filling form that pops up Review may be Moderated (require approval) or auto approved (default behavior) If the Review requires approval then it will display a pending banner for the owner of the review only (otherwise it will not show) Owners of the review can edit and remove their reviews Admins with the correct permissions can also \u0026ldquo;delete\u0026rdquo; (in-activate) reviews All Reviews should be summarized for the entry (at the top section of the review display)  Question / Answers  All users can view approved questions (if questions are part of the entry display) Users can post question by filling form that pops up Users can post answers to any questions by filling form that pops up Owners of the question and answers can edit and remove their questions or answers Admins with the correct permissions can also \u0026ldquo;delete\u0026rdquo; (in-activate) reviews Question and answers may be Moderated (require approval) or auto approved (default behavior) If the Question or Answers require approval then it will display a pending banner for the owner of the question/answer only (otherwise it will not show)  Dashboard Every Landing Area has a link to a dashboard (It the same dashboard; there is only one dashboard).\n The dashboard is user definable (select widgets, order them, and change the setting like color and title) The dashboard configuration auto saves on changes The purpose is to allow \u0026ldquo;mashups\u0026rdquo; of information on one screen and quick access to common functionality The Widgets are predefined (however some like the search can configured to show differently. Every widget has its own permission. So user only can access the widgets they have permission for (Note: widget may access APIs that require additional permission) There is no limit to how many widget can be added  Widgets:\n Entry Stats - read only of entry statistics.  System Stats - read only of system information  Notifications - shows Notification event and allow for reading, deleting of notifications  Outstanding Feedback - Allow for viewing feedback and marking them complete  Pending Approval Request - Show all pending entries and pending change request. The User should be able to view the both types of request and approve (if they have permission to approve) Questions - shows the User questions for all entries and allow view responses to those question  Recent User Data - shows questions, reviews, tags, contacts added/updated in the past 30 days (ready-only)  Reports - Show the users report history and allow for download  Saved Search - show the search results the user has saved from advance searches. The user need to select a search to use. There can be multiples of this widget.  Submission Status - show the User Submissions and there status  User Stats - Show admin stats on user  Watches - Show all of the users watches   User tools Submissions This is for users to submit entries. Entries are then reviewed and accepted.\nTools See Reviews and Questions and answers\nChange Password This is for users to update their password.\nAdmin tools See Application Admin\n"
},
{
	"uri": "/",
	"title": "SPOON Documentation",
	"tags": [],
	"description": "",
	"content": " SPOON Documentation SPOON (SmallSat Parts On Orbit Now) is cataloging system used to catalog small satellite parts. Users can search parts by user defined tags, attributes, category type, and organization. SPOON also provides the ability for vendors to input parts into the database.\nSee spoonsite.github.io for documentation on the latest release.\nAn instance of this application is running at spoonsite.com\nSPOON was initially developed as Openstorefront for DI2E. This documentation uses SPOON, Storefront, and Openstorefront interchangeably.\nSPOON is developed by Space Dynamics Laboratory and is licensed under GPL V3 (See NOTICE.txt).\n"
},
{
	"uri": "/_header/",
	"title": "SPOON",
	"tags": [],
	"description": "",
	"content": "SPOON Documentation "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]