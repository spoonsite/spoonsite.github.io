[
{
	"uri": "/user/bulk-upload-process/",
	"title": "Bulk Upload Process",
	"tags": [],
	"description": "Bulk Upload Instructions - upload pdfs, Excel spreadsheets, etc, to be manual imported to SPOONsite.com",
	"content": "You can bulk upload any kind of file to SPOON inside of a zipped folder.\nSPOON support will enter your SPOON part entries for you. This is useful if you have many parts to enter in SPOON, and you already have their details in files of varying type. File types could be files with .pdf, .docx, .xls, .xml, extensions, and more.\n Sign up, if you haven\u0026rsquo;t already.  Login, and go to \u0026ldquo;User Tools\u0026rdquo;.  Click the \u0026lsquo;Bulk Upload\u0026rsquo; button to upload ZIP file. Submitted files MUST be in a zipped folder.  After you have uploaded your ZIP file, SPOON support will contact you and work with you to get your parts into the database. Sign in and go to your \u0026ldquo;User Tools\u0026rdquo; again.  Click to see your Submissions.  You should see your entry. The \u0026ldquo;Status\u0026rdquo; indicates that it cannot be processes because you have not submitted it.  SPOON support has filled your file\u0026rsquo;s information into each section. Go through every section and inspect the data to confirm that it is correct. If there are mistakes and errors, change them. Click \u0026ldquo;Review Submission\u0026rdquo;, and then click Submit For Approval. 9.After you have submitted your entry, your entry will go through an approval process. This includes your part being reviewed by a satellite SME (Subject Matter Expert). This allows us to maintain the quality of the data being entered into the SPOON database. "
},
{
	"uri": "/dev/developersguide/",
	"title": "Developer Guide",
	"tags": [],
	"description": "Developer Setup Guide",
	"content": "This guide goes over various issues developers would be concerned with, such as how to setup their IDE, what libraries are used, etc.\n1. Internal Development See User Interface Guide, Server Code Standard, and Front-end Code Standards for Coding and Style guides.\n1.1 Key Components Used The following components were used in the development:\n JDK 8\n Elasticsearch/Solr\n OpenAM (Configurable, default is property based log in.)\n  The application is a JEE servlet-container webapp, so any JEE 6 servlet-container compliant server should work with some server configuration. The current deployment target is Tomcat 7.\n1.2 Key Libraries Used The following key libraries were used in the development:\n JAX-RS- heavily used for REST API. (Jersey with Moxy for data binding)\n Stripes- Action based web framework\n Jackson- JSON Handling/Binding\n Apache Shiro- Security\n Orient DB- No SQL/Multi-Model database\n Ext.js and tinymce\n  1.3 Dev Environment with NetBeans  NetBeans Install/configuration  Install NetBeans with Java EE and Tomcat - https://netbeans.org/downloads/  Select \u0026ldquo;Customize\u0026rdquo; on the NetBeans installer to switch the server from GlassFish to Tomcat  If you already have NetBeans installed  In the Tools -\u0026gt; Plugins window check for \u0026ldquo;Java EE Base\u0026rdquo; install it if not already installed. Restart NetBeans if prompted Install Tomcat 7 (if not already installed) - http://tomcat.apache.org/download-70.cgi  Download nbformatting.zip and go to Tools-\u0026gt;Options-\u0026gt;Editor and import the formatting settings.  Clone the openstorefront GitHub repo to the desired directory  https://help.github.com/articles/cloning-a-repository/  Open the openstorefront Project  Select the Open Project Icon or press CTRL + SHIFT + O Open the openstorefront/server directory Select the \u0026ldquo;openstorefront\u0026rdquo; option and make sure \u0026ldquo;Open Required Projects\u0026rdquo; is selected  Tomcat Server configuration  Select Tools -\u0026gt; Servers. Once the servers window opens, select Add Server Follow the wizard to select the Tomcat server location and add a user Once created, select the \u0026ldquo;Startup\u0026rdquo; tab and ensure the \u0026ldquo;Socket Port\u0026rdquo; option is selected. Select the Platform tab and set the VM memory options to -Xmx[memory size]. We recommend at least 2GB. (-Xmx2g) if you want to use the Tomcat manager-gui you will need to configuring manager application access - https://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html#Configuring_Manager_Application_Access make sure you have RW access to $Tomcat_HOME/bin/felix-cache   1.4 Dev Environment with Visual Studio Code  VS Code Install/configuration  Install Visual Studio Code - https://code.visualstudio.com  Read this page to get a walk through of how to setup VS code for Java Development https://code.visualstudio.com/docs/languages/java Get familiar with VS Code by watching the quick videos about it here: https://code.visualstudio.com/docs/getstarted/introvideos   Install the Java 8 EE SDK found here: http://www.oracle.com/technetwork/java/javaee/downloads/index.html Install Apache Maven here: https://maven.apache.org/download.cgi Install Tomcat here: https://tomcat.apache.org/download-80.cgi Once you have VS Code installed and the other dependent applications you will need to install the VS Code extensions and configure them reading their install pages and how paths are set to point to the applications.  Java Extension Pack by Red Hat. This includes several extensions for Java Development Tomcat Extension Maven for Java Extension  Clone the openstorefront GitHub repo to the desired directory  https://help.github.com/articles/cloning-a-repository/  Open the openstorefront Project  Select the Open Folder Menu in VS Code or press Ctrl-K Ctrl-O. You can also go to File-\u0026gt;Add Folder to Workspace Open the openstorefront folder to be added. You will notice git is integrated with VS Code to see files that are changing.  Open Maven Extension with openstorefont drop down  You will likely need to set the JAVA_HOME environment variable and java and maven paths to the windows PATH system variables. Right mouse click on the openstorefront package in the maven extension and click the install button to build the project.  After the build completes use the Tomcat Extension  The tomcat extension allows you to select where Tomcat is installed. You should also set where the tomcat web folder is located in the settings. The extension will create a new folder structure. \u0026ldquo;tomcat.workspace\u0026rdquo;: \u0026ldquo;F:\\sf\u0026rdquo; Read the configuration information on the extension. I had problems getting the the .war file to copy to the running tomcat instance so I had to use another extension to perform the copy. With the tomcat workspace defined you can now setup a copy script from maven build for the war file or you can use a copy file VSCode extension to copy the war file to the correct location. If tomcat is running it will unpack the war file and you should be able to access the running application in your browser at localhost://8080/openstorefront.\n   1.5 Building with Maven CLI Install Maven if not installed by your IDE - http://maven.apache.org/install.html\nrun mvn install from $PROJECT\\_HOME/server/openstorefront\n(Skip tests) mvn -Dmaven.test.skip=true or mvn -DskipTests=true install\n1.6 Deploying Copy the war artifact to the webapp directory for Tomcat. Some IDEs can handle this for you. See application server documentation for other deployment mechanisms.\n1.7 Running The application is targeted to run in Tomcat 7; however, it may run in other compatible containers with little or no changes.\nSearching requires an external Elasticsearch/(Solr) instance setup. See Setup\n 1.8 Testing  Unit tests  run as part of the Maven install. NetBeans, Eclipse and IntelliJ Idea have native graphical test runners built in. with the JUnit CLI java org.junit.runner.JUnitCore [class to test] http://junit.org/junit4/faq.html#atests_1  Container/Integration tests login as admin go to http://localhost:8080/openstorefront/test/ServiceTest.action  1.9 Contributing Patches The code is hosted on the public GitHub https://github.com/di2e/openstorefront. Create a pull request to the current release branch. A pull request will be reviewed prior to merge. Please file bugs or enhancement by submitting a ticket to:\nhttps://jira.di2e.net/browse/STORE (Login required)\nIf you are unable to obtain a login account then submit an issue ticket on the GitHub site.\n1.10 Versioning Strategy The software is versioned based on the following:\nMajor.Minor.Patch\nA major version change is represents a major change in functionality or an addition of a major new feature. A minor version change represent minor features and improvement along with bug fixes. A patch release is done only for bug fixes and needed improvements to existing features.\nThe REST API versioning follows http://semver.org/ where major version represents incompatible API changes. The REST endpoints include a version number which represents the major version. The version in the URL doesn\u0026rsquo;t change with minor versions. However, the API follows with the version of the application.\n1.11 Licensing The project as a whole (front-end and server code) is GPL V3 but, individual parts may use compatible licenses. This is in compliance with the licensing. Mark UI code that uses EXT JS with the GPL header. Mark server code and other code as Apache V2. See NOTICE.txt for more information. Our goal is allow for broader usage when other requirements are met. This also clarifies how individual pieces can be used.\n1.12 Security Openstorefront support several environments each have different security needs. It also support a built in user management. Regardless of the authentication mechanism the security is based on dynamic role made up of permissions.\nThe granularity of the permissions is mostly feature/tool based.\n1.12.1 Adding Permissions  Add Permission to SecurityPermission entity in code.\n Add Permission to auto-generated admin group (See Core-Service-\u0026gt; \u0026hellip;core.init.SecurityInit.java)\n Apply Permission\n  Two place where permission need to be applied:\n Server API\n UI (typically to restrict a page however, it may be used to restrict a piece of functionality)\n  Use caution in marking APIs as there may be other features that rely a shared API to work correctly. Should be a rare case. Also, keep in mind there may be special handling for \u0026ldquo;owners\u0026rdquo; of the data beyond a permission.\n1.12.2 Data Restriction Data may be restricted by source and/or data sensitivity. Data sensitivity may be marked at a entity-level however, not all entity need to be marked. Marking support on the UI may be set according to needs.\nAll Data-based API need to handling filtering data.\n2. External Developers This guide is targeted at external developers who want to extend the application.\n2.1 REST API The API document is directly reflected from the live code so it is always current for the running version of the application. The API documentation can be accessed by logging in as an admin and following the link from the admin tools see application management. A print view of the API can be generated form there as well.\n2.2 Adding Custom Parser (Plugin) A custom parser may be needed for handling complex formats that can\u0026rsquo;t be support via data mapping. In some cases, both a custom parser and data mapping may be required.\n1 - Create an OSGi bundle (you use a maven project)\n2 - Add a dependency to openstorefront-core-api\n3 - In the Activator.java, register your new parser (More than one parser can be added to a plugin)\nIn start bundle:\nFileFormat customFormat = new FileFormat(); customFormat.setCode(\u0026#34;CUSTOMFORMATCODE\u0026#34;); customFormat.setFileType(FileType.COMPONENT); customFormat.setDescription(\u0026#34;Custom format\u0026#34;); customFormat.setSupportsDataMap(true); //Set to true to allow data mapping customFormat.setParserClass(CustomParser.class.getName()); service.getImportService().registerFormat(customFormat, CustomParser.class); In stop bundle:\nservice.getImportService().unregisterFormat(customFormat.class.getName()); 4 - Upload build JAR using the Admin-\u0026gt;Application Management-\u0026gt;System-\u0026gt;Plugins or copy jar to /var/openstorefront/perm/plugins and the application will auto-deploy\nOnly Libraries and API the application expose are available. (CORE-API, CORE-COMMON) All other third-party libraries must be included with your JAR.\n 2.2.2 Parser Workflow (Default flow but it can be overridden)\n Check Format (On Web Upload)\n Process Data\n Get the parser Reader (CSV, Text, XML\u0026hellip;etc)\n Read Record\n Validate Record\n Add record to storage batch (flushes batch if full)\n Loop through remaining records\n Flush any records not stored\n Finish Processing (Override for special handling; Eg Media and Relationships)\n   2.2.3 Parser Class  Extend Either the Component or Attribute Base Parser Implement Check format and parse record  Override other method such as getReader as needed. The parse record method receive a model according to the reader. Then it should return a record such as ComponentAll to be stored. If the method return null it will skip the record.   The developer has access to the filehistory record and the service proxy.\nSee: spoon importer plugin as a example.\n 3. Database Management The application handles all database interaction transparently, so direct database access and manipulation is not needed.\nSee the following for information on outside control (should rarely be needed/used).\n3.1 Refreshing the Database CAUTION This will wipe out all data in the application. Data, such as User profiles, cannot be recovered. Component user data can be preserved by performing an export from the component admin tool.\n Make a backup by copying all of the files in the /var/openstorefront/db directory or use the following console tools steps:\n Stop the Tomcat server (e.g. service tomcat stop) Remove the folder /var/openstorefront/db (rm -rf /var/openstorefront/db) Start the tomcat server  When the application loads it will create a new database and populate the data from whatever is currently in the import folders (lookups only; attributes, component, articles will need to be manually trigger or uploaded via the Admin Tools UI).\nThe initial load of the application may take a few minutes. If the import directories are empty, the application will load default lookup files that are packaged with the application.\n3.2 Installing Database Console Viewing (Querying) information is fine; however, use extreme caution when modifying any records as all logic is handled by the application.\n  Download Orient DB (Currently using the 2.1.x series) at OrientDB.org\n Extract the archive\n Run the console ./bin/console.sh\n Connect to the DB:\n  connect remote: localhost/openstorefront (user) (password) (see the /var/openstorefront/config/openstorefront.properties for connection information)\nThe database supports an SQL like interface and then adds other functionality on top.\n See Orient DB Backup for information about backup\n See Orient DB Export/Import for export and imports.\n  3.3 Installing Database Studio Orient DB includes a web application for viewing the database visually, instead of viewing everything from the console. Once installed, Orient DB Studio will run with the database itself once OpenStoreFront is running, and will not require anything to be run locally\n Viewing (Querying) information is fine; however, use extreme caution when modifying any records as all logic is handled by the application.\n  Download Orient DB (Currently using the 2.1.x series) at OrientDB.org\n If you already downloaded Orient DB in section 3.2 above, you may simply reuse that download.  Extract the archive\n Locate the Studio plugin: ./plugins/studio-2.1.zip\n Copy plugin to OpenStoreFront database on server: /var/openstorefront/db/plugins\n Copy entire .zip file; do not extract.  Start or Restart OpenStoreFront\n Plugin will automatically be installed when the database service is initialized.  Access Orient DB Studio: http://localhost:2480/studio/index.html\n Change \u0026lsquo;localhost\u0026rsquo; to the appropriate domain name or IP address if OpenStoreFront is not running locally Ensure \u0026lsquo;openstorefront\u0026rsquo; is selected as the database in the dropdown. Login using the credentials located in the configuration file: /var/openstorefront/config/openstorefront.properties   The database supports an SQL like interface and then adds other functionality on top.\n See Orient DB Studio for more information about Studio  3.4 Aerospace Import istructions  Go to https://desktop.pingone.com/Aerospace\n Sign in with the proper credentials. If you don\u0026rsquo;t have credentials find someone who does so that they can get you access.  Once you are logged in click on the NASAS3VI Image/Link and verify with MFA to get to the data page.\n On that page click on the Datasets link in the top left hand corner, select SmallSatelliteProducts, select the appropriate month data type and download the zipped directory.\n In general a few things need to happen here. We need to prepare a directory to feed to the aerospace importer on spoonsite.\n We only need the updated xml file. This file will be a few hundred KiloBytes large. The complete data set file is not needed it is about 4.6 MB. In addition to the update xml file we also need the provenance documents directory (if it is supplied) and the product images directory (if it is supplied). In order to preprocess the data, we need to run a python script that is located spoon\\server\\openstorefront\\openstorefront-plugin\\aerospaceimport\\scripts\\parse.py. Using this script you can fill in missing organizations as appropriate, remove escape characters and verify the entry types are complete. Once the xml file is ready it needs to be renamed to \u0026ldquo;recordsList.xml\u0026rdquo; (without quotes) the product_images folder must be named \u0026ldquo;product_images\u0026rdquo; (without quotes). Once those 3 files are ready, they should be zipped up into a directory and now they are ready to be imported.  On spoonsite, go to admin-\u0026gt;data management-\u0026gt;imports. Fill in the required information, provide the appropriate mapping file and select import.\n You are done, after a period of time the import will bring in the appropriate data and the entries.\n "
},
{
	"uri": "/evaluations/evaluator/",
	"title": "Evaluator",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/systemadmin/setup/",
	"title": "Setup",
	"tags": [],
	"description": "",
	"content": "These are instructions on how to get an instance of the site to run on your personal machine.\n1. Installation 1.1 High level instructions for a fresh install Prior to the install, setup an Elasticsearch OR Solr instance and make sure it's running. Then, perform the following steps:\n Setup VM\n Install Java JDK 1.8\n Install Tomcat 7\n Integrate OpenAM Agent\n Deploy Application\n Configure Application\n Restart Tomcat (To pick up configuration changes)\n Import data\n  1.2 Suggested VM Configuration The following is the recommended VM configuration:\n CentOS CPUs: 4 RAM: 8GB DISK: 40GB (Increase, if storing a lot of media and resources locally) Minimum:  CPUs: 1 RAM: 2GB (Application should be set to use 1GB) DISK: 20GB   1.3 Platform Dependencies The Storefront is dependent upon:\n Java 8 Tomcat 7 v50+  1.4 External Dependencies The Storefront relies upon the following external dependencies:\n OpenAM (Optional) Index Search Server (Pick one)  Solr 6.x + Recommended for greater control Elasticsearch 5.6.x Recommended for simple install Recommended search server    Support for ESA 1.0 and Solr 4.3.1 has been dropped\n1.4.1 To Use Solr (Optional) (The following assumes the application is stop prior to the change. To change on a running application you need to restart the SearchServerManager after making changes.)\nDownload Version 6.x from solr home, and then perform the following steps:\n Unpackage (setup according to solr instructions if setting up OS integration)\n Add core\ncopy server /doc/solr/openstorefront (From source code) to .../solr-6.1.0/server/solr\n Start server bin/solr start -p 8983\nhttp://localhost:8983 should bring up the admin consol if it's working.\n Configure SPOON to point to Solr by going to: /var/openstorefront/config/openstorefront.properties\n Edit\nsearch.server=solr solr.server.url=http://localhost:8983/solr/openstorefront solr.server.usexml=true Resync data\nNav-\u0026gt;Admin-\u0026gt;System-\u0026gt;Search Control Click Re-Index Listings   1.4.1.1 Installing as service linux run as sudo\n ln -s /usr/local/solr/solr-6.1.0 latest\n cp /usr/local/solr/solr-6.1.0/bin/init.d/solr /etc/init.d\n nano /etc/init.d/solr\nEdit:\nSOLR_INSTALL_DIR=\u0026#34;/usr/local/solr/latest\u0026#34; SOLR_ENV=\u0026#34;/usr/local/solr/latest/bin/solr.in.sh\u0026#34; SOLR_INCLUDE=\u0026#34;$SOLR_ENV\u0026#34; \u0026#34;$SOLR_INSTALL_DIR/bin/solr\u0026#34; \u0026#34;$SOLR_CMD\u0026#34; \u0026#34;$2\u0026#34; Save and exit\n Add User\nchmod 755 /etc/init.d/solr chown root:root /etc/init.d/solr (debian/ubuntu)\nupdate-rc.d solr defaults update-rc.d solr enable (centos/redhat)\nchkconfig solr on groupadd solr useradd -g solr solr chown -R solr:solr /usr/local/solr/solr-6.1.0 chown solr:solr latest (If lsof is not installed)\nyum install lsof (This will start at port 8983)\nservice solr start|stop   1.4.2 To Use Elasticsearch (Optional)  Download [elasticsearch home]https://www.elastic.co/ (Apache v2 licensed)\n Start /bin/elasticsearch\n  http://localhost:9200 should return some json with stats.\nConfigure SPOON to point to Solr by going to: /var/openstorefront/config/openstorefront.properties or System admin screen  # Add/Set: (adjust as needed to match url and ports) search.server=elasticsearch elastic.server.host=localhost elastic.server.port=9200 Resync data\nNav-\u0026gt;Admin-\u0026gt;System-\u0026gt;Search Control Click Re-Index Listings    1.4.2.1 Yum install of Elasticsearch  Download and install with YUM\nhttps://www.elastic.co/downloads/elasticsearch (6.x)\n(see https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html for yum install instructions)\n service elasticsearch start\nhttp://localhost:9200 should return some json with stats.\n Configure SPOON to point to elastisearch by going to: /var/openstorefront/config/openstorefront.properties or System admin screen-\u0026gt;system properties\n Add/Set: (adjust as needed to match url and ports)\nsearch.server=elasticsearch  elastic.server.host=localhost  elastic.server.port=9200  Resync data\nNav-\u0026gt;Admin-\u0026gt;Application Data-\u0026gt;System-\u0026gt;Search Control\n Click Re-Index Listings\n   1.4.3 Updated Search Server at Runtime  Use Admin-\u0026gt;Application Management-\u0026gt;System to set the system config properties\n On Managers tab -\u0026gt; Restart Search Server Managers\n  1.5 System Setup Unless otherwise noted, run as sudo.\nYou can use Nano or another text editor.\n 1.5.1 Install Java Use the following steps to install Java.\n Download JDK from Oracle\n Move the downloads to the server home directory\n Run Sudo su as root\n Extract and move following folders:\nmkdir /usr/java tar -xvf jdk-8u25-linux-x64.tar.gz mv jdk1.8.0\\_25 /usr/java/ chmod 755 -R /usr/java Create the following links:\nln -s /usr/java/jdk1.8.0\\_25 /usr/java/jdk8 ln -s /usr/java/jdk1.8.0\\_25 /usr/java/latest Setup Environment Vars using the instructions at http://www.cyberciti.biz/faq/linux-unix-set-java_home-path-variable/, and then perform the following:\nnano /etc/profile\n Add to the bottom:\n#Java Path export PATH=\\$PATH:/usr/java/latest/bin export JAVA\\_HOME=/usr/java/latest Save/Exit then source /etc/profile\n nano /etc/bash.bashrc\n Add to the bottom:\n#Java Path export PATH=\\$PATH:/usr/java/latest/bin export JAVA\\_HOME=/usr/java/latest  Save/Exit then source /etc/bash.bashrc\n Confirm that java -version runs\n  1.5.2 Install Tomcat Public Package Use the following steps to install the Tomcat public package.\n Download and copy to home directory\n tar -xvf apache-tomcat-7.0.55.tar.gz\n mv apache-tomcat-7.0.55 /usr/local/tomcat\n (Use ln -nsf (target) (link) to repoint)\nln -s /usr/local/tomcat/apache-tomcat-7.0.55 /usr/local/tomcat/latest nano /usr/local/tomcat/latest/bin/setenv.sh\nAdd line: CATALINA\\_OPTS=-Xmx1024m\nMemory settings depend on server config. Minimum recommended memory is 1GB; however, it may be able to run on less. The amount of memory affects the amount of concurrent users the server can support.\n VM RAM:\n 2GB -\u0026gt; -Xmx1024m 4GB -\u0026gt; -Xmx2048m 8GB -\u0026gt; -Xmx6144m (Make sure to use a 64bit VM)  OPTIONAL: In the conf/server.xml (In Connector section)\n Add http compression on. Compression=\u0026quot;on\u0026quot; compressableMimeType=\u0026quot;text/html,text/xml,text/plain,application/json,text/css,application/javascript\u0026quot;\n Set to use NIO Protocal protocol=\u0026quot;org.apache.coyote.http11.Http11NioProtocol\u0026quot; maxThreads=\u0026quot;1000\u0026quot;\n  Also, you may consider setting more aggressive connection settings than the default depending on your expected load. See Tomcat documentation: http://tomcat.apache.org/tomcat-7.0-doc/index.html. The default settings will suffice for most deployments.\n  Setup Tomcat as a service using the following:\nSee Installing tomcat 7 on CentOS\nnano /etc/init.d/tomcat  #!/bin/bash  # description: Tomcat Start Stop Restart # processname: tomcat # chkconfig: 234 20 80 #JAVA_HOME=/usr/java/jdk8 #export JAVA_HOME #PATH=$JAVA_HOME/bin:\\$PATH #export PATH CATALINA_HOME=/usr/local/tomcat/latest case $1 in start) sh $CATALINA_HOME/bin/startup.sh ;; stop) sh $CATALINA_HOME/bin/shutdown.sh ;; restart) sh $CATALINA_HOME/bin/shutdown.sh sh $CATALINA_HOME/bin/startup.sh ;; esac exit 0 chmod 755 /etc/init.d/tomcat\n chkconfig --add tomcat\n chkconfig --level 234 tomcat on\n  Open port iptables -I INPUT -p tcp --dport 8080 -j ACCEPT\n  1.5.3 Install Tomcat Using JPackage Use the following steps to install Tomcat using JPackage See jpackage.org\n At www.jpackage.org, follow the installation instructions to setup the repository for your system install (e.g. yum, apt, and urpmi)\n After you have set up the repository, pull down Tomcat7-7.0.54-2 from the version 6 repo.\n  JPackage version has a mistake in the package. The ecj jar library is old and doesn't work with JDK1.8 ; however, this is easily corrected. Download 7.0.54 from apache.org and replace ecj-xxx.jar in tomcat/lib directory with ecj-xxx.jar from the 7.0.54 version.\n 1.5.4 Server Control Use the following commands to control the server.\n service tomcat start\n service tomcat stop\nIt can take a minute for the application to shut down. Please wait before restarting.\n  service tomcat restart\nUsing this is not recommended as it not always successful due the script not waiting for shutdown.\n   1.6 Deploying application To deploy the application, copy openstorefront.war to /usr/local/tomcat/latest/webapps\n1.7 Application Configuration The application configuration and data are stored in /var/openstorefront/. Make sure the user running the application has r/w permission for that directory. All directories are created upon application startup. The high level directory map is stored under /var/openstorefront/.\n config - holds all configurations files. Defaults are created on initial startup.\n db - holds database files When upgrading to version 2.3+ from 2.2 and earlier, there is an additional step when existing data needs to persist. Navigate to the database directory: /var/openstorefront/db/databases/openstorefront and delete the openstorefront .wal file (openstorefront*.wal). First creating a complete backup of the database files would be prudent. Deleting this file allows the database to be upgraded to a newer version which is used starting with version 2.3.\n  import -directory for placing files to be imported.\n perm - permanent storage location\n temp - temporary storage that application controls. Most application temp storage defaults to the system temp storage location. The temp directory here holds information that needs to be persisted for a longer time period. The main configuration file is: /var/openstorefront/config/openstorefront.properties\n   On initial setup modify the following:\n change the url to point to esa/solr\n\u0026quot;solr.server.url=http://localhost:15000/solr/esa\u0026quot;\n For OpenAM Integration:\n#Security Header  openam.url=\u0026lt;Url to open am something like http:/idam.server.com/openam\u0026gt; #http:/.../openam/UI/Logout (Full URL) logout.url=\u0026lt;Full url to the logout\u0026gt; #Change any header as needed. The defaults likely will work out of the box. openam.header.username=sAMAccountName openam.header.firstname=givenname openam.header.lastname=sn openam.header.email=mail openam.header.phone=telephonenumber openam.header.group=memberOf openam.header.ldapguid=memberid openam.header.organization= openam.header.admingroupname=STORE-Admin Edit shiro.ini under the config directory  under [main] uncomment (remove \\#) headerRealm = edu.usu.sdl.openstorefront.security.HeaderRealm securityManager.realms = \\$headerRealm under [users] ### comment out ### #admin = secret, administrator #user = user under [roles] comment out #admin = administrator  1.7.1 Open AM Notes: If when setting Open AM up with certificates you may need to use a truststore on openstorefront tomcat. If so, remember to update the certificates in the truststore when the certificate changes. Open AM, Openstorefront, and proxy if used will all need to have valid matching certificates.\n1.8 Importing Data Import data using the following steps.\n Export (or import) data from an existing system using application\n admin tools. (Requires an Admin Login)  When the application is first started, it will load a default set of \u0026quot;lookup\u0026quot; types. These can be later changed using the admin tools. On a new install, no attributes, articles or components are loaded. They can be entered or imported using the application admin tools.\n  1.9 Logging Notes You can view the logs messages in the Catalina log file: /usr/local/tomcat/latest/logs\nAlso, an admin can turn on DB logging from the System admin screen by default DB logging is off. It’s on recommended to turn on DB logging for specific troubleshooting and turn off when done.\n1.9.1 Log Level Definitions See the following table for the log definitions.\n SEVERE - Something didn't run correctly or as expected WARN - Behavior may not be desired but, the system was able to continue INFO - System admin message FINE - Developer message FINER - Detailed developer messages FINEST - Trace information  1.10 Setup OpenAM See the example below for OpenAM setup. Your configuration may be different.\n(See https://bugster.forgerock.org/jira/browse/OPENAM-211: J2EE agents are unable and will not work, if the container was started prior to OpenAM).\nWhen the OpenAM policy agent is installed on Tomcat, the application server will not start unless the OpenAM server is available. This is a known issue with the OpenAM Policy agent.\n 1.10.1 Versions Used The following versions were used:\n Tomcat 7.0.55 64-bit Windows zip\n OpenAM 11.0.0.0:\n http://docs.forgerock.org/en/openam/11.0.0/release-notes/index/index.html  J2EE Policy Agent 3.3.0 Apache Tomcat 6 and 7:\n http://docs.forgerock.org/en/openam-pa/3.3.0/jee-release-notes/index/index.html  64 bit JRE 1.7.0_67-b01\n  1.10.2 Installation of OpenAM Java EE Policy Agent into Tomcat 7.0.55 Use the following steps to install OpenAM Java EE Policy Agent on Tomcat.\n Make sure the Agent Profile has already been created in OpenAM\n Create a pwd.txt file at C:\\Temp\\pwd.txt and add your Agent Profile password to it\n Shutdown the Tomcat server that is going to run your web application\n Make sure the Tomcat server that is running OpenAM is still running\n Extract Tomcat-v6-7-Agent-3.3.0.zip to a known directory\n CD into the j2ee_agents/tomcat_v6_agent/bin directory\n Execute agentadmin --install to install the agent\n  1.10.3 References  http://openam.forgerock.org/openam-documentation/openam-doc-source/doc/jee-install-guide/index/chap-apache-tomcat.html\n http://openam.forgerock.org/openam-documentation/openam-doc-source/doc/jee-install-guide/#chap-apache-tomcat\n  1.10.4 Configuration of OpenAM See Open AM Getting Started for OpenAM configuration information.\n1.10.5 Configure the Policy in OpenAM Use the following steps to configure the OpenAM policy.\n Open up OpenAM in a web browser http://(host):8080/openam Log into OpenAM using amadmin Click on Access Control -\u0026gt; /(Top Level Realm) -\u0026gt; Policies Click on New Policy Give the Policy a name of Storefront Policy In the Rules table click New  Select URL Policy Agent and click Next Enter the following in Step 2 of 2: New Rule  Name: Allow Storefront Access Resource Name: http://(host):8081/agentsample/ Check the boxes for GET and POST   In the Subjects table click New  Select Authenticated Users and click Next Name the rule All Authenticated Users Click Finish  Create a new response provider  In the Dynamic Attribute make sure uid and isMemberOf is selected (ctrl-click) Click on Finish    1.10.6 Creating the Agent Profile Use the following steps to create the agent profile.\n Open up OpenAM in a web browser http://(host):8080/openam Log into OpenAM using amadmin Click on Access Control \u0026gt; Top Level Realm \u0026gt; Agents \u0026gt; J2EE Create a new J2EE agent by clicking on the New... button under Agent Create the agent with the following parameters:  Name: myagent Password: password Configuration: Centralized Server URL: http://(host):8080/openam Agent URL: http://(host):8081/agentsample   2 CentOS 7 Install with Apache proxy Example  Run the following as sudo:\nOptionally install nano:  yum install nano  Install Java 1.8:  yum install java-1.8.0-openjdk  Install apache 2.4:  yum clean all yum -y update yum -y install httpd firewall-cmd --permanent --add-port=80/tcp firewall-cmd --permanent --add-port=443/tcp firewall-cmd --reload\nNOTE) If firewall-cmd doesn't exist then run\na) yum install firewalld -y\nb) systemctl start firewalld\nc) systemctl enable firewalld\n systemctl start httpd\n systemctl enable httpd\n  apache service command reference (apache should be running at this point):\nStart: systemctl start httpd\nStop: systemctl stop httpd\nTest: curl localhost | grep 'Apache HTTP server'\nshould give you a response something like this:\n% Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 4897 100 4897 0 0 928k 0 --:--:-- --:--:-- --:--:-- 956k \u0026lt;p class=\u0026#34;lead\u0026#34;\u0026gt;This page is used to test the proper operation of the \u0026lt;a href=\u0026#34;http://apache.org\u0026#34;\u0026gt;Apache HTTP server\u0026lt;/a\u0026gt; after it has been installed. If you can read this page it means that this site is working properly. This server is powered by \u0026lt;a href=\u0026#34;http://centos.org\u0026#34;\u0026gt;CentOS\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt; Install elasticsearch 6.x:  rpm --import https://packages.elastic.co/GPG-KEY-elasticsearch Add the following in your /etc/yum.repos.d/ directory in a file with a .repo suffix, for example /etc/yum.repos.d/elasticsearch.repo  [elasticsearch-6.x] name=Elasticsearch repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md yum install elasticsearch systemctl daemon-reload systemctl enable elasticsearch.service systemctl start elasticsearch.service  elasticsearch service command reference (elasticsearch should be running at this point):\nStart: systemctl start elasticsearch.service\nStop: systemctl stop elasticsearch.service\nTest: curl -XGET 'localhost:9200/?pretty'\nshould give you a response something like this:\n{ \u0026#34;name\u0026#34; : \u0026#34;Cp8oag6\u0026#34;, \u0026#34;cluster_name\u0026#34; : \u0026#34;elasticsearch\u0026#34;, \u0026#34;cluster_uuid\u0026#34; : \u0026#34;AT69_T_DTp-1qgIJlatQqA\u0026#34;, \u0026#34;version\u0026#34; : { \u0026#34;number\u0026#34; : \u0026#34;5.4.3\u0026#34;, \u0026#34;build_hash\u0026#34; : \u0026#34;f27399d\u0026#34;, \u0026#34;build_date\u0026#34; : \u0026#34;2016-03-30T09:51:41.449Z\u0026#34;, \u0026#34;build_snapshot\u0026#34; : false, \u0026#34;lucene_version\u0026#34; : \u0026#34;6.5.0\u0026#34; }, \u0026#34;tagline\u0026#34; : \u0026#34;You Know, for Search\u0026#34; } Install tomcat 7: (https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-7-on-centos-7-via-yum)\n yum install tomcat yum install tomcat-webapps tomcat-admin-webapps systemctl enable tomcat systemctl start tomcat  tomcat service command reference (tomcat should be running at this point):\nStart: systemctl start tomcat\nStop: systemctl stop tomcat\nInstall dir: /usr/share/tomcat/\nTest: curl localhost:8080 | grep 'successfully installed Tomcat'\nshould give you a response something like this:\n% Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 11197 0 11197 0 0 850k 0 --:--:-- --:--:-- --:--:-- 911k \u0026lt;h2\u0026gt;If you\u0026#39;re seeing this, you\u0026#39;ve successfully installed Tomcat. Congratulations!\u0026lt;/h2\u0026gt; Configure Apache proxy: (https://www.digitalocean.com/community/tutorials/how-to-use-apache-as-a-reverse-proxy-with-mod_proxy-on-centos-7)\n Install mod-proxy : already installed\n Install web socket support: already installed nano /etc/httpd/conf.d/default-site.conf  Add:\n\u0026lt;VirtualHost *:80\u0026gt; ProxyPreserveHost On\tRewriteEngine on # Openstorefront reverse proxy ProxyPass \u0026#34;/openstorefront/\u0026#34; \u0026#34;http://localhost:8080/openstorefront/\u0026#34; ProxyPassReverse \u0026#34;/openstorefront/\u0026#34; \u0026#34;http://localhost:8080/openstorefront/\u0026#34; # Openstorefront web socket reverse proxy ProxyPass \u0026#34;/openstorefront/\u0026#34; \u0026#34;ws://localhost:8080/openstorefront/\u0026#34; ProxyPassReverse \u0026#34;/openstorefront/\u0026#34; \u0026#34;ws://localhost:8080/openstorefront/\u0026#34; # changes \u0026lt;hostname\u0026gt;/ to \u0026lt;hostname\u0026gt;/openstorefront/ RedirectMatch ^/$ /openstorefront/ \u0026lt;/VirtualHost\u0026gt; If you have SELinux running (which is installed by default on CentOS) then we need the instructions from here (http://sysadminsjourney.com/content/2010/02/01/apache-modproxy-error-13permission-denied-error-rhel/)  It suggested to disable SELinux unless you know what you doing. It can cause a lot of permission issues. (https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security-enhanced_linux/sect-security-enhanced_linux-enabling_and_disabling_selinux-disabling_selinux)\n/usr/sbin/setsebool -P httpd_can_network_connect 1  systemctl restart httpd  Configure Tomcat: Set memory\n nano /usr/share/tomcat/conf/tomcat.conf Add the following to the existing file JAVA_OPTS=\u0026quot;-Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true -Xmx4g -XX:+UseConcMarkSweepGC\u0026quot;  Update networking\nnano /usr/share/tomcat/conf/server.xml\n# edit: \u0026lt;Connector port=\u0026#34;8080\u0026#34; to  \u0026lt;Connector port=\u0026#34;8080\u0026#34; protocol=\u0026#34;org.apache.coyote.http11.Http11NioProtocol\u0026#34; connectionTimeout=\u0026#34;20000\u0026#34; maxThreads=\u0026#34;250\u0026#34; minSpareThreads=\u0026#34;25\u0026#34; compression=\u0026#34;on\u0026#34; compressableMimeType=\u0026#34;text/html,text/xml,text/plain,application/json,text/css,application/javascript\u0026#34; enableLookups=\u0026#34;false\u0026#34; disableUploadTimeout=\u0026#34;true\u0026#34; acceptCount=\u0026#34;100\u0026#34; redirectPort=\u0026#34;8443\u0026#34; /\u0026gt; systemctl restart tomcat\n  Deploy code  mkdir /var/openstorefront chown -R tomcat:tomcat /var/openstorefront Download storefront webapp from https://github.com/di2e/openstorefront/releases/download/\u0026lt;version tag\u0026gt;/openstorefront.war\nexample: curl -LO https://github.com/di2e/openstorefront/releases/download/v2.3/openstorefront.war\n chown tomcat:tomcat openstorefront.war\n mv openstorefront.war /usr/share/tomcat/webapps\n systemctl restart tomcat\n  3. Optional Features 3.1 Tutorials To enable:\n Add Admin Support Media Role. Re-login to apply. Add Support/Training material using Admin-\u0026gt;Data Management-\u0026gt;Help-\u0026gt;Support Media Edit current branding (copy the current if needed) and check Allow Support Media to show the menu item for Tutorials "
},
{
	"uri": "/user/userguide/",
	"title": "User Guide",
	"tags": [],
	"description": "",
	"content": "The user guide is in the application help system.\nNavigate to the application help system by clicking on your username in the top right corner and selecting either \u0026ldquo;Help\u0026rdquo; or \u0026ldquo;Tutorials\u0026rdquo;, depending on what you need instructions on doing.\n"
},
{
	"uri": "/dev/architecture/",
	"title": "Architecture",
	"tags": [],
	"description": "",
	"content": "This guide describes the high-level design of the server and client architecture.\n1. Client Architecture 1.1 Client Architecture Diagram Figure 1. Client Architecture Diagram\n1.2 Client Details The client core structure is based on Ext.js which provides UI components and utilities. This reduces third-part dependencies significantly which in turn reduce maintenance, learning curve and improves quality and consistency.\nAdded to that is application specific overrides and high-level components created to facilitate re-use. The application is composed by stripes layouts with a top-level page and fragment tool pages.\n2. Server Architecture 2.1 Server Architecture Diagram Figure 2. Server Architecture Diagram\n2.2 Server Details Component definitions are as shown below:\n Security - Authentication and authorization is delegated to OpenAm. This is configured through a custom realm using the Apache Shiro library. All request are passed through this filter. REST API - The REST API is the component that handles the data interaction between the clients and provides the interface with which the clients can communicate. The REST API is broken into two sections: resources and services. Resources handle the CRUD operations on the data. Service handle operation across data sets. This provides a clean and clear API for integrators. API Docs - The API docs are generated live based on the currently running code. This keeps the documents always current and reduces maintenance. Other system related call backs (e.g., retrieving binary resources, login handling, etc.) are handled through the Stripes framework. Business Layer - Handles all rules applied to the data as well transaction support.     Managers - The role of the manager class is to handle the interaction with a resource. This allow for clean initialization and shutdown of resources and provides centralized access.  Services - Each service is in charge of handling a specific group of Entity models. Services provide transaction support and business logic handling. All services are accessed through a service proxy class. The service proxy class provides auto transaction and service interception support. Models - The entity models represent the data in the system and provide the bridge from the application to the underlying storage.\n Import / Export -Provides a mechanism for loading and transferring data from one system to another.    The server build environment relies on the following platforms/tools:\n Java - Core language and platform Maven - Used for the project structure, building and dependency management  2.3 Storage Details File System - Holds configuration, resources, media, imports, reports and plugins. By default under: /var/openstorefront it can be changed by setting the system property -Dapplication.datadir= on the command line.\nSolr or Elasticsearch - Use to do fuzzy index searches across the entries. It\u0026rsquo;s kept in sync by the application.\nDatabase - Holds all entry data and application data.\n3. Runtime Environment 3.1 Runtime Environment Diagram Figure 3 . Runtime Environment diagram\n3.2 Runtime Details The runtime environment relies upon the following applications:\n Proxy Server - This is an external system that proxies requests to the application server. Tomcat 7 - Tomcat is the web container used to host the storefront application. Java 8 - It the runtime platform which runs Tomcat OS/VM - Is the host machines operating system Solr - Enterprise search appliance that runs externally OpenAM - OpenAM runs externally and a policy agent in Tomcat make sure the site is secure.  3.3 Runtime Component Integration Vectors Figure 4. Runtime Component Integration Vectors\n3.4 Component Integration Vectors Details The component integration vectors (CIV) are show below.\nSource Component: openstorefront\nClass: C\nTarget Component: Solr or Elasticsearch\nNotes\nSource Component: openstorefront\nClass: C\nTarget Component: OpenAM\nNotes: OpenAM with their policy agent; requires a hard tie to the application and the application server\nSource Component: openstorefront\nClass: B\nTarget Component: Solr or Elasticsearch\nNotes: JEE Application Server Currently configured to deploy on Tomcat\nSource Component: Orient DB\nClass: B\nTarget Component: openstorefront\nNotes: Embedded\nSource Component: JEE Application Server\nClass: A\nTarget Component: OS/VM\nNotes: Currently targeted for CentOS\nThe CIVs represent an integration activity involving a source, Component A, and a target, Component B.\nThe CIVs, as defined by the DI2E PMO, are as follows:\n Class A: A-deployed On-B. Component B is the underlying environment (providing resources) for A; B does not actively manage A (e.g. OS, VM).\n Class B: A-contained In-B. Component \u0026ldquo;lives in\u0026rdquo; B; B manages the lifecycle of A, from cradle to grave. (e.g. Widget in OWF; EJB in JEE server; OSGi bundle in Karaf; SCA).\n Class C: A-interfaces With-B. Component A initiates communication with B via API(s). (e.g., JDBC, JMS, REST/SOAP call, legacy communications)\n Class D: A-indirectly Consumes-B. Component A has a dependency o.n data/functionality of B even though it doesn\u0026rsquo;t interface with B. (e.g. subscriber/publisher relationship; A integrates with another component that offers data from B).\n  3.5 Ports The applicable ports are shown below:\nPort (Defaults): 8080 Description: Tomcat HTTP Type: Inbound\nPort (Defaults): 8009 Description: Tomcat AJP Type: Inbound (Open if not using 8080)\nPort (Defaults): 2424 Description: OrientDB Type: Internal (Shouldn\u0026rsquo;t be exposed externally)\nPort (Defaults): 2480 Description: OrientDB Type: Internal (Shouldn\u0026rsquo;t be exposed externally)\nPort (Defaults): 8983 Description: Solr (If used) Type: Outbound (Used internally doesn\u0026rsquo;t need to be exposed outside the system)\nPort (Defaults): 9300 Description: Elasticsearch (If used; Binary and the one used by the application) Type: Outbound (Used internally does not need to be exposed outside the system)\nPort (Defaults): 9200 Description: Elasticsearch (If used; JSON) Type: Outbound (Used internally does not need to be exposed outside the system)\nPort (Defaults): 8080 Description: OpenAM running on Tomcat; Setups on this vary so this just represents one case Type: Outbound (External application)\nAll ports are configurable via configuration for the respected applications. Additional ports maybe be used depending on configuration.\n"
},
{
	"uri": "/applicationadmin/customsubmissionforms/",
	"title": "Custom Submission Forms",
	"tags": [],
	"description": "",
	"content": "Custom Submission Forms are used when you want to present a custom look and feel to the user when they submit an entry. You can add a form with many required or optional fields depending on the Entry Type of the submission. This form is then shown to the user when they are presented with the fields for a new entry of that type.\n1. Create a Custom Form to be used --- 1.1 Create Needed Attributes Before a form can be designed, any needed required or custom attributes should be added. To do this:\nNavigate to Admin Tools if you are not already there (click on your username in the upper-right, then Admin Tools) Select Data Management \u0026rarr; Attributes Click +Add New Type and fill out the form as required for all attributes (required and optional) you will need to build your custom entry form in the next step.  You may wish to enter some codes for the attribute by selecting it and then clicking Manage Codes. This is critical for attributes that do not Allow User Created Codes as there is no way to enter those, and will cause problems on required attributes.   1.2 Create/Design The Form Navigate to Admin Tools if you are not already there (click on your username in the upper-right, then Admin Tools) Select Data Management \u0026rarr; Submissions \u0026rarr; Submissions Form Templates Click the + Add Form button. Select an Entry Type. Fill in the Form Name, Description, and Entry Type. Remember that these custom submission forms are tied to a specific entry type(s). If needed, create a new entry type and then navigate back here (Data Management \u0026rarr; Entry Types). Click Create Form.  In the Form Builder Tool Window add sections as needed. Add fields, paragraphs, horizontal rules, images, and so forth.  Note the Mappings tab. The Mappable Fields MUST be on the form as well as the Required Attributes. These sections will have a red x or a green checkmark, depending on if they have been added to the form.  To add a mappable field:  Click the Add a field button at the bottom of the form then Mappable Field OR Attribute.\n Above in the form select the Map To Field: drop-down** OR the Attribute Type: drop down to select the attribute.\n Be sure to check the Required box if the field or attribute is a required one. When you have finished the form and there are no more red checkmarks on the Mappings tab, save the form and close it.   2. Verify the form and activate it When you are finished with the form, from the main Custom Forms page, select the Form and then click on the Verify button. This will prompt you to enter data to verify the validity of the form, that all of the required fields are able to be entered, and so forth.\n On the final page, Review Submission ensure that all of the sections have a green checkmark. When finished click the Verify Submission button.\n  If you have all green checkmarks on the Review Submission page, but still get an error like the one below when Verifying:\n Go back to Admin Tools and Edit the form Go to the Mappings tab Ensure that the Mappable Fields AND the Required Attributes sub-tabs are green- they have all been accounted for on the form.    When the form is in the status of Verified, be sure to select it, then click Toggle Active Status so that \u0026quot;A\u0026quot; appears in the Active Status Column.\n If you get a message indicating that a custom form is already active for that entry type, deactivate (Toggle Active Status) the other custom form then activate yours that was just created. An entry type cannot have more than one active custom form at any given time.\n  \n3. Entry and Approval using the Custom Form Click on your username in the upper-right then **User Tools \u0026rarr; Submissions \u0026rarr; + New Submission **\n From the Select Entry Type Form box select the Entry Type that you created your custom form for.\n Click + Create and then enter a unique initial submission name and click Ok.\n The submission form loads with your customization attributes and fields as designed prior. Answer the required questions/fields and confirm on the Review Submission section that the entry has no red \u0026quot;x\u0026quot; marks, but only green checkmarks.\n Click Submit for Approval\n Navigate to Admin Tools \u0026rarr; Data Management \u0026rarr; Entries Sort by Last Activity Date descending to see the entry just entered at the top of the list. Select the entry.\n Click on Approve.\n As a final check, go to the home page and Search for the new entry to ensure it is indexed and searchable.\n  \n"
},
{
	"uri": "/evaluations/librarian/",
	"title": "Librarian",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/user/quick-overview-of-submitting-a-new-component/",
	"title": "Submitting a New Component",
	"tags": [],
	"description": "",
	"content": "This article briefly explains how to submit an entry onto SPOON\nTo get to the User Tools section, click on your user name in the upper right corner of the page and then select User Tools from the drop down menu. Once at the User Tools sections, click on the Submissions button and then click the New Submission button.\nThe process for submission depends on the type of entry you want to submit and how admin has configured your environment. The application will provide a form which will guide you through the process.\nCommon Terms Entry - is a listing in the database\nAttributes - are searchable metadata field the help define/discover the entry\n"
},
{
	"uri": "/applicationadmin/workplans/",
	"title": "Workplans",
	"tags": [],
	"description": "",
	"content": "This guide reviews how to create and manage a workplan.\n1. Create a new Workplan 1.1 Create the Workplan  Navigate to Admin Tools if you are not already there (click on your username in the upper-right, then Admin Tools) Select Data Management \u0026rarr; Workplan Management Click +Add Workplan  First fill in the Workplan Config Section  Workplan Name: Unique Workplan name Workplan Admin Role: Choose the user group that will have access to entries in this workplan Workplan For: Entry Entry Type: Choose the entry type that this workplan will apply to   1.2 Define Workplan Steps It is a good idea to define the steps to be taken with each entry before creating the actual steps.\n Click Create Step  Step Configuration:\n Step name: Unique step name Short Description: A description of the step. Keep it brief, but be sure to include enough information for the person responsible for the step Approval State to Match: This will be the status of a entry while it is in this step Active On: The state that an entry is currently in when it is assigned to that step Role Access: What role group will be able to view this entry in their Workplan Progress page  Step Actions: Step Actions are events that will occur when a step becomes active\n  2. Workplan Progress For Admins and SMEs Each step of a workplan will be assigned to a certain group. That group will see the entries that are assigned to them when they access the Workplan Progress page (Data Management \u0026rarr; Workplan Progress). Each group will complete the task assigned to them. Once completed it will move to the next group.\nThe comments feature has two uses. First to enable communication between reviewers, SMEs, and admins. To do this when viewing a submission and commenting, keep the Private box checked. The second use is to communicate with the submission owner.\nThe Assign box has a number of operations used to assign a submission to an admin, unassign or assign it to yourself, or reassign it to another user.\n3. For Submission Owners Submission owners will get notifications of comments on their submissions. Owners are expected to update material as recommended by SMEs and reviewers.\n"
},
{
	"uri": "/systemadmin/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": " The SPOON application contains a Dockerfile in order to build Docker images. There are two dockerfiles in the repo. One is for development which is used by Jenkins to deploy the application for testing of new features. The other dockerfile is for the release build. These can be found in the repo at https://github.com/spoonsite/spoon/tree/master/Docker.\nSPOON also automatically builds release versions of the application for consumption by users. These builds are available on Docker Hub.\nRelease Docker Container To run the latest release container from Docker Hub run the following:\ndocker run -p 9050:8080 openstorefront/openstorefront To run a specific version of the application run:\ndocker run -p 9050:8080 openstorefront/openstorefront:release-2.7.3 For available tags for the Docker container please see https://hub.docker.com/r/openstorefront/openstorefront/tags/\nThe only thing required to build the release docker container is the dockerfile found at openstorefront/Docker/release.\nDevelopment Docker Container To build the container you will need:\n a zip of an openstorefront database the startup.sh the tomcat-users.xml  The startup.sh and tomcat-users.xml can be found at https://github.com/di2e/openstorefront/tree/master/Docker/develop. To obtain the database take the database folder from a previous running instance of Storefront and zip the folder. Place all three items in the same directory as the dockerfile when building the image. To build the image run:\ndocker build -t some-tag . To run the container you will need:\n a war file to mount to the container  Run the container as a detached process with:\ndocker run -d \\ -v $(pwd)/openstorefront.war:/usr/local/tomcat/webapps/openstorefront.war \\ -p 8081:8080 \\ openstorefront Since there is already a dataset built into the container, in order to run the application on an empty database point the database location to a different location with:\ndocker run -d \\ -v $(pwd)/openstorefront.war:/usr/local/tomcat/webapps/openstorefront.war \\ -p 8081:8080 \\ --env CATALINA_OPTS=\u0026#34;-Xmx2048m -Dapplication.datadir=/var/selenium\u0026#34; \\ openstorefront"
},
{
	"uri": "/dev/front-end-code-standard/",
	"title": "Front-end Code Standards",
	"tags": [],
	"description": "",
	"content": "These are the agreed-upon standards for this project.\nStyle Currently supporting IE 11, EDGE, Chrome, Firefox (latest LTS release)\nSafari, Opera or others (should work but, we are not testing for them)\nProject Specific  Use the Ext.js docs. Look at them first for utility functions as they are normalize for the browser. (format, string manipulation, etc\u0026hellip;).\n When making reusable components don\u0026rsquo;t use \u0026ldquo;ID\u0026rdquo;s properties. Ids are OK on individual pages; must be unique; \u0026ldquo;ID\u0026rdquo; properties are Global.\n Match validation from server, where possible, to make it easier for the user to get the right values. Also, provide friendly but, direct messages. Pack related components (notification panel, notification) into a single script file. To reduced loading. Avoid deeply nested components definitions as it easier to read fewer layers. Avoid ES 6 features until browsers support is consistent. (mainly IE 11) { should be on the end of the line as browser may put in ; at the end of the line.  IE 11 - Tips Add tips as needed.\nNote: There are some style differences but, most of those are fine.\nOLD IE 9 Window sizes: need height defined (minHeight, height) percent height will work only with maximizable on.\nStore Dates: date capture in a store need to be set to type: \u0026lsquo;date\u0026rsquo; with a format of \u0026lsquo;c\u0026rsquo;\nDon\u0026rsquo;t use custom UI buttons\nWatch CSS\n"
},
{
	"uri": "/user/unitlegend/",
	"title": "Unit Legend",
	"tags": [],
	"description": "",
	"content": "This is the legend for commonly confused unit names and acronyms.\n   Symbol Base unit Description     '$' US Dollar 1 US dollar   'G' Gauss 1 Gauss   'GB' Byte $10^9$ bytes (Gigabyte)   'Gb' Bit $10^9$ bits (Gigabit)   'Gbps' Bit Per Second $10^9 \\frac{\\text{bits}}{\\text{sec}}$   'Grav' Newtonian constant of gravitation    'MB' Byte $10^6$ bytes (Megabyte)   'MIPS' Million of Instructions Per Second $10^6$ $\\frac{\\text{instruction}}{\\text{second}}$   'Mb' Bit $10^6$ bits (Megabit)   'Mbps' Bit Per Second $10^6 \\frac{\\text{bits}}{\\text{sec}}$   'PB' Byte $10^{15}$ bytes (Petabyte)   'Pb' Bit $10^{15}$ bits (Petabit)   'TB' Byte $10^{12}$ bytes (Terabyte)   'Tb' Bit $10^{12}$ bits (Terabit)   'arcsec' Degree $\\frac{1}{3600}$ degree   'arcsmin' Degree $\\frac{1}{60}$ degree   'bps' Bit Per Second 1 $\\frac{\\text{bit}}{\\text{sec}}$   'dBW' Decibel Watt 1 decibel Watt   'dBm' Decibel Watt $10^{-6}$ decibel Watt (Decibel milli-Watt)   'dbC' Decibel 1 Decibel   'dbc' Decibel 1 Decibel   'dbd' Decibel 1 Decibel   'dbi' Decibel 1 Decibel   'deg' or '°' Degree 1 degree   'g' Gram 1 gram   'grms' or 'Grms' Root-Mean-Square Acceleration    'hr' or 'hour' Hour 1 hour   'inch' inch 1 inch   'kB' or 'KB' Byte $10^3$ bytes (Kilobyte)   'kb' or 'Kb' Bit $10^3$ bits (Kilobit)   'kbps' Bit Per Second $10^3 \\frac{\\text{bits}}{\\text{sec}}$   'mG' Gauss $10^{-6}$ Gauss (microGauss)   'mGrav' Grav $10^{-6}$ Grav (microGrav)   'micron' or 'μm' Meter $10^{-6}$ meter (micrometer)   'psi' Pounds Per Square Inch 1 $\\frac{\\text{lbs}}{\\text{in}^2}$   'rpm' or 'RPM' Revolution Per Minute 1 $\\frac{\\text{revolution}}{\\text{Minute}}$   'μN' Newton $10^{-6}$ Newton (microNewton)   'μm' Gram $10^{-6}$ gram (Microgram)   'μs' Second $10^{-6}$ second (Microsecond)    JScience Semantics When attempting to use a superscript fraction as an attribute (ex. 'deg/(hr^(1/2))'), it will not be able to parse that. In order to get it to parse you must use a colon (ex. 'deg/(hr^1:2)'). This will result in it parsing correctly and it will render as $deg/(hr^{1/2})$.\n"
},
{
	"uri": "/systemadmin/administratorguide/",
	"title": "Administrator Guide",
	"tags": [],
	"description": "",
	"content": "This article gives further instructions on setting up and configuring the web application.\n1. Other Guides This guide has been organized into separate documents to make it easier to navigate. The focus of this document is for configuration. See other guides for other topics.\nArchitecture\nSetup\nDeveloper Guide\n2. Configuration 2.1 Security 2.1.1 Supported Realms Configure in /var/openstorefront/config/shiro.ini\n INI (Properties File; Default)\nUsers are specified in the users section.\n LDAP (Example)\n  [main] ldapRealm = org.apache.shiro.realm.ldap.JndiLdapRealm ldapRealm.userDnTemplate = uid={0},ou=users,dc=mycompany,dc=com ldapRealm.contextFactory.url = ldap://ldapHost:389 ldapRealm.contextFactory.authenticationMechanism = DIGEST-MD5 ldapRealm.contextFactory.environment[some.obscure.jndi.key] = some value 2.1.1.1 Database See Configure JDBC Realm for how to configure JDBCRealm to obtain its DataSource from JNDI.\n[main] dataSource = org.apache.shiro.jndi.JndiObjectFactory dataSource.resourceName = java://app/jdbc/myDataSource jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm jdbcRealm.permissionsLookupEnabled = true jdbcRealm.dataSource = $dataSource # you can customize the authenticationQuery, userRolesQuery and permissionsQuery, if needed. securityManager.realms = $realm 2.1.1.2 OPENAM (Request Header) [main] #Also, remember to comment out the users and roles to remove the INIRealm headerRealm = edu.usu.sdl.openstorefront.security.HeaderRealm securityManager.realms = $headerRealm 2.1.1.3 Integration with OpenAM Configure in: /var/openstorefront/config/openstorefront.properties\n( Property -description ( Default ))\n openam.url -http:/\u0026hellip;/openam (Full URL to open am instance)\n logout.url - http:/\u0026hellip;/openam/UI/Logout (Full URL to logout)\n openam.header.username - HTTP Header for Username ( sAMAccountName )\n openam.header.firstname - HTTP Header for Firstname ( givenname )\n openam.header.lastname - HTTP Header for Lastname ( sn )\n openam.header.email - HTTP Header for email ( mail )\n openam.header.group - HTTP Header for group ( memberOf )\n openam.header.ldapguid - HTTP Header for ldapguid ( memberid )\n openam.header.organization - HTTP Header for organization\n openam.header.admingroupname - HTTP Header for Admin Group Name *Handles multiple values ( STORE-Admin )\n  Also, need to adjust the open am agent filter\nChange:\n\u0026lt;filter-mapping\u0026gt; \u0026lt;filter-name\u0026gt;Agent\u0026lt;/filter-name\u0026gt; \u0026lt;url-pattern\u0026gt;/*\u0026lt;/url-pattern\u0026gt; \u0026lt;dispatcher\u0026gt;REQUEST\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;INCLUDE\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;FORWARD\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;ERROR\u0026lt;/dispatcher\u0026gt; \u0026lt;/filter-mapping\u0026gt; To\n\u0026lt;filter-mapping\u0026gt; \u0026lt;filter-name\u0026gt;Agent\u0026lt;/filter-name\u0026gt; \u0026lt;url-pattern\u0026gt;/*\u0026lt;/url-pattern\u0026gt; \u0026lt;dispatcher\u0026gt;REQUEST\u0026lt;/dispatcher\u0026gt; \u0026lt;dispatcher\u0026gt;ERROR\u0026lt;/dispatcher\u0026gt; \u0026lt;/filter-mapping\u0026gt; 2.1.2 User Types The user types are:\nAre defined as based on the roles they belong to.\nIf using the built-in security then the system will create default roles for default users, admins and evaluators. It will create a default admin user: (admin / Secret1@)\nYou should change the admin password after login in.\n Pre-defined groups:\nDefault - Allows Searching, tagging, watching, and submitting entries\nGuest -Permissions for guest user. (Only applies if security is setup for that)\nAdmin - All administration permissions. There maybe some optional features that the admin doesn\u0026rsquo;t by default have permission.\nLibrarian -Data management permissions.\nEvaluators - Allows user to edit unpublished evaluations\nAn admin can define new groups as needed.\nAll users are part of the Default group.\n 2.2 Integration External LDAP (User Syncing) When a user is not located in the external management system then the user profile in the application will be deactivated.\nThe Security Policy in the application now allows for disabling user information editing. (Optional) This allow the external LDAP/Active Directory to be sole source of user information. Information will be synced at login and periodically according to teh user sync job.\nWarning: This will not prevent login! Upon login the user profile will be reactivated. To prevent login, refer to the external user management system that the application is connected to and inactive the user from there.\nConfigure in: /var/openstorefront/config/openstorefront.properties\n( Property -description ( Default ))\nAlso need to set the following properties to activate the feature: - external.sync.activate - Set to true to activate - external.usermanager - LdapUserManager\n ldapmanager.url -Full URL to the LDAP (ldap://ldapHost:389 or ldap://localhost:389/o=JNDITutorial)\n ldapmanager.userDnTemplate - uid={0},ou=users,dc=mycompany,dc=com; Reserved, not currently used\n ldapmanager.authenticationMechanism - NONE, SIMPLE, DIGEST-MD5, etc. ( SIMPLE ) ldapmanager.security.sasl.realm - May be needed for SASL authentication\n ldapmanager.binddn - The LDAP user to use in the connection (Full DN name)\n ldapmanager.credentials - The LDAP credentials\n ldapmanager.contextRoot - Root to directory to search\n ldapmanager.attribute.username - Attribute to map to username ( sAMAccountName ) ldapmanager.attribute.email - Attribute to map to email ( mail ) ldapmanager.attribute.fullname - Attribute to map to fullname ( name ) ldapmanager.attribute.organization - Attribute to map to organization ( company ) ldapmanager.attribute.guid - Attribute to map to guid ( objectGUID )  2.3 Jira Integration Configure in: /var/openstorefront/config/openstorefront.properties\n( Property -description ( Default ))\n tools.login.user - Login Credentials for Integrations (currently just for jira)\n tools.login.pw - Login Credentials for Integrations (currently just for jira)\n jra.connectionpool.size - Resource pool size ( 20 ) jira.connection.wait.seconds - Wait time if the pool is empty ( 60 ) jira.server.url - Jira server to connect to ( https://jira.di2e.net )  2.4 Confluence Integration Configure in: /var/openstorefront/config/openstorefront.properties\n( Property -description ( Default ))\n confluence.server.url -URL to confluence  2.5 Mail Server Configure in: /var/openstorefront/config/openstorefront.properties\n( Property -description ( Default ))\n mail.attach.file - Set to true or false indicating if emails should contain attached files mail.smtp.url - Login Credentials for Integrations (currently just for jira) ( localhost ) mail.server.user - Login Credentials for mail server\n mail.server.pw - Login Credentials for mail server\n mail.smtp.port - Mail Port (25 common)\n mail.use.ssl - Set to true if server requires it\n mail.use.tls - Set to true if server requires it\n mail.from.name - From Name ( Storefront Notification ) mail.from.address - From Email Address ( donotreply@storefront.net ) mail.reply.name - Reply name (usually display at the bottom the message) ( Support ) mail.reply.address - Reply email (usually display at the bottom the message) ( helpdesk@di2e.net ) test.email - Set for automated testing only; the email to use for testing  2.6 Other Application Properties Configure in: /var/openstorefront/config/openstorefront.properties\n( Property -description ( Default ))\n errorticket.max - Max amount of ticket to hold (culls the oldest records upon filling) ( 5000 ) trackingrecords.max.age.days - Max age of tracking records ( 365 ) solr.server.url - URL to the SOLR instance to use. ; it should point to the appropriate collection. ( http://localhost:8983/solr/esa ) db.connectionpool.min - DB min pool size ( 5 ) db.connectionpool.max - DB max pool size ( 40 ) db.user - Should match orientdb-server-config.xml\n db.pw - Should match orientdb-server-config.xml external.host.url - Should point to the external host url (Eg. https:///openstorefront) this is used in emails/external communication ( http://localhost:8080/openstorefront )\n job.working.state.override.minutes - Max job running time. Use for Integrations. To determine if a job got stuck. ( 30 ) message.archive.days - User message max age of archives ( 30 ) message.queue.minmintues - User message queue time or the time the message waits before sending. ( 10 ) message.maxretires - Max times the user message will try to send if unable to deliver. ( 5 ) message.recentchanges.days - Time between \u0026ldquo;recent changes\u0026rdquo; messages from being sent. ( 28 ) app.title - Title of the application. Used in emails but, also other places. ( DI2E Storefront ) external.usermanager - Specifies the manager that is used for external user management. The manager must be supported by the application. ( IniRealmManager or LdapUserManager) ( IniRealmManager ) external.sync.activate - Set to \u0026lsquo;true\u0026rsquo; to run the sync (False) dblog.on - Activates logging records to the database; Note: All log record are still logged in the server logs regardless of setting this. This just controls the database logging. ( false ) dblog.maxrecords - Maximum database records to store ( 50000 ) dblog.logSecurityFilter - Log security API audit records; Note: setting this to true can cause noise when using the application log viewer. ( False ) jirafeedback.show - Allows users to provide jira feedback (True/False) ( True ) filehistory.max.days - Sets the max days to keep file history ( 180 ) notification.max.days - Set the max days to keep notification messages ( 7 ) report.lifetime - Set the lifetime of a report (how long will this report be in the system?) ( 180 ) feedback.email - Email address to send feedback to ui.idletimeout.minutes - Set to a value \u0026gt; 1 to have the UI popup a idle warning about their session (Default is the application tries to keep the session alive.) ui.idlegraceperiod.minutes -Set this to configure the grace period for the idle timeout. After the message appears. system.archive.maxprocessminutes -Max time for system archive process without making progress (60) websockets.enabled - Enables the use of websockets for server notifications ( False ) userreview.autoapprove - Allows user reviews, questions, and answers submitted by users to be automatically approved, otherwise an administrator must approve each update. (True) role.admin -Set this before strarting the application the first time to set the name of the Admin Role test.email -Set to run container tests that require email system.archive.maxprocessminutes -Set the max time for running archive process; this used to clean up stuck working archives ( 60 ) max.post.size - Set to configure the maximum file size for files being saved to the system (in MB) ( 1000 ) elastic.connectionpool.size - Set the connection pool size ( 30) elastic.connection.wait.seconds - Max time to wait for an open connection. ( 60)  3. Database Management The application handles all database interaction transparently, so direct database access and manipulation is not needed.\nSee the following for information on outside control (should rarely be needed/used).\n3.1 Refreshing the Database This will wipe out all data in the application. Data, such as User profiles, cannot be recovered. Component user data can be preserved by performing an export from the component admin tool.\n Make a backup by copying all of the files in the /var/openstorefront/db directory or use the following console tools steps:\n Stop the Tomcat server (e.g. service tomcat stop)\n Remove the folder /var/openstorefront/db (rm -rf /var/openstorefront/db)\n Start the tomcat server\n  When the application loads it will create a new database and populate the data from whatever is currently in the import folders (lookups only; attributes, component, articles will need to be manually trigger or uploaded via the Admin Tools UI).\nThe initial load of the application may take a few minutes. If the import directories are empty, the application will load default lookup files that are packaged with the application.\n3.2 Installing Database Console Viewing (Querying) information is fine; however, use extreme caution when modifying any records as all logic is handled by the application.\nAlso, note longterm uses on external tools and access may have STIG consequences. For full audit log support Orient Enterprise edition is needed. External server would need to be set. The application does not currently have support for that but, it could added.\n  Download Orient DB (Currently using the 2.2.x series) at OrientDB.org\n Extract the archive\n Run the console ./bin/console.sh\n Connect to the DB:\n  connect remote: localhost/openstorefront (user) (password) (see the /var/openstorefront/config/openstorefront.properties for connection information)\nThe database supports an SQL like interface and then adds other functionality on top.\n See Orient DB Backup for information about backup\n See Orient DB Export/Import for export and imports.\n  3.3 Installing Database Studio Orient DB includes a web application for viewing the database visually, instead of viewing everything from the console. Once installed, Orient DB Studio will run with the database itself once OpenStoreFront is running, and will not require anything to be run locally\n Viewing (Querying) information is fine; however, use extreme caution when modifying any records as all logic is handled by the application.\n  Download Orient DB (Currently using the 2.2.x series) at OrientDB.org\n If you already downloaded Orient DB in section 3.2 above, you may simply reuse that download.  Extract the archive\n Locate the Studio plugin: ./plugins/studio-2.1.zip\n Copy plugin to OpenStoreFront database on server: /var/openstorefront/db/plugins\n Copy entire .zip file; do not extract.  Start or Restart OpenStoreFront\n Plugin will automatically be installed when the database service is initialized.  Access Orient DB Studio: http://localhost:2480/studio/index.html\n Change \u0026lsquo;localhost\u0026rsquo; to the appropriate domain name or IP address if OpenStoreFront is not running locally Ensure \u0026lsquo;openstorefront\u0026rsquo; is selected as the database in the dropdown. Login using the credentials located in the configuration file: /var/openstorefront/config/openstorefront.properties   The database supports an SQL like interface and then adds other functionality on top.\n See Orient DB Studio for more information about Studio "
},
{
	"uri": "/systemadmin/datamigrationguide/",
	"title": "Data Migration Guide",
	"tags": [],
	"description": "",
	"content": "This guide provide help for importing data from external sources as well as moving data from one instance to another instance.\n1. Importing/Export (Third parties) The application provides set of standard format that it accepts to import Attributes/Categories as well as Entries. It also provides a set of custom formats that can have mappings applied. These custom formats allow taking a variety of data with so simple handling.\nSee Admin Tools -\u0026gt; Data Management -\u0026gt; Imports\n1.1 Custom Mapping * An admin can create field mapping from a file field to a field in application. Some pre-defined transformation can be applied such as lowercasing the field.\nIn some cases, field mapping is insufficient to import a source. A plugin can be created to provide more handling control (see Developer Guide)\n*This feature is in beta\n2. System Archives (System to System / restore) See Admin Tools -\u0026gt; Application Management -\u0026gt; System Archives\nSystem archive are meant for storefront application to storefront application data migration or for saving and restoring data. The application will package all of the different data parts needed to fully reconstruct the data.\nThe application supports several different archive types:\nDB Export - This just export database (no media or local resources). This exports the whole database.\nOn import note the application will be unavailable until import completes.\n Full Export - This packages a database export with all file (*expect system archives to avoid excessive disk space requirements) Also see \u0026ldquo;Post Cleanup Considerations\u0026rdquo; in section 3.\nOn import note the application will be unavailable until import completes.\n General Export - This export allow for selective exporting. Keep in mind it will export related data as needed to complete the export.\n3. Full System / Manual Migration (System Admin) Note: This will copy everything: Database, local resources, and configuration\n Stop the application (Generally done by stopping tomcat) Copy /var/openstorefront directory and all sub-directories. (*location of directory may be different depending on configuration)  Post Cleanup Considerations:\n User profiles should be in-activated to avoid sending notifications to users. If using built in security then users may need to be in-activated or removed to prevent access. Alerts should be look at to make sure they still valid for the new setup. Scheduled report should be turn off or looked at to see if they are valid. Check branding and system configuration to make sure things are valid for the new instance.  4. Scenarios In all cases, please be mindful of the disk space requirements. All archive will need to be build on the originating system.\nScenario 1 External data that I need loading into the application.\nSolution:\nUse the Admin Tools -\u0026gt; Data Management -\u0026gt; Imports and depending on originating file form create custom mapping or a plugin to match up the data.\nScenario 2 Export entries to use in another application.\nSolution:\nExport the entry via the Admin Tools -\u0026gt; Data Management -\u0026gt; Entries.\nSelect entries and export.\nThis export will NOT export evaluations associated with the entry; only the entry. If evaluations are needed then use the System Export General Export to get all information.\n Scenario 3: Export entries in another format for use in another application.\nSolution:\nExport the entry via the Admin Tools -\u0026gt; Data Management -\u0026gt; Entries.\nSelect entries and select different supported format.\nNote if a export format is not support. Request development for a the new format. Please provide specs, if available, for the format.\nScenario 4 I need to move entries and evaluation to another storefront application.\nSolution:\nUse the System Archive: General to select entries to export then import on desired system.\ncompatibility is only tests for same version of the application. IE. export from 2.5 to import 2.5. Imports from other version may or may not work. Contact developer/support for help.\n Scenario 5 I need a full backup.\nSolution:\nUse System Archive - Full Backup or Full System / Manual Migration\nMake sure the system has enough space to run this. Require about the same space free as it\u0026rsquo;s currently using.\n Scenario 6 I want a copy of all entries.\nSolution:\nUse System Archive - General Export with all entries selected.\n"
},
{
	"uri": "/dev/uiguide/",
	"title": "User Interface Guide",
	"tags": [],
	"description": "",
	"content": "These are general guidelines on what the look of SPOON should be.\nGeneral Items  Remember this is a guide there can be variations as appropriate to the feature. Focus on the usability and having a clear workflow. Dialog bodies should be padded 10px Use toolbars for actions and enable/disable buttons to guide the user to valid actions. Add text to icons on button so it\u0026rsquo;s very clear as to what they are. (Where possible) Form action should be left to right with the Action on right and the anti-action on the left. English is left to right. Action should be common choice and the anti-action the uncommon. Most windows should be resizeable so they should adjust their layout accordingly. Make sure window adjust to smaller screen sizes. Use the percentages where appropriate. Client should handle data rendering in most cases. CSS should all be kept in the dynamic CSS file for branding. However, page/feature specific styling can be appropriate especially if it\u0026rsquo;s layout related specific to the page. Use the appropriate font-awesome icons for the action. See other pages.  Buttons and Icons This section is a guide to the naming convention of buttons, icons used with the buttons, and the colors associated with those icons. Each button belongs to a category based on action and CSS properties. Icons used in this application come from Font Awesome 4.7.0.\nCategory 1: Warning Note: All icons in this category have the CSS class icon-button-color-warning.\n Delete Button\n Icon: trash can (class = \u0026ldquo;fa fa-trash\u0026rdquo;).\n  Close Button\n Icon: times symbol (class = \u0026ldquo;fa fa-close\u0026rdquo;).  Cancel Button\n Icon: \u0026lsquo;X\u0026rsquo; (class = \u0026ldquo;fa fa-close\u0026rdquo;).\n  Clear or Clear All Button\n Icon: trash can (class = \u0026ldquo;fa fa-trash\u0026rdquo;).  Uninstall\n Icon: trash can (class = \u0026ldquo;fa fa-trash\u0026rdquo;).  Flush Cache\n Icon: trash can (class = \u0026ldquo;fa fa-trash\u0026rdquo;).\n  Rollback\n Returns the database to its previous state. Icon: \u0026lsquo;X\u0026rsquo; (class = \u0026ldquo;fa fa-close\u0026rdquo;).    Category 2: Save Note: All icons in this category have the CSS class icon-button-color-save.\n Add Button\n Icon: plus symbol (class = \u0026ldquo;fa fa-plus\u0026rdquo;)\n  Create Button\n Icon: plus symbol (class = \u0026ldquo;fa fa-plus\u0026rdquo;)\n  Save Button\n Icon: floppy disk (class = \u0026ldquo;fa fa-save\u0026rdquo;)\n  Apply Button\n Icon: check mark (class = \u0026ldquo;fa fa-check\u0026rdquo;)\n  Approve Button\n Icon: box with check mark (class = \u0026ldquo;fa fa-check-square-o\u0026rdquo;)\n  Comment/Post Button\n Icon: speech bubble (class = \u0026ldquo;fa fa-comment\u0026rdquo;)  Publish\n Icon: book (class = \u0026ldquo;fa fa-book\u0026rdquo;)\n  Mark Complete\n Icon: box with check mark (class = \u0026ldquo;fa fa-check-square-o\u0026rdquo;)\n   Category 3: Refresh Note: All icons in this category have the CSS class icon-button-color-refresh.\n Refresh Button\n Icon: cycle symbol (class = \u0026ldquo;fa fa-refresh\u0026rdquo;)\n  Restart Button\n Icon: redo arrow (class = \u0026ldquo;fa fa-repeat\u0026rdquo;)\n  Reprocess Button\n Icon: undo arrow (class = \u0026ldquo;fa fa-undo\u0026rdquo;)\n   Category 4: View Note: All icons in this category have the CSS class icon-button-color-view.\n View/Preview Button\n Icon: eye (class = \u0026ldquo;fa fa-eye\u0026rdquo;)\n   Category 5: Edit Note: All icons in this category have the CSS class icon-button-color-edit.\n Edit Button\n Icon: pencil in square (class = \u0026ldquo;fa fa-edit\u0026rdquo;)   Category 6: Run Note: All icons in this category have the CSS class icon-button-color-run.\n Run Button\n Icon: lightning bolt (class = \u0026ldquo;fa fa-bolt\u0026rdquo;)\n  Start Button\n Icon: play (class = \u0026ldquo;fa fa-play-circle\u0026rdquo;)  Process Messages\n Icon: lightning bolt (class = \u0026ldquo;fa fa-bolt\u0026rdquo;)\n   Category 7: Default Note: All icons in this category have the CSS class icon-button-color-default.\n Toggle Status Button\n Icon: power off/on (class = \u0026ldquo;fa fa-power-off\u0026rdquo;)  Download Button\n Icon: download/import (class = \u0026ldquo;fa fa-download\u0026rdquo;)\n  Upload Button\n Icon: upload/export (class = \u0026ldquo;fa fa-upload\u0026rdquo;)\n  Export Button\n Icon: download/import (class = \u0026ldquo;fa fa-download\u0026rdquo;)  Import Button\n Icon: upload/export (class = \u0026ldquo;fa fa-upload\u0026rdquo;)\n  Stop Button\n Icon: square in circle (class = \u0026ldquo;fa fa-stop-circle\u0026rdquo;)\n  Previous/Next Buttons\n Icon: left/right arrows (class = \u0026ldquo;fa fa-arrow-right\u0026rdquo;, class = \u0026ldquo;fa fa-arrow-left\u0026rdquo;)  Home Button\n Icon: home (class = \u0026ldquo;fa fa-home\u0026rdquo;)\n  Cleanup\n Icon: eraser (class = \u0026ldquo;fa fa-eraser\u0026rdquo;)\n  Copy\n Icon: two copies (class = \u0026ldquo;fa fa-clone\u0026rdquo;)\n  Merge\n Icon: two arrows merging (class = \u0026ldquo;fa fa-compress\u0026rdquo;)\n  References\n Icon: chain links (class = \u0026ldquo;fa fa-link\u0026rdquo;)   Icon Sizes  For large buttons, icons are given Font Awesome size of\u0026nbsp; fa-2x.\n For all other buttons, icons are given Font Awesome size of\u0026nbsp; fa-lg.\n  Available Icon Alignments Available alignment corrections for Font Awesome icons of size fa-2x:\n icon-vertical-correction\n Shifts icon up 5 pixels.  icon-vertical-correction-send\n Shifts icon left 10 pixels and up 3 pixels.  icon-vertical-correction-view\n Shifts icon left 5 pixels and up 2 pixels.  icon-vertical-correction-edit\n Shifts icon left 4 pixels and up 1 pixel.  icon-horizontal-correction\n Shifts icon left 3 pixels.  icon-vertical-correction-search-tools\n Shifts icon left 4 pixels and up 6 pixels.   Available alignment corrections for Font Awesome icons of size fa-lg:\n icon-small-vertical-correction\n Shifts icon down 5 pixels.  icon-small-vertical-correction-media-table\n Shifts icon down 2 pixels.  icon-small-vertical-correction-book\n Shifts icon down 3 pixels.  icon-small-horizontal-correction-left\n Shifts icon left 8 pixels.  icon-small-horizontal-correction-right\n Shifts icon right 5 pixels.  icon-vertical-correction-eraser\n Shifts icon left 5 pixels and up 2 pixels.   Available alignment corrections for text/icon spacing for windows:\n shift-window-text-right\n Shifts text to the right 8 pixels.\n  "
},
{
	"uri": "/systemadmin/versionmigrationguide/",
	"title": "Version Migration",
	"tags": [],
	"description": "",
	"content": "This guide details changes and upgrades that have happened from version to version.\nIn general, you should always upgrade one version at a time in order. (IE. going from 2.2 to 2.4 then 2.2 to 2.3 then to 2.4) That way data migrations will occur in the proper order. If you start from the lastest version and have no data then migration is not needed.\nNote: 2.6.3 For existing applications:\n(Update var/openstorefront/config/shiro.ini)\nAdd:\n/login/** = anon  /mobile/** = authc  /api/v1/resource/branding/current = anon  /api/v1/resource/securitypolicy = anon  /api/v1/resource/faq/* = anon  /api/v1/resource/faq = anon  /api/v1/resource/feedbacktickets = anon  Note: 2.6 Some feature such as custom submission require new permission (See Admin -\u0026gt; Security Roles to add new permissions)\nNote: 2.4.3 This includes the database upgrade. Note: rollback to pervious storefront version will require restore from a backup proir to 2.4.3 for existing data to work for that version.\n2.4.2 Must be deployed before 2.4.3 if you have existing data.\nNote: 2.4.2 Includes a database export and import in preparation for 2.4.3 upgrade of DB. If you have an existing database install 2.4.2 before 2.4.3.\n Shutdown app server Backup /var/openstorefront/db directory install/deploy 2.4.2 Start app server  You need to wait for 5-20 minutes (Depending on size of DB) for the update to occur. At this time the application will be unavailable.\nTo manually export/import:\n install orient 2.1.25 to system to use console tool a.) Shutdown app server  From Orient\n$ cd bin $ ./console.sh (or bin/console.bat under Windows) orientdb\u0026gt; CONNECT plocal:/var/openstorefront/db/openstorefront \u0026lt;DBuser\u0026gt; \u0026lt;db password orientdb\u0026gt; EXPORT DATABASE /temp/mydb.json.gz orientdb\u0026gt; DISCONNECT orientdb\u0026gt; CREATE DATABASE plocal:/var/openstorefront/db/openstorefront only do this if you have move the old one out of the way) orientdb\u0026gt; IMPORT DATABASE /temp/mydb.json.gz Upgrading from 2.4 to 2.5 Pre-Deployment\nElastic Search\nChange the value of elastic.server.port in /var/openstorefront/config/openstorefront.properties from 9300 to 9200\nWindows (manually)\n Install and extract Elasticsearch 5.6.3 on the system Remove/delete the root directory of Elasticsearch 2.x from the system Start Elasticsearch 5.6.3 (by running the elasticsearch-5.6.3/elasticsearch-5.6.3/elasticsearch.bat file)  CentOS using Yum\nDocumentation on installation: https://www.elastic.co/guide/en/elasticsearch/reference/5.6/rpm.html\n Download and install the public signing key  $ rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch Add the following in your /etc/yum.repos.d/ directory in a file with a .repo suffix, for example /etc/yum.repos.d/elasticsearch.repo  [elasticsearch-6.x] name=Elasticsearch repository for 6.x packages baseurl=https://artifacts.elastic.co/packages/6.x/yum gpgcheck=1 gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch enabled=1 autorefresh=1 type=rpm-md Install Elasticsearch  $ sudo yum install elasticsearch Run Elasticsearch (with SysV init)\n  # on system boot $ sudo chkconfig --add elasticsearch # manually $ sudo -i service elasticsearch start $ sudo -i service elasticsearch stop Run Elasticsearch (with systemd)  # on system boot $ sudo /bin/systemctl daemon-reload $ sudo /bin/systemctl enable elasticsearch.service #manually $ sudo systemctl start elasticsearch.service $ sudo systemctl stop elasticsearch.service elasticsearch service command reference (elasticsearch should be running at this point):\nStart: systemctl start elasticsearch.service\nStop: systemctl stop elasticsearch.service\nTest: curl -XGET 'localhost:9200/?pretty'\nshould give you a response something like this:\n{ \u0026#34;name\u0026#34; : \u0026#34;Cp8oag6\u0026#34;, \u0026#34;cluster_name\u0026#34; : \u0026#34;elasticsearch\u0026#34;, \u0026#34;cluster_uuid\u0026#34; : \u0026#34;AT69_T_DTp-1qgIJlatQqA\u0026#34;, \u0026#34;version\u0026#34; : { \u0026#34;number\u0026#34; : \u0026#34;5.4.3\u0026#34;, \u0026#34;build_hash\u0026#34; : \u0026#34;f27399d\u0026#34;, \u0026#34;build_date\u0026#34; : \u0026#34;2016-03-30T09:51:41.449Z\u0026#34;, \u0026#34;build_snapshot\u0026#34; : false, \u0026#34;lucene_version\u0026#34; : \u0026#34;6.5.0\u0026#34; }, \u0026#34;tagline\u0026#34; : \u0026#34;You Know, for Search\u0026#34; } Getting everything setup in the SPOON\n In Openstorefront, navigate to Admin Tools -\u0026gt; Application Management -\u0026gt; System -\u0026gt; Search Control Click \u0026quot;Re-Index Listings\u0026quot; (optional) if you haven't set the elastic.server.port to 9200, you can do so now from Admin Tools -\u0026gt; App Management -\u0026gt; System -\u0026gt; System Configuration Properties  Upgrading from 2.3 to 2.4 As part of the upgrade, Metadata will be automatically converted to Attributes. This may take a while, if there is a lot of Metadata associated with the entries. The server won't be avaliable until the migration is complete.\n Pre-Deployment\n Edit /var/openstorefront/config/shiro.ini under [url] section: Confirm line \u0026quot;/images\u0026quot; is /images/* = anon If not then update it. Then restart server if it's running to apply changes.  Upgrading from 2.2 to 2.3 DI2E environments that use open am should follow JIRA ticket STORE-1243.\n Update Security - If you haven't done any customization then the easiest upgrade path is to just remove the the existing shiro.ini.\nDelete /var/openstorefront/config/shiro.ini On next server restart the application will pull the default   Keep in mind this is for environments that use the built in user management rather then an external user management. The default shiro config is set for the built in user management.\n Update Database - 2.3 includes a update to the database.\nMake sure tomcat is shutdown Make a backup of existing db  Copy /var/openstorefront/db directory to backup location  Delete all /var/openstorefront/db/databases/openstorefront/openstorefront.*.wal files (just the WAL files there maybe 1 or more) (This appears to be optional)  "
},
{
	"uri": "/dev/server-code-standard/",
	"title": "Server Code Standard",
	"tags": [],
	"description": "",
	"content": "These are special notes when making additions to the server-side code.\nJava Style Guide For most part applying the IDE Formating and it\u0026rsquo;s default warning are sufficient to follow and keep the code in-line. However, here is a lists of items to follow. Borrows ideas from https://google.github.io/styleguide/javaguide.html\nSpecial escape sequences For any character that has a special escape sequence (\\b, \\t, \\n, \\f, \\r, \\\u0026ldquo;, \\\u0026rsquo; and \\), that sequence is used rather than the corresponding octal (e.g. \\012) or Unicode (e.g. \\u000a) escape.\nNon-ASCII characters For the remaining non-ASCII characters, either the actual Unicode character (e.g. ?) or the equivalent Unicode escape (e.g. \\u221e) is used. The choice depends only on which makes the code easier to read and understand, although Unicode escapes outside string literals and comments are strongly discouraged.\nTip: In the Unicode escape case, and occasionally even when actual Unicode characters are used, an explanatory comment can be very helpful.\nSource file structure A source file consists of, in order:\n License or copyright information (Use Apache V2 on java side, GPL on front-end\u0026hellip;the whole project is GPL) Package statement Import statements Exactly one top-level class  Exactly one blank line separates each section that is present.\nWildcard imports Avoid (let the IDE handle). Let the IDE order.\nBraces Use IDE Formating. Change need to be agreed upon and update in the formatter. However, there is need for a change let the team know.\nNaming Need to be descriptive. Lower-case to start and camelCase.\n(objectowner)(objectname) Eg. componentResource Meaning: resource is part of or owned by component.\nTypically, class are label according to function. Eg. ComponentService\nPackage names: Package names are all lowercase, with consecutive words simply concatenated together (no underscores). For example, com.example.deepspace, not com.example.deepSpace or com.example.deep_space\nClass names: Class names are written in UpperCamelCase.\nClass names are typically nouns or noun phrases. For example, Character or ImmutableList. Interface names may also be nouns or noun phrases (for example, List), but may sometimes be adjectives or adjective phrases instead (for example, Readable).\nThere are no specific rules or even well-established conventions for naming annotation types.\nTest classes are named starting with the name of the class they are testing, and ending with Test. For example, HashTest or HashIntegrationTest\nMethod names Method names are written in lowerCamelCase.\nMethod names are typically verbs or verb phrases. For example, sendMessage or stop.\nUnderscores may appear in JUnit test method names to separate logical components of the name, with each component written in lowerCamelCase. One typical pattern is _, for example pop_emptyStack. There is no One Correct Way to name test methods.\nConstant names Constant names use CONSTANT_CASE: all uppercase letters, with each word separated from the next by a single underscore. But what is a constant, exactly?\nConstants are static final fields whose contents are deeply immutable and whose methods have no detectable side effects. This includes primitives, Strings, immutable types, and immutable collections of immutable types. If any of the instance\u0026rsquo;s observable state can change, it is not a constant. Merely intending to never mutate the object is not enough.\nNon-constant field names Non-constant field names (static or otherwise) are written in lowerCamelCase. These names are typically nouns or noun phrases. For example, computedValues or index.\nParameter names Parameter names are written in lowerCamelCase. One-character parameter names in public methods should be avoided.\nLocal variable names Local variable names are written in lowerCamelCase. Even when final and immutable, local variables are not considered to be constants, and should not be styled as constants.\nType variable names Each type variable is named in one of two styles:\nA single capital letter, optionally followed by a single numeral (such as E, T, X, T2) A name in the form used for classes (see Section 5.2.2, Class names), followed by the capital letter T (examples: RequestT, FooBarT).\nCaught exceptions: not ignored Except as noted below, it is very rarely correct to do nothing in response to a caught exception. (Typical responses are to log it, or if it is considered \u0026ldquo;impossible\u0026rdquo;, rethrow it as an AssertionError.)\nWhen it truly is appropriate to take no action whatsoever in a catch block, the reason this is justified is explained in a comment.\ntry { int i = Integer.parseInt(response); return handleNumericResponse(i); } catch (NumberFormatException ok) { // it\u0026#39;s not numeric; that\u0026#39;s fine, just continue } return handleTextResponse(response);  Static members: qualified using class When a reference to a static class member must be qualified, it is qualified with that class\u0026rsquo;s name, not with a reference or expression of that class\u0026rsquo;s type.\nFoo aFoo = ...; Foo.aStaticMethod(); // good aFoo.aStaticMethod(); // bad somethingThatYieldsAFoo().aStaticMethod(); // very bad  Finalizers: not used It is extremely rare to override Object.finalize. Tip: Don\u0026rsquo;t do it. If you absolutely must, first read and understand Effective Java Item 7, \u0026ldquo;Avoid Finalizers,\u0026rdquo; very carefully, and then don\u0026rsquo;t do it.\nWhere Javadoc is used Public API points. Also, on protected method. No comments on get or setters is generally needed unless there different behavior than simply wrapping field access. (Default documentation generated from IDE isn\u0026rsquo;t very helpful\u0026hellip;avoid that.)\nHowever, on DB Entities it can be useful to add documentation as to what the field is for. Also see adding APIDescription on the field as that is rendered out to the API documentation. On\nException: overrides - Javadoc is not always present on a method that overrides a supertype method.\nUse Block tags:\nAny of the standard \u0026ldquo;block tags\u0026rdquo; that are used appear in the order @param, @return, @throws, @deprecated, and these four types never appear with an empty description. When a block tag doesn\u0026rsquo;t fit on a single line, continuation lines are indented four (or more) spaces from the position of the @.\nGeneral  Business logic, Transactions, rules should be handled in the service code. (core-service) API Interface should have documentation (javadocs) SimpleDateFormat is not thread-safe create new instances; don\u0026rsquo;t make static. For decimal numbers use BigDecimal and use valueOf to instantiate. Make sure any new code is placed in the appropriate module. Be cautious of dependencies. External resources should be handled by a Manager that in-turn handles the life-cycle. Use example query framework where possible. Keep custom queries to a minimum as this allow for greater flexibility as well as type safety on the query. Which in turn make refactoring easier and reduces errors. Beware of any potential infinite loops. Pay attention to Transaction boundaries. For the most part it\u0026rsquo;s automatic but, you can carrier over transaction where it\u0026rsquo;s unintended. Prefer constants over hard coded strings. Keep constants with entity/object they relate to. For general constants use OpenstorefrontConstant. Focus comments on WHY (Business Rule) rather than HOW for internal comments. The how should be clear from the code.  Entities  Entities should have all validation annotations marked and have documentation annotations as well. Use \u0026lsquo;get\u0026rsquo; and \u0026lsquo;set\u0026rsquo; and not \u0026lsquo;is\u0026rsquo; as there\u0026rsquo;s a lot of automatic processing (reflection) on entities. Most entities should extends the standard entity. Preference is to keep model flat there cases where complex is fine. (meaning care should be taken with embedded complex classes) * Revisit in orient 3.0 If there is embedded entities, make to use Casacde, OneToX annotation. Also, beware of db issues. Note, the DB and moxy doesn\u0026rsquo;t handling List of primatives (Meaning Boxed primatives) well. Eg. List should be List Document Entities with @APIdocument to update the api docs. Prefer composition of entities in view rather than inheritance. Use inheritance for substitutability. All storage entities must be registered with the DB. This automatic for class in the entity package of the api module.  REST API  Avoid naming entity and view model fields (type or id). It can break the serialization. Use the API annotations to document the service. All REST interfaces need documentation as to purpose. All consumed entities must have a root object. Eg. String (fail), TextObject with a field String (Valid). Response also needs a root object. A GenericEntity can be used. Resource endpoints map to entities where Services act on the system or are cross entities. \u0026ldquo;Actions\u0026rdquo; supplement the API and are used for internal operations. Also, they use to handle uploads as there\u0026rsquo;s no JAX-RS standard for that.  Cache Handling  All cache handling should be done in the Services rather than leaking it up a layer of abstraction Beware to not modify cached version of the data. There is a \u0026lsquo;weak reference\u0026rsquo; to the object so it can end up applying unwanted changes. All caches should be setup in the cache manager.  Logging Each levels has a different audience. (See java Docs) Add logging message appropriate for each level. Focus on logging thing that would aid in debugging (When, What, the State was at the time of the error, and Data owner Eg. what component does it belong to)\nSEVERE - System Admin and End-User; the operation failed; something prevent normal execution; If throwing an Openstorefront error please state the error and note any thing that can be done to correct it.\nWARNING - Potential Problems, System Admin or End-users, The system should be able to continue but desired effect may not have been achieved.\nINFO - Message to System Admin usually for information about operation completed.\nCONFIG - messages are intended to provide a variety of static configuration information (Mainly initialization of a system stuff)\nFINE - Debugging information for developers.\nFINER - Detailed debugging information\nFINEST - Trace message; highly detail. If gathering the information is time consuming (CPU wise) then check logging level state first. If (log.isLoggable(Level.FINEST)).\nIf you don\u0026rsquo;t add logging it not avaliable. So we need add logging where appropriate. Typically, on anti-conditions.\nThink, \u0026ldquo;If I was troubleshooting this in production could I get enough information to solve an issue?\u0026rdquo; Log the data owner and state. Note: Tomcat\u0026rsquo;s loghandler doesn\u0026rsquo;t seem to handle \u0026ldquo;{0}\u0026rdquo; substitution. Use MessageFormat.format to handle that.\nDo not use a \u0026lsquo; in log comments as it affects the formatter. see https://stackoverflow.com/questions/22670627/java-logger-apostrophe-issues-with-tokens\nHow To Use Logging Tools Java Logging has two components:\n Logger - These are hierarchical meaning setting the level will be set by rolling upwards until the next setting.\n Handler - these are associated with a Logger\n  The logger has Level and each handler has a level. Both must be set to get the output to show the level. Logs by default show in the console output for the application server. Which is typically in /logs directory but, it can be in the var server output which install via yum.\nBuilt into the application is a DB Logger which when activated will log all components in the system. At Level ALL. Keep mind the logger may be set at a different level.\nIt will capture the logs in the DB which the Admin system logs can be used to view that.\nThe UI allows to for setting each loggers level. Setting Handler levels is not currently supported.\nNote the logging.properties file (currently not loaded) sets defaults. By default the console handler is set to INFO.\nCross Cutting Concerns Design template ask about these item.\nSecurity - Make sure permission are applied to the REST/External API and UI features.\nLogging - Security changes/sensitivity are must have an audit logging. (Log action, who performed it)\nData Restriction - Make sure data that should be restricted is and restricted at the appropriate level. This is not applied universally, as there\u0026rsquo;s complications that require specific handling.\nChange History - Entries and Evaluations are supported. Log field changes, adds, removes\u0026hellip;etc\nAlerts - Certain event must be track for administration alerts.\nUse caution when modifying the code to keep these feature/requirements intact.\n"
},
{
	"uri": "/applicationadmin/securityroles/",
	"title": "Security Roles",
	"tags": [],
	"description": "Security Roles",
	"content": "Security Roles define what permissions users get in the application. Several default roles are set up with default permissions and are listed below. These can be reset to default or altered as needed. New roles can also be added.\nTOC 1. Default Roles and Resetting to Default\n2. Default Permissions (300+)\n3. Overlapping Permissions\n4. Default Data Restrictions\n1. Default Roles and Resetting to Default When setting up an instance of SPOON it comes with a few default roles as described below and as shown in Admin Tools \u0026rarr; Application Management \u0026rarr; Security Roles on the website (must be logged in as an administrator to view)\n   SECURITY ROLE NAME EXPLANATION DEFAULT PERMISSIONS NOTES     GUEST-GROUP Permissions for guest when they come to the site directly via URL, such as to view an entry. NO Extra Permissions   DEFAULT-GROUP What all users get and are a member of. Baseline permissions. A few, limited Permissions   SME_Approver SME Role for Approving Entries See dashboard pending requests. Approve Requests for new entries and change requests.   STOREFRONT-Librarian Data management librarian permissions Many Administrator Permissions   STOREFRONT-Admin Website administrator, super permissions group ALL Permissions    If these permissions get changed and you would like to reset them to the default (new installation) defaults, please do the following:\n Go to Admin Tools \u0026rarr; Application Management \u0026rarr; System and click on the Application State Properties tab. Locate the Key Security-Init_v2_LASTRUN_DTS and click Edit Delete all of the text in the value box and click Save Repeat the prior two steps for the Security-Init_v2_STATUS key. The pre-made groups shown above (SPOON-Admin, etc.) are now reset to their new installation defaults.   GO TO TOP\n2. Default Permissions The following details the default permissions and what users in these security role groups can do.\n   ABILITY OR PERMISSION TO: GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin     API        Ability to see API documentation        ALERTS        Ability to Read all Alerts        Ability to Create new Alerts        Ability to Delete Alerts        Ability to Update Alerts        Access the admin Alerts Page        ATTRIBUTES        Create new Attributes        Delete existing Attributes        Update existing Attributes        Access to the admin Attribute page        Manage attributes on entries from the admin tools manage assignments tool        Create attribute types        BRANDING GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create new Brandings        Delete Brandings        Access to the admin Branding page        Update Brandings        CONTACTS        Create Contacts        Delete Contacts        Update existing Contacts        Access to the admin Contacts page        DASHBOARD GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Dashboard Page        View the Entry Status Widget        View the Evaluation Status Widget        View the Notifications Widget        View the Outstanding Feedback Widget        View the Pending Approvals Requests widget        View the Questions Widget        View the Reports Widget        View the Saved Search Widget        View the Submission Status Widget        View the System Status Widget        View the Recent User Data Widget        View the User Status Widget        View the Watches Widget        ENTRIES GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin Entries Page        Ability to Approve an Entry        Ability to Read Entries        Approve an Entry        Assign a Librarian to a Component (Entry)        Attribute Management of Entry        Change Owner of the Entry        Manage Change Requests        Change an Entry Type        Manage Entry Comments        Contact Management        Create Entries        Delete and Existing Entry        Manage Evaluation Sections        Export an Entry        Media Management        Merge two Entries Together        Read Pending Changes        Relationship Management for Entries        Resource Management for Entries        Tag Management        Toggle Status (Active/Inactive) of an Entry        Update Existing Entry        Delete Entry Version        Read Entry Version        ReSPOON Entry Version        ENTRY TEMPLATES GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Read Entry Templates        Create Entry Templates        Read Entry Templates        Update Entry Templates        Access to Entry Templates Page        ENTRY TYPES        Create Entry Types        Delete Entry types        Update Entry Types        Access Admin Entry Types Page        EVALUATION (ADMIN)        Access to the Admin Evaluator Management Page        Activate an Evaluation        Allow New Sections        Allow Question Management        Delete a Comment        Create an Evaluation        Delete a Evaluation        Publish just the Summary        Publish or Unplublish an Evaluation        EVALUATION (USER) GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Evaluator Management Page        Allow Evaluator to View an Evaluation        Allow Evaluator to Assign a User to an Evaluation        Allow Evaluator to Edit an Evaluation        EVALUATION TEMPLATES        Access to the Evaluation Templates Page        Read Evaluation Templates        Create Evaluation Templates        Delete Evaluation Templates        Update Evaluation Templates        EVALUATION TEMPLATES CHECKLIST QUESTIONS        Access to the Evaluation Templates Checklist Questions Page        Read Eval Template Checklist Question Items        Create Template Checklist Questions        Delete Template Checklist Questions        Update Template Checklist Questions        EVALUATION TEMPLATES CHECKLISTS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Evaluation Templates Checklists Page        Read Evaluation Template Checklist Items        Create Evaluation Template Checklist Items        Delete Evaluation Template Checklist Items        Update Evaluation Template Checklist Items        EVALUATION TEMPLATES SECTIONS        Access to the Evaluation Section Page        Read Evaluation Template Checklist Items        Create Evaluation Template Sections        Delete Evaluation Template Sections        Update Evaluation Template Sections        FAQs GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin FAQ page        Read FAQs        Create FAQs        Delete FAQs        Update FAQs        FEEDBACK        Access Admin Feedback Page        Read Feedback        Remove Feedback        Modify Feedback        HIGHLIGHTS        Create Highlights        Delete Highlights        Access to the Highlights page        Update Highlights        IMPORT / EXPORT        Ability to Import and Export        Access to the admin Import Export Page        INTEGRATIONS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Integration Page        Read Integration        Create Integration        Remove Integration        Ability to Integrate with external sources        Run all Integrations        Run the Integration Configuration        Allows for Running One Integration        Toggle Active/Inactive Integration Status        Update Integration        JOBS        Read Jobs        Perform some action with a Job        Remove a Job        Access to Admin Jobs Page        LOOKUPS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access the Lookups Page        Read Lookups        Create Lookups        Delete Lookups        Update a Lookup        MEDIA        Delete Media        Access to the admin Media Page        Upload Media as Admin        Upload Support Media        MESSAGES        Read User Notification Data        Post New User Notification Event        Delete User Notification Event        Update User Notification Event        Access to the admin Messages/Notification page        NOTIFICATION EVENTS        Post New Admin Notification Event        Delete Admin Notification Event        ORGANIZATIONS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create Organization        Delete Organization        Organization Extraction        Merge Two Organizations        Access the Admin Organization Page        Update Organization        PROFILE MANAGEMENT        Read User Profiles        Delete User Profile        Update User Profile        Access to admin User Profiles Page        Access to User Profile Page        QUESTIONS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access admin Questions Page        Read Questions on Entries        Delete Questions on Entries        Update Questions on Entries        Access to the User Questions Page        RELATIONSHIPS        Access to the admin Relationships Page        Access to the User Relationships Page        REPORTS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   General Reports Read        User Run Report as Attached Email        User Run Report as Content of Email body        View Reports From All Users        Create New Report        Delete a Report        Access to the Reports Page        Run the Action Report        Run Entries by Category Report        Run Entries by Organization Report        Run Entry Detail Report        Run Entry Listing Report        Run the Entry Report        Run the Entry Status Report        Run the Evaluation Status Report        Run the Link Validation Report        Run the Submissions Report        Run the Usage Report        Run the User by Organization Repeat        Run the User Report        Run the Workplan Status Report        REPORTS SCHEDULE GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create Scheduled Reports        Delete Scheduled Reports        Read Scheduled Reports        Edit Scheduled Reports        REVIEWS        Access to the Admin Reviews Page        Read Reviews        Delete Reviews        Update Reviews        Access to the Reviews Page        ROLES        Ability to Read Security Roles        Create Security Roles        Delete Security Roles        Update Security Roles        Access to Admin Security Roles Page        SEARCH MANAGEMENT GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Read all Searches        Create a Search        Delete a Search        Update a Search        Search Page (User)        SECURITY        Access to the Admin Security Page        Access to the Security Policy Tab        Access to the Shiro Config Tab        SUBMISSIONS (ADMIN) GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to Partial Submissions Page        Access to Admin Custom Submission Form Template Page        Read Submission Form Templates        Create Submission Form Templates        Delete Submission Form Templates        Update Submission Form Templates        Read User Submissions        Delete User Submissions        Update User Submissions        SUBMISSIONS (USER)        Access to the User Submissions Page        Read User Submissions        Create Change Requests        Create User Submissions        Delete User Submissions        Update User Submissions        SYSTEM GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin System Archives Page        General System Administration Permission        Update Application Properties        Create System Archives        Delete System Archives        Manage System Archives        Access to System Cache        Remove/ Clear Operations for the System        Read Application Meta Data        Update System Configuration        Error Ticket Management        Permission Logging        System Managers        Management of Plugins        System Recent Changes        System Search Management        System Stand By        System Status        Access the Admin System Page        TAGS GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Access to the Admin Tags Page        TRACKING        Access to the Admin Tracking Page        Read Tracking        Delete Tracking from an Item        Update Tracking on an Item        USER MANAGEMENT        Access to the Admin User Management Page        Read other User's Submissions        Approve other User's Submissions        Create Submissions for Users        Delete other User's Submissions        Update other User's Submissions        WATCHES        Access to Admin Watches Page        Read Watches        Delete Watches        Update WAtches        Access to the User Watches Page        WORKPLAN GUEST-GROUP DEFAULT-GROUP SME-Approver STOREFRONT-Librarian STOREFRONT-Admin   Create Workplans        Delete Workplans        Access to the Workplans Page        Read Workplans as Administrator        Update Workplans        User can view current status of selected record in a workplan        WORKPLAN PROGRESS MANAGEMENT        Get Submission Comments for Role        Enable Assigning and Unassigning to Admin        Assign Any Entry to Any User        Enable Updating of Workflows        View Your Group Workflow Links        View ALL Workflow Links        Update Workflows        View Workplan Progress Management Page         GO TO TOP\n3. Overlapping Permissions What happens if a user is a part of more than one Security Role? If a user is part of multiple security roles, such as a SME-Approver and STOREFRONT-Librarian (and the Default Group as all users are) then if a particular permission is granted to one group, it is granted (ANDed) to the user. For example:\nIf user \u0026quot;bobsmith\u0026quot; has the Security Roles of SME_Approver and STOREFRONT-Librarian he will see anything that either of these roles have permission to such as the User Watches Page, the Ability to Approve an Entry, or Change the Ownder of the Entry. See table below.\n    ABILITY OR PERMISSION TO: DEFAULT-GROUP SME-Approver SPOON-Librarian Bob Smith's (ANDed) Access     Access to the User Watches Page       Ability to Approve an Entry       Change Owner of the Entry       Access Admin Jobs Page        GO TO TOP\n4. Default Data Restrictions To use these you MUST mark each individual entry or component in the database with the appropriate markings. This admin area only serves to mark which Security Roles have access to which distributions.\n Data restrictions, if used, restrict users to seeing certain entries. These are all turned OFF (disabled) by default.\nData Sources    ENABLED CODE DESCRIPTION      AEROSPACE_IMPORT Aerospace Import Entries    DI2E DI2E Component Entry    ER2 ER2 Asset    Data Sensitivity    ENABLED CODE DESCRIPTION      DISTRO A Government Distribution A    DISTRO B Government Distribution B                   DISTRO F Government Distribution F                   GO TO TOP\n"
},
{
	"uri": "/evaluations/evaluator/storefront-evaluators-guide/",
	"title": "Evaluators Guide",
	"tags": [],
	"description": "",
	"content": "This is a complete overview of the user interface to make an Evaluation on SPOON.\nNote: 2.6 Introduced some UI changes however, processes and concepts are the same.\nTL;DR  Administrators create and publish evaluations. Evaluators fill out evaluations. While editing an evaluation you will not see exactly what the user sees. The user sees things bundled under a Details tab and an Evaluation tab. In an evaluation everything under the Entry section applies to that Details tab while everything under the Sections and Checklist sections apply to that Evaluations tab. Storefront assumes you know what all of the various questions mean, what the asset types available to you mean, and how your implementation of Storefront works. If you don\u0026rsquo;t, ask your administrator.  Overview In this guide we will go over how to correctly add information to an evaluation inside of the Storefront. All of the information in this guide has been developed for version 2.5 (2017-07-26 15:03:18 MDT). The general process of doing evaluations will be the same for previous versions but some of the specifics may be different.\nEntries that have been added to storefront can be evaluated. Entries can be added via user submission from the User Tools area or directly added by an administrator. Go here for a quick overview of how to submit a new entry.\nAny entry can have multiple evaluations and each evaluation will be tracked separately. This allows for multiple versions of a software package or service to be evaluated based on the same entry. Each evaluation is based on a template defined in advance by the administrator and the template determines everything from the look and feel of the evaluation to the questions that will be asked.\nWho is this for? This guide is for anyone who will be performing an evaluation on the Storefront application. We will cover a general work flow and use that to discuss intent and best practices. Please note that the exact work flow for any given evaluation will depend on the template used to create that evaluation. Thus you will need to contact your administrator for any questions related to your particular work flow.\nStorefront assumes that people doing the evaluations have familiarity with the system and, more importantly, with how your organization uses your data.\nBefore you begin Make sure your administrator has created an evaluation for you to use and that you are part of the STOREFRONT-Evaluators group (or equivalent).\nFor our example below we created templates based on the information here.\nGeneral Process For this demo we will be doing an evaluation of a fictional repository called the Contoso Repository (name taken from examples from Microsoft). An entry for the repository has been approved and added to Storefront, and an empty evaluation (based on the above template) has been created. As the evaluation has not been published it doesn\u0026rsquo;t show up on Storefront but the entry it is based on does.\nTo start an evaluation, click on your user name in the upper right corner of the page and select Evaluation Tools. From the Evaluation Tools Dashboard click the Evaluations button. By default, the list will only show you evaluations that you have been assigned to. In our example, the evaluation was assigned to the general STOREFRONT-Evaluators group and not to any particular user. Therefore, to get the evaluation to show up, change Assigned User to All and change Assign to Group to STOREFRONT-Evaluators.\nIt is best practice to assign yourself to any evaluation you are working on. This helps you to find it later and helps to signify which evaluations have been started and which have not. To do so, first select the evaluation from the list and click on the Assign User button and pick yourself from the window that pops up before clicking Save.\nTo start working on an evaluation select it from the list and click on the Edit button. Evaluations will always open up to the Evaluations Info section.\nOn the left hand side of the window you will see blue boxes which will take you to all of the available sections of the evaluation. The center of the window shows details for the currently selected section. On the right of the window is an expandable section for comments. Comments can be added to almost any section of an evaluation, but the comments will not be visible on the final published evaluation. The intention of the comments is for review, approval, communication, etc. amongst the evaluation team.\nThe exact set of sections for any particular evaluation is dependent on how your system has been configured and how the templates were set up. That said, all evaluations will, generally, have at least the sections shown above. We will now talk about each of these sections, although the order presented does not imply that an evaluation should be done in this order. It is expected that an evaluation is going to be an iterative and non-linear process.\nThe difference between an entry and an evaluation needs to be emphasized. While performing an evaluation you will have the opportunity to correct and update information about the entry as well as the evaluation. One way of thinking about the difference is to look at what happens once an evaluation is published. All information related to an entry will show up in the Details tab. All information relating to a particular evaluation will be under the Evaluations tab. When looking at editing an evaluation, everything under the Entry header applies to that Details tab while everything under the Sections and Checklist headers apply to that Evaluations tab.\nEvaluation  Info This section gives you a high level status about the evaluation itself. Here you can change the version of the evaluation. How to best use the Version of an evaluation will be dependent on your particular implementation.\nThe Status of an evaluation can be Open, In-Progress, Waiting for more information, Hold or Complete. It is best practice to update the status of an evaluation here whenever it changes. However, the status on this page, or any other page of the evaluation, is for the benefit of the evaluator and does not impact if or how an evaluation can be published by an administrator. Also note that even if an evaluation is marked as Complete that it will NOT be published into the Storefront search results. An evaluation will only be so published if an administrator publishes an evaluation.\nChanges to the elements on this page are automatically saved when the changed field loses focus.\n Review\nAll of the comments people make on your evaluation are listed here. If desired, you can mark any particular comment as acknowledged, or edit/delete any comment, or even reply to comments. None of these comments will show up in the final published evaluation.\n  Entry  Summary\nThis summary is for the entry. Here we want to describe what the entry is, what it does, how it does it, and any other info to help show why people might be interested in it. This should be an objective condensation of the facts of the entry and not just a copy and paste of the marketing materials. It is also important to make sure that only publicly available material is added to any of these entries. Finally, it is important to note that this information is NOT related to any particular evaluation.\nIf possible, add information about when the latest release happened and what version that release was.\n Attributes\nAttributes are used to categorize an entry, build category relationships, and improve searching. Available attribute types and codes are setup by an administrator and are controlled, in part, by the template used to create the evaluation and the entry type. Each entry should have as many attributes added to it as make sense for that entry. It is important that attributes are carefully curated for each entry. Some attribute types can be added only once, while others can be added multiple times (the expectation is that each entry would have a different attribute code).\nThe best practice is to use elements from the drop downs on the attribue code or stick to a pre-determined list of entries for free-form fields. Other information is better placed into the Contacts, Resources, Media, or Tags sections. In other words, semantics for the attribute codes must be determined ahead of time and you need to refer to those external semantics when determining which attribute to add.\nTo add a new attribute, select the appropriate attribute type from the list and then select or fill out the attribute code and click save.\nUltimately, attributes become Entry Vitals on the Details tab for an entry. Here is an example:\n Relationships\nRelationships show how various entries are related to one another. This helps with discovery of entries while searching. A thorough knowledge of existing entries is usually needed to add good entries here, but can be useful if done correctly.\n Contacts\nThis section lets you manage all of the people related to the entry. If an entry was user submitted, then their contact will already be present. If possible, you should always have a technical or vendor Point Of Contact. Add other contacts here as appropriate and available.\nGenerally, when you have the option of having an item added as an attribute or as a contact, it is better to add it as a contact.\nUltimately, contacts become Points of Contact on the Details tab for an entry. Here is an example:\n Resources\nThe resources section is for managing links, documentation, etc. pertaining to the entry. Various specific resource types will be available, depending on the configuration of your system. At a minimum, you should ensure that there is a link to the homepage of the entry. Relevant documentation not otherwise available on the web, but still marked for distribution, can be uploaded here as well.\nGenerally, when you have the option of having an item added as an attribute or as a resource, it is better to add it as a resource.\nUltimately, resources become Location of Entry Artifacts on the Details tab for an entry. Here is an example:\n Media\nThe media section is for adding media specific to the entry in general. The media for an evaluation is different from the media for an entry. Media added from other sections in the Entry set of sections will show up to be managed here.\nThis is where you should add screenshots and videos related to the entry. Videos should be in mp4 format as they can be shown directly in the site. Other video formats will need to be download by the users.\nYoutube or external videos should be added in the \u0026ldquo;Resource\u0026rdquo; section and not here. This sections is for direct links to the media.\nNote: Media added to the Entry Summary section should typically be hidden from the carousel by checking the appropriate box for that media.\n Tags\nAnyone can add tags to an entry at any time. This screen allows an evaluator to add new tags or manage existing tags. Tags are searchable and filterable on Storefront, so it is important that tags are properly curated.\n  Section  Repo Overview (An basic example section)\nThis is an example of a very basic custom section. Some templates will include a variety of sub-sections or other custom formatting. Generally, the sections allow you to focus on different aspects of the evaluation as determined by your implementation.\nThe text box is a rich text box which means it supports formatting, images, tables, equations, code snippets, etc. The top of the text box has tools that you can use but it also supports the normal keyboard shortcuts (like Ctrl + B for bold). If you make a change and click off to a different section your changes will be lost! If you want to save your changes you can either click the save button at the bottom of the text box or change the status at the bottom of the window. However, your changes should auto-save after a timeout which is set to take place a minute or so after the last made change.\nMedia (pictures, videos, etc.) that have been added to one of these sections can be managed from the \u0026ldquo;Manage Media\u0026rdquo; button in that section. This is for diagrams or screenshots that are part of the section and are discussed in that section. There is no general media collection for an evaluation as a whole.\n Private Notes (A more complex example section)\nHere is an example of a more complex section template where the base section contains sub-sections. Again, changes made to any of the sub-sections will NOT be automatically saved. You must click the Save button at the bottom of the window to save your changes.\nIt is usually safe to assume that anything added to an area labeled Private Notes will not be published with the final, user facing, evaluation.\n  Checklist  Summary\nThis summary is for the evaluation. After having investigated the entry, the summary should be filled out to summarize that investigation and the results thereof. The evaluator should put in their own words their experience of the evaluation. This would be the narration of part of a consumer report. It should summarize what was found in the checklist questions. (E.g. The asset was easily discoverable however, we found the documentation was lacking.) It is important to both remain objective and to realize that this is not just a regurgitation of the original entry summary. One way of thinking about it is that the entry summary tells you what the entry should be about, but this summary tells you what an entry was actually about.\nThe Recommendations section is where you can list your recommendations for improvements about the entry. The intention is to communicate back to the source of the entry what you think should be done to make what they are doing better. These recommendations must be categorized into one of a set of options:\n All Questions\nThis section gives a sortable and modifiable listing of all of the questions associated with your evaluation. As every question can have a status assigned to it you can use this overview to quickly find those questions that haven\u0026rsquo;t yet been answered or are on hold if you are coming back to continue working on an evaluation.\nTo edit a question either click on it once to select it, then click Edit, or double click on the question. The window that comes up to answer that question will be similar to, but different from, the window that is available if you click on the question in the left hand sidebar. The biggest gap is that there is no way to display the scoring criteria from the pop up window. To get the scoring criteria you have to turn the column on in the table or click on the question in the sidebar.\n Discoverable (An example question)\nHere is an example of a typical question. All questions are rated on a 1 to 5 rating scale with 5 being the best possible, 3 being normal and acceptable, and 1 being completely non-conforming. A typical question will have scoring criteria to help an evaluation be objective and consistent, an objective to help evaluators consider the same intent when looking at a question, the question itself, a free form response area, and private notes.\nIt is best practice for every question to have an associated response explaining why a question was scored as it was. Even if the scoring criteria appears to be clear and unambiguous, there is always more to the story than what can be said with only one number. The response area is where you should tell that story. In terms of worth, the response is generally more valuable than the number assigned.\nPrivate notes are for use by the evaluator. Nothing in the private notes section will be visible on the final published evaluation. That said, the notes will be preserved for later reference.\nNOTE: Changes will NOT be saved unless you click on the Save button, change the status, or wait for the auto-save.\n  Once published, our sample entry looks like this:\nDetails\nEvaluation\n"
},
{
	"uri": "/user/",
	"title": "User",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/evaluations/evaluator/faq/",
	"title": "FAQ",
	"tags": [],
	"description": "",
	"content": "Frequently Asked Questions by/for Evaluators\nQuestion\nDo sub-sections save independent of other sub-sections?\nAnswer\nSection (Eg. Architecture) may be broken in multiple sub-section. Saving save all sub-sections. So if your are edit more than one on multiple browser tabs. Keep in mind you changes will override changes in another tab. It\u0026rsquo;s recommended to only edit in one browser tab and one browser at a time. Use change history to find resolve previous issues.\nQuestion\nWhat\u0026rsquo;s the difference between in Entry and Evaluation?\nAnswer\nAn entry is like an abstract of listing item. An entry can have multiple evaluations. Think about it this way. Microsoft Produces a product call Word. The entry is would be about Word and not a specific version. The evaluation however is about a specific version.\nEg. Evaluating Word 2016 and this the installation, test, architecture and checklist for that version.\nAs an evaluator, it expected that they will update the entry as needed to describe the product. (It contacts, the general description, resources\u0026hellip;where to download..etc) That entry updated by the evaluator upon publish are incorporated into the entry. With the evaluation being the version specific information. Use the Evaluation summary to describe the product from the evaluator experience. Eg. Was is easy to use? Was the support responsive? etc.\n"
},
{
	"uri": "/evaluations/librarian/createevaluationguide/",
	"title": "Create an Evaluation",
	"tags": [],
	"description": "",
	"content": "This guide goes over creating Section templates, Checklist questions and templates, and Evaluation templates. This guide assumes a librarian has a basic understanding of what an entry is and has an entry that needs to be evaluated. Once the librarian has created checklists and templates, an evaluation can be created.\nWho is this for? This guide is for anyone with the role of librarian or administrator. If unsure of current role(s), contact an administrator.\nBefore Starting an Evaluation Librarian has an entry that needs to be evaluated or reevaluated.\nStep 1: Creating a Section Template Go to Evaluation Management \u0026rarr; Templates \u0026rarr; Section Templates\nA Section template allows a librarian to create a custom layout for an evaluation form. The librarian can give each section a title and a description of the section. Subsections can be added to individual sections and require the librarian to enter a title.\nThe Private, Hide Title, and No Content flags are optional. The Default Content section is for the librarian to give instructions to an evaluator. The Default Content text area is optional but recommended. A librarian is able top add custom fields to a subsection by clicking on the Add Custom Field button.\nDescription of Flags:\n Private: section/subsection will be filled out by an evaluator but content will be hidden from the user. Hide Title: title of section/subsection will be hidden from user. No Content: removes the evaluator\u0026rsquo;s ability to input content under a section header.  Step 2: Adding Checklist Questions Go to Evaluation Management \u0026rarr; Templates \u0026rarr; Checklist Questions\nBefore creating a Checklist Template, the librarian will need to create a question pool. A question will be answered by an evaluator when performing an evaluation on an entry. To create a question, the librarian will fill out an Add/Edit Question form. The following is a detailed list of the fields on the form:\n QID: an identifier that is unique across all evaluations (Required Field) Add Tag: allows a librarian to categorize sets of questions. This helps a librarian to create a checklist template based on a specific category. Tags are not visible to evaluators and end users. Section: a way to categorize question for the end user. These sections are created under the Lookups section of the application. Question: text area for the actual question. Narrative: a detailed explanation about the question. Objective: the purpose or goal of the question. Score Criteria: a definition of what scores mean (Example: 5 = Excellent, 4 = Good, 3 = Average, 2 = Below Average, 1 = Poor).\nBy default the scores are 1-5 without meaning.  Save the question when form complete.\nNote: Changing/editing a question will affect both published and unpublished evaluations. This is helpful if a question needs only a minor change, such as a typo. If you are going to completely reword the question or change its meaning, it is recommended that a new question be created.\nStep 3: Creating Checklist Templates Go to Evaluation Management \u0026rarr; Templates \u0026rarr; Checklist Templates\nA Checklist template allows a librarian to group questions related to a particular evaluation. Under the Details tab of the Add/Edit Checklist Template form, the librarian gives the template a name and a description of the template\u0026rsquo;s purpose. An optional text area exists if the librarian would like to provide further instructions to an evaluator on what to fill in. Instructions are optional.\nThere is an optional checkbox called \u0026ldquo;Update unpublished Evaluations.\u0026rdquo; If checked, any changes made to the checklist template will be applied to any unpublished evaluation using the template. Under the Questions tab of the Add/Edit Checklist Template for, the librarian will drag questions from the Question Pool to Questions in Template. Questions can be filtered based on a specific category or tag name. Questions can be rearranged by dragging and dropping them in any order.\nOnce the form is complete, save the template.\nStep 4: Creating Evaluation Templates Go to Evaluation Management \u0026rarr; Templates \u0026rarr; Evaluation Templates\nThe Evaluation template is a snapshot of what the evaluation will look like to an evaluator. On the Add/Edit Evaluation Template form, the librarian will first give the template a name and description. The second thing is to select the appropriate Checklist Template for this evaluation. If the librarian would like future changes/edits to the template to be reflected on unpublished evaluations, the Update unpublished Evaluations box should be selected, otherwise leave unchecked. The last thing the librarian will need to do is select the type of sections that will appear in the evaluation. Drag and drop sections from the Section Pool to the Sections in Template to add a section to evaluation. Under Sections In Template, the librarian can rearrange the order in which sections will appear on the evaluation by dragging and dropping. Once the form is filled out completely, save the template.\nStep 5: Create Evaluation Go to Evaluation Management \u0026rarr; Evaluation\nTo add an evaluation, the librarian will fill out the Create Evaluation form. An evaluation requires there to be an entry. The librarian will select an evaluation template and give the version number of the evaluation. It is recommended that the version number match the entry\u0026rsquo;s version number. A status is applied to the evaluation and the types of statuses are controlled in the Lookup section of the application.\nThe librarian can then assign the evaluation to a specific group and/or user. By checking the Allow Adding Sections box, the librarian is giving permission to the evaluator to add sections/subsections to the evaluation as he or she deems necessary. By checking the Allow Question Management checkbox, the librarian is giving permission to an evaluator to add questions from the question pool to the evaluation and/or to remove questions currently assigned to the evaluation.\nWhen the Create Evaluation form is complete, save the evaluation.\nCopying an Evaluation Librarians have the ability to make copies of both published and unpublished evaluations.\nNOTE: Copying an unpublished evaluation will NOT copy the entry changes. The copy only points back to the entry in its original state.\n"
},
{
	"uri": "/evaluations/librarian/publishinganevaluationguide/",
	"title": "Publish an Evaluation",
	"tags": [],
	"description": "",
	"content": "This guide goes over the different types of publishing and the various scenarios a librarian may run into when publishing an entry/evaluation.\nDifferent types of publishing:\n Entry publishing - publishes the entry summary only Partial publishing - publishes all default public fields except for those that have been marked as private. Full publishing - publishes all default public fields.  Reminder: an entry is a single entity that can have one to many evaluations. \u0026nbsp; An evaluation can include multiple sections, a checklist summary, recommendations, and questions. \u0026nbsp; An entry can have a description, contacts, media, resources, tags, relationships, and dependencies\nWho is this for? This guide is for anyone with the role of librarian or administrator. \u0026nbsp; If unsure of current role(s), contact an administrator.\nResolving Conflicts A librarian may run into a conflict between multiple evaluators evaluating the same entry. \u0026nbsp; To resolve this type of conflict use the change history tool to help determine the desired content.\nIf the conflict is related to the entry, view the entry\u0026rsquo;s history by doing the following:\n Go to Entries under Data Management Select the entry and click on the Edit button On the entry form, click on the Change History button  If the conflict is related to the evaluation, view the evaluation\u0026rsquo;s history by doing the following:\n Go to Evaluations under Evaluation Management Select the evaluation and click on the Edit button On the evaluation form, click on the Change History button  Another conflict the librarian may run into is multiple change requests. \u0026nbsp; To resolve conflicts between change requests use the entry change request tool to edit and approve changes.\n Go to Entries under Data Management\n Select the entry and click on Change Requests under the Action drop-down menu\n Use the form to compare the current state of the entry to the proposed changes in the request. Use the toolbar to approve change requests, delete change requests, edit entries, and sending messages to the submitter of a change request.  Common Publishing Scenarios Encountered By Librarians Scenario 1 An evaluator has completed an evaluation on an approved entry. \u0026nbsp; There are no change requests pending for the entry and all conflicts have been resolved.\nSolution: \u0026nbsp;Librarian publishes the evaluation. \u0026nbsp; (Note: When an evaluation is published, the approved entry is replaced with the evaluation entry)\nScenario 2 The evaluation is complete for an approved entry, but the librarian or administrator needs to make a change to the entry.\nSolution: \u0026nbsp;Librarian or administrator will need to make the desired changes on the evaluation. \u0026nbsp; After the changes are made and the evaluation has been saved, the evaluation can be published.\nScenario 3 An approved entry is in the process of being evaluated, but the librarian or administrator has just received a change request from the entry\u0026rsquo;s submitter.\nSolution: \u0026nbsp;The librarian will need to handle two separate change requests: submitters\u0026rsquo; change request and the evaluation change request. If the librarian decides to approve the submitter\u0026rsquo;s change request, the librarian will also need to manually update the evaluation change request to match the approved changes. If the evaluation change request is approved, the system will create a new submission based on the current evaluation.\nScenario 4 The evaluator has begun the evaluation for an entry but due to lack of information can only fill in the summary section. \u0026nbsp; There should be open dialog at this point between the librarian and the evaluator.\nSolution 1: \u0026nbsp;the librarian can publish the evaluation summary only and leave the evaluation in an unpublished state. \u0026nbsp; If there is partial information worth hanging on to, change the evaluation\u0026rsquo;s workflow status to On Hold (Note: DO NOT delete the evaluation).\nSolution 2: \u0026nbsp;the librarian can publish the evaluation and then delete the evaluation if the partial information is not worth saving.\nScenario 5 The evaluator has filled in the majority of the sections but was unable to install the software.\nSolution: \u0026nbsp;the librarian should mark the install section as private and then publish the evaluation.\nScenario 6 The evaluator has completed an evaluation on a pending entry.\nSolution: \u0026nbsp;the librarian should publish the evaluation. \u0026nbsp; By publishing the evaluation, the entry is updated with the evaluation\u0026rsquo;s information and the entry\u0026rsquo;s status is changed from Pending to Approved.\nScenario 7 The librarian has published an evaluation for an approved entry, but the owner of an entry has submitted a change request.\nSolution: \u0026nbsp;the librarian should approve the change request and the entry will be updated.\nScenario 8 An evaluation is in progress on a pending entry, but the librarian needs to make a change to the entry.\nSolution: \u0026nbsp;the librarian should make changes to the evaluation NOT the entry.\nScenario 9 The librarian has published an evaluation for an approved entry, but the asset or component has changed and it affects the evaluation.\nSolution 1: \u0026nbsp;librarian should unpublish the the evaluation, make desired changes, and then republish.\nSolution 2: \u0026nbsp;if the changes made to the entry warrant a new evaluation, the librarian should either copy the published evaluation and edit it or create a new evaluation for the entry.\nScenario 10 An evaluation has been published for a pending entry, but the librarian needs to make changes to the entry.\nSolution: \u0026nbsp;the librarian should update the entry in under Data Management \u0026rarr; Entries and leave the evaluation published. \u0026nbsp;After making changes, approve the entry. \u0026nbsp;Note: the published evaluation will not be searchable by users until the entry is approved after changes made.\nScenario 11 The librarian needs to make changes to an approved entry with an unpublished evaluation but cannot publish the evaluation because it is not ready for a full or summary publication.\nSolution 1: \u0026nbsp;the librarian should manually apply changes to both the approved entry and the unpublished evaluation.\nSolution 2: \u0026nbsp;if the evaluation\u0026rsquo;s entry can be published, publish the summary first and then update the actual entry under Data Management \u0026rarr; Entries. Note:\u0026nbsp; The next time the evaluation is edited, it will create a new change request based on the current entry.\n"
},
{
	"uri": "/applicationadmin/",
	"title": "Application Admin",
	"tags": [],
	"description": "The application administrator is the DI2E website administrator.",
	"content": ""
},
{
	"uri": "/systemadmin/",
	"title": "System Admin",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/dev/",
	"title": "Developer",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/evaluations/",
	"title": "Evaluations",
	"tags": [],
	"description": "",
	"content": " Evaluator Librarian "
},
{
	"uri": "/",
	"title": "SPOON Documentation",
	"tags": [],
	"description": "",
	"content": " SPOON Documentation SPOON (SmallSat Parts On Orbit Now) is cataloging system used to catalog small satelite parts. Users can search parts by user defined tags, attributes such as mass or diameter, category type such as propulsion or power, and organization. SPOON also provides the ability for vendors to input parts into the database.\nSee spoonsite.github.io for documentation on the latest release.\nAn instance of this application is running at spoonsite.com\nSPOON was initially developed as Openstorefront for DI2E. This documentation uses SPOON, Storefront, and Openstorefront interchangeably.\nSPOON is developed by Space Dynamics Laboratory and is licensed under GPL V3 (See NOTICE.txt).\n"
},
{
	"uri": "/_header/",
	"title": "SPOON",
	"tags": [],
	"description": "",
	"content": "SPOON Documentation "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]